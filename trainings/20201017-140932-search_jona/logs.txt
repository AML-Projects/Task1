20201017-140932	Task 01 - Regression
20201017-140932	Info: Environment: describe the run
20201017-140932	Info: Shape of training_samples: (1212, 832)
20201017-140932	Info:             x0             x1  ...           x830           x831
id                             ...                              
0.0  10.891876  832442.812375  ...   85338.558539  103088.664210
1.0  11.512994  832442.898114  ...   95695.020645  105161.109422
2.0  11.052185  832442.896307  ...   80253.299882  104177.051666
3.0  11.642076            NaN  ...            NaN  102746.516920
4.0  10.407121  832442.831424  ...  101815.745499  105163.749149

[5 rows x 832 columns]
20201017-140932	Info: Shape of training labels: (1212, 1)
20201017-140932	Info:         y
id       
0.0  71.0
1.0  73.0
2.0  66.0
3.0  55.0
4.0  67.0
20201017-140932	Info: Shape of test samples: (776, 832)
20201017-140932	Info:             x0             x1  ...           x830           x831
id                             ...                              
0.0   9.101943  832442.839400  ...            NaN  106668.615874
1.0  11.722077  832442.826314  ...  100761.264268            NaN
2.0  11.200277  832442.820359  ...  106440.456728  103405.273232
3.0   9.668873  832442.820901  ...            NaN  100531.960204
4.0  10.329962  832442.871842  ...  109797.625066  104849.648797

[5 rows x 832 columns]
20201017-140932	Info: Training initialized
20201017-140932	Number of loops: 64
20201017-140932	Info: Imputer initialized
20201017-140932	Info: Imputation result with median imputation for x_train: 

20201017-140933	Info:          0              1    ...            830            831
0  10.891876  832442.812375  ...   85338.558539  103088.664210
1  11.512994  832442.898114  ...   95695.020645  105161.109422
2  11.052185  832442.896307  ...   80253.299882  104177.051666
3  11.642076  832442.860041  ...   99802.127899  102746.516920
4  10.407121  832442.831424  ...  101815.745499  105163.749149

[5 rows x 832 columns]
20201017-140933	Info: Imputation result with median imputation for x_test: 

20201017-140933	Info:          0              1    ...            830            831
0   9.101943  832442.839400  ...   99802.127899  106668.615874
1  11.722077  832442.826314  ...  100761.264268  104846.235709
2  11.200277  832442.820359  ...  106440.456728  103405.273232
3   9.668873  832442.820901  ...   99802.127899  100531.960204
4  10.329962  832442.871842  ...  109797.625066  104849.648797

[5 rows x 832 columns]
20201017-140933	Info: Start outlier detection
20201017-140933	Info: OutlierRemover: Removed (147,) rows
20201017-140933	Info: Feature Selection
20201017-140933	Info: 
Remove constant features:
20201017-140933	Info: Following columns are constant: [193, 297, 339, 629]
20201017-140933	Info: Variance Threshold  0.0  -> nr of features:  828
20201017-140933	Info: Removed: 4 features
20201017-140933	Info: 
Remove constant features:
20201017-140933	Info: Following columns are constant: [1, 2, 6, 9, 16, 34, 50, 78, 82, 83, 145, 153, 166, 194, 205, 231, 255, 262, 265, 268, 315, 333, 360, 361, 371, 375, 376, 396, 419, 446, 451, 477, 478, 497, 502, 524, 583, 585, 606, 624, 635, 641, 660, 675, 680, 696, 715, 717, 725, 731, 743, 751, 758, 774, 807]
20201017-140933	Info: Variance Threshold  0.01  -> nr of features:  773
20201017-140933	Info: Removed: 55 features
20201017-140933	Info: 
Remove Correlated Features:
20201017-140939	Info: Following features are removed: {256, 636, 130, 386, 643, 764, 520, 137, 521, 765, 268, 270, 271, 527, 407, 665, 539, 156, 542, 415, 671, 424, 41, 682, 684, 558, 432, 305, 179, 691, 183, 440, 567, 443, 573, 318, 191, 701, 449, 450, 67, 452, 705, 331, 715, 462, 208, 83, 467, 598, 217, 602, 91, 347, 733, 734, 223, 224, 354, 739, 357, 742, 615, 745, 622, 369, 497, 498, 116, 244, 760, 761, 380, 637, 254}
20201017-140939	Info: Nr. of features remvoed: 75
20201017-140939	Info: Correlation Threshold  0.8  -> nr of features:  698
20201017-140939	Info: 
Select Best k features:
20201017-140946	Info: SelectKBest k = 100  -> nr features:  100
20201017-140946	Info: 
Select Best Based on Impurity
20201017-140946	Info: TreeBasedFeatureSelector  -> nr features:  46
20201017-140946	Info: Start normalizer
20201017-140946	Info: 
--------------------------------------
20201017-140946	Info: Iteration 0
20201017-140946	Info: imputer {'name': 'median'}
20201017-140946	Info: outlier {'fit_on': 'train', 'name': 'customOR', 'strategy': 'iqr', 'threshold': 6.5}
20201017-140946	Info: feature_selector {'k': 100, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'True', 'use_select_best_k': 'True'}
20201017-140946	Info: normalizer {'fit_on': 'train', 'name': 'robustscaler'}
20201017-140946	Info: regression {'name': 'xgb'}
20201017-140946	Info: 
----------------------------------------
20201017-140946	Info: Start fit model
20201017-140946	Info: Stratified split
20201017-140946	Warning: Indexes do not match, probably because of outlier removal!
20201017-140947	Info: The number of samples for each 'age/class' are:
    67  75  69  70  68  72  73  74  66  ...  47  42  90  95  91  92  94  43  97
y  56  54  53  50  48  48  47  45  42  ...   2   2   2   1   1   1   1   1   1

[1 rows x 54 columns]
20201017-140947	Info: 'Age' with only one sample: [95 91 92 94 43 97]
20201017-140947	Info: x_train_split: (959, 46)
20201017-140947	Info: x_test_split: (106, 46)
20201017-141013	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.1, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.100000001, max_delta_step=0, max_depth=6,
             min_child_weight=2, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.9,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-141013	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}
20201017-141013	Info: Best training-score with mse loss: 0.46072896704569005
20201017-141013	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
22   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.460729        0.058529          0.986548         0.001908
26   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.455574        0.068468          0.982995         0.001393
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.452770        0.067092          0.882225         0.002867
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.450743        0.067281          0.885156         0.004761
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.449975        0.075887          0.888093         0.002836
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.448359        0.055679          0.972576         0.002423
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.448356        0.070463          0.884467         0.003241
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.447900        0.066728          0.970412         0.002400
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.447893        0.065775          0.984843         0.001230
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.445591        0.068743          0.969895         0.002613
18   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.444628        0.071374          0.985575         0.000775
19   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.444260        0.080459          0.988013         0.001236
12   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.443074        0.074256          0.911969         0.003447
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.442694        0.081289          0.972215         0.002801
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.442241        0.082059          0.973624         0.001546
9    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.442233        0.062180          0.916248         0.003203
11   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.441999        0.050652          0.916299         0.003697
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.441603        0.080471          0.975140         0.001664
16   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.441460        0.070097          0.912363         0.005069
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.440663        0.069012          0.878890         0.003927
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.440625        0.067119          0.892339         0.003372
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.440228        0.070823          0.913196         0.004245
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.440082        0.044929          0.907023         0.004767
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.439961        0.069878          0.886702         0.004995
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.439375        0.071856          0.975493         0.002061
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.438075        0.064455          0.886969         0.003390
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.437368        0.066881          0.909196         0.004780
14   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.437057        0.068951          0.912934         0.004109
23   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.436180        0.061976          0.984023         0.002426
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.435829        0.071846          0.966160         0.002325
20201017-141013	Info: R2 Score achieved on training set: 0.9822865257844954
20201017-141013	Info: R2 Score achieved on test set: 0.5029071354547436
20201017-141013	Info: Start normalizer
20201017-141013	Info: 
--------------------------------------
20201017-141013	Info: Iteration 1
20201017-141013	Info: imputer {'name': 'median'}
20201017-141013	Info: outlier {'fit_on': 'train', 'name': 'customOR', 'strategy': 'iqr', 'threshold': 6.5}
20201017-141013	Info: feature_selector {'k': 100, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'True', 'use_select_best_k': 'True'}
20201017-141013	Info: normalizer {'fit_on': 'test', 'name': 'robustscaler'}
20201017-141013	Info: regression {'name': 'xgb'}
20201017-141013	Info: 
----------------------------------------
20201017-141013	Info: Start fit model
20201017-141013	Info: Stratified split
20201017-141013	Info: The number of samples for each 'age/class' are:
    67  75  69  70  68  72  73  74  66  71  65  77  78  63  76  79  81  64  62  80  60  82  61  58  55  56  59  83  57  84  49  54  52  85  53  86  51  87  46  48  88  89  45  50  44  47  42  90  95  91  92  94  43  97
y  56  54  53  50  48  48  47  45  42  41  39  33  32  32  31  28  25  25  23  21  21  20  20  19  19  17  17  16  15  12  11  10  10  10   9   8   7   7   6   5   5   5   4   4   3   2   2   2   1   1   1   1   1   1
20201017-141013	Info: 'Age' with only one sample: [95 91 92 94 43 97]
20201017-141013	Info: x_train_split: (959, 46)
20201017-141013	Info: x_test_split: (106, 46)
20201017-141038	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.1, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.100000001, max_delta_step=0, max_depth=6,
             min_child_weight=2, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.9,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-141038	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}
20201017-141038	Info: Best training-score with mse loss: 0.46072896704569005
20201017-141038	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
22   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.460729        0.058529          0.986548         0.001908
26   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.455574        0.068468          0.982995         0.001393
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.452770        0.067092          0.882225         0.002867
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.450743        0.067281          0.885156         0.004761
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.449975        0.075887          0.888093         0.002836
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.448359        0.055679          0.972576         0.002423
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.448356        0.070463          0.884467         0.003241
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.447900        0.066728          0.970412         0.002400
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.447893        0.065775          0.984843         0.001230
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.445591        0.068743          0.969895         0.002613
18   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.444628        0.071374          0.985575         0.000775
19   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.444260        0.080459          0.988013         0.001236
12   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.443074        0.074256          0.911969         0.003447
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.442694        0.081289          0.972215         0.002801
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.442241        0.082059          0.973624         0.001546
9    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.442233        0.062180          0.916248         0.003203
11   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.441999        0.050652          0.916299         0.003697
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.441603        0.080471          0.975140         0.001664
16   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.441460        0.070097          0.912363         0.005069
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.440663        0.069012          0.878890         0.003927
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.440625        0.067119          0.892339         0.003372
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.440228        0.070823          0.913196         0.004245
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.440082        0.044929          0.907023         0.004767
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.439961        0.069878          0.886702         0.004995
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.439375        0.071856          0.975493         0.002061
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.438075        0.064455          0.886969         0.003390
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.437368        0.066881          0.909196         0.004780
14   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.437057        0.068951          0.912934         0.004109
23   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.436180        0.061976          0.984023         0.002426
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.435829        0.071846          0.966160         0.002325
20201017-141038	Info: R2 Score achieved on training set: 0.9822865257844954
20201017-141038	Info: R2 Score achieved on test set: 0.5029071354547436
20201017-141038	Info: Feature Selection
20201017-141038	Info: 
Remove constant features:
20201017-141038	Info: Following columns are constant: [193, 297, 339, 629]
20201017-141038	Info: Variance Threshold  0.0  -> nr of features:  828
20201017-141038	Info: Removed: 4 features
20201017-141038	Info: 
Remove constant features:
20201017-141038	Info: Following columns are constant: [1, 2, 6, 9, 16, 34, 50, 78, 82, 83, 145, 153, 166, 194, 205, 231, 255, 262, 265, 268, 315, 333, 360, 361, 371, 375, 376, 396, 419, 446, 451, 477, 478, 497, 502, 524, 583, 585, 606, 624, 635, 641, 660, 675, 680, 696, 715, 717, 725, 731, 743, 751, 758, 774, 807]
20201017-141038	Info: Variance Threshold  0.01  -> nr of features:  773
20201017-141038	Info: Removed: 55 features
20201017-141038	Info: 
Remove Correlated Features:
20201017-141044	Info: Following features are removed: {256, 636, 130, 386, 643, 764, 520, 137, 521, 765, 268, 270, 271, 527, 407, 665, 539, 156, 542, 415, 671, 424, 41, 682, 684, 558, 432, 305, 179, 691, 183, 440, 567, 443, 573, 318, 191, 701, 449, 450, 67, 452, 705, 331, 715, 462, 208, 83, 467, 598, 217, 602, 91, 347, 733, 734, 223, 224, 354, 739, 357, 742, 615, 745, 622, 369, 497, 498, 116, 244, 760, 761, 380, 637, 254}
20201017-141044	Info: Nr. of features remvoed: 75
20201017-141044	Info: Correlation Threshold  0.8  -> nr of features:  698
20201017-141044	Info: 
Select Best Based on Impurity
20201017-141045	Info: TreeBasedFeatureSelector  -> nr features:  342
20201017-141045	Info: Start normalizer
20201017-141045	Info: 
--------------------------------------
20201017-141045	Info: Iteration 2
20201017-141045	Info: imputer {'name': 'median'}
20201017-141045	Info: outlier {'fit_on': 'train', 'name': 'customOR', 'strategy': 'iqr', 'threshold': 6.5}
20201017-141045	Info: feature_selector {'k': 100, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'True', 'use_select_best_k': 'False'}
20201017-141045	Info: normalizer {'fit_on': 'train', 'name': 'robustscaler'}
20201017-141045	Info: regression {'name': 'xgb'}
20201017-141045	Info: 
----------------------------------------
20201017-141045	Info: Start fit model
20201017-141045	Info: Stratified split
20201017-141045	Info: The number of samples for each 'age/class' are:
    67  75  69  70  68  72  73  74  66  71  65  77  78  63  76  79  81  64  62  80  60  82  61  58  55  56  59  83  57  84  49  54  52  85  53  86  51  87  46  48  88  89  45  50  44  47  42  90  95  91  92  94  43  97
y  56  54  53  50  48  48  47  45  42  41  39  33  32  32  31  28  25  25  23  21  21  20  20  19  19  17  17  16  15  12  11  10  10  10   9   8   7   7   6   5   5   5   4   4   3   2   2   2   1   1   1   1   1   1
20201017-141045	Info: 'Age' with only one sample: [95 91 92 94 43 97]
20201017-141045	Info: x_train_split: (959, 342)
20201017-141045	Info: x_test_split: (106, 342)
20201017-141336	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=4,
             min_child_weight=3, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.8,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-141336	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}
20201017-141336	Info: Best training-score with mse loss: 0.4752807693393857
20201017-141336	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.475281        0.080095          0.935981         0.003446
1    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.474012        0.060354          0.765001         0.004058
4    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.469878        0.065227          0.764056         0.003607
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.469118        0.071627          0.939767         0.002176
21   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.464437        0.066729          0.995434         0.000493
31  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.462543        0.062407          0.729228         0.003616
7    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.461775        0.055025          0.764503         0.003938
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.461099        0.059945          0.957168         0.002746
6    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.459289        0.059734          0.762899         0.004197
28  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.459206        0.064351          0.729668         0.004222
35  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.457485        0.065311          0.724291         0.004413
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.457467        0.075537          0.944840         0.001930
34  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.457398        0.058145          0.729709         0.005160
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.457238        0.093394          0.938213         0.002517
5    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.456335        0.054423          0.759725         0.004646
2    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.455369        0.057387          0.759106         0.004695
8    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.454669        0.060657          0.760281         0.003942
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.453691        0.084937          0.991952         0.000824
29  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.453333        0.067132          0.724445         0.004342
32  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.453070        0.064070          0.723845         0.004473
33  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.452795        0.071313          0.728148         0.005914
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.451905        0.085696          0.988774         0.001214
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.451516        0.075013          0.958065         0.001884
30  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.451444        0.067962          0.727412         0.005015
27  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.449716        0.062645          0.728466         0.004697
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.447720        0.079268          0.940069         0.002820
11   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.447126        0.090687          0.959367         0.003526
0    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.447094        0.065124          0.763843         0.004157
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.446968        0.068013          0.937674         0.002456
22   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.446741        0.077904          0.996912         0.000673
20201017-141336	Info: R2 Score achieved on training set: 0.9298966380802618
20201017-141336	Info: R2 Score achieved on test set: 0.5138515057092985
20201017-141336	Info: Start normalizer
20201017-141336	Info: 
--------------------------------------
20201017-141336	Info: Iteration 3
20201017-141336	Info: imputer {'name': 'median'}
20201017-141336	Info: outlier {'fit_on': 'train', 'name': 'customOR', 'strategy': 'iqr', 'threshold': 6.5}
20201017-141336	Info: feature_selector {'k': 100, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'True', 'use_select_best_k': 'False'}
20201017-141336	Info: normalizer {'fit_on': 'test', 'name': 'robustscaler'}
20201017-141336	Info: regression {'name': 'xgb'}
20201017-141336	Info: 
----------------------------------------
20201017-141336	Info: Start fit model
20201017-141336	Info: Stratified split
20201017-141336	Info: The number of samples for each 'age/class' are:
    67  75  69  70  68  72  73  74  66  71  65  77  78  63  76  79  81  64  62  80  60  82  61  58  55  56  59  83  57  84  49  54  52  85  53  86  51  87  46  48  88  89  45  50  44  47  42  90  95  91  92  94  43  97
y  56  54  53  50  48  48  47  45  42  41  39  33  32  32  31  28  25  25  23  21  21  20  20  19  19  17  17  16  15  12  11  10  10  10   9   8   7   7   6   5   5   5   4   4   3   2   2   2   1   1   1   1   1   1
20201017-141336	Info: 'Age' with only one sample: [95 91 92 94 43 97]
20201017-141336	Info: x_train_split: (959, 342)
20201017-141336	Info: x_test_split: (106, 342)
20201017-141626	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=4,
             min_child_weight=3, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.8,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-141626	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}
20201017-141626	Info: Best training-score with mse loss: 0.4752807693393857
20201017-141626	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.475281        0.080095          0.935981         0.003446
1    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.474012        0.060354          0.765001         0.004058
4    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.469878        0.065227          0.764056         0.003607
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.469118        0.071627          0.939767         0.002176
21   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.464437        0.066729          0.995434         0.000493
31  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.462543        0.062407          0.729228         0.003616
7    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.461775        0.055025          0.764503         0.003938
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.461099        0.059945          0.957168         0.002746
6    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.459289        0.059734          0.762899         0.004197
28  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.459206        0.064351          0.729668         0.004222
35  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.457485        0.065311          0.724291         0.004413
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.457467        0.075537          0.944840         0.001930
34  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.457398        0.058145          0.729709         0.005160
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.457238        0.093394          0.938213         0.002517
5    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.456335        0.054423          0.759725         0.004646
2    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.455369        0.057387          0.759106         0.004695
8    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.454669        0.060657          0.760281         0.003942
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.453691        0.084937          0.991952         0.000824
29  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.453333        0.067132          0.724445         0.004342
32  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.453070        0.064070          0.723845         0.004473
33  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.452795        0.071313          0.728148         0.005914
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.451905        0.085696          0.988774         0.001214
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.451516        0.075013          0.958065         0.001884
30  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.451444        0.067962          0.727412         0.005015
27  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.449716        0.062645          0.728466         0.004697
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.447720        0.079268          0.940069         0.002820
11   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.447126        0.090687          0.959367         0.003526
0    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.447094        0.065124          0.763843         0.004157
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.446968        0.068013          0.937674         0.002456
22   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.446741        0.077904          0.996912         0.000673
20201017-141626	Info: R2 Score achieved on training set: 0.9298966380802618
20201017-141626	Info: R2 Score achieved on test set: 0.5138515057092985
20201017-141626	Info: Feature Selection
20201017-141626	Info: 
Remove constant features:
20201017-141626	Info: Following columns are constant: [193, 297, 339, 629]
20201017-141626	Info: Variance Threshold  0.0  -> nr of features:  828
20201017-141626	Info: Removed: 4 features
20201017-141626	Info: 
Remove constant features:
20201017-141626	Info: Following columns are constant: [1, 2, 6, 9, 16, 34, 50, 78, 82, 83, 145, 153, 166, 194, 205, 231, 255, 262, 265, 268, 315, 333, 360, 361, 371, 375, 376, 396, 419, 446, 451, 477, 478, 497, 502, 524, 583, 585, 606, 624, 635, 641, 660, 675, 680, 696, 715, 717, 725, 731, 743, 751, 758, 774, 807]
20201017-141626	Info: Variance Threshold  0.01  -> nr of features:  773
20201017-141626	Info: Removed: 55 features
20201017-141626	Info: 
Remove Correlated Features:
20201017-141632	Info: Following features are removed: {256, 636, 130, 386, 643, 764, 520, 137, 521, 765, 268, 270, 271, 527, 407, 665, 539, 156, 542, 415, 671, 424, 41, 682, 684, 558, 432, 305, 179, 691, 183, 440, 567, 443, 573, 318, 191, 701, 449, 450, 67, 452, 705, 331, 715, 462, 208, 83, 467, 598, 217, 602, 91, 347, 733, 734, 223, 224, 354, 739, 357, 742, 615, 745, 622, 369, 497, 498, 116, 244, 760, 761, 380, 637, 254}
20201017-141632	Info: Nr. of features remvoed: 75
20201017-141632	Info: Correlation Threshold  0.8  -> nr of features:  698
20201017-141632	Info: 
Select Best k features:
20201017-141639	Info: SelectKBest k = 100  -> nr features:  100
20201017-141639	Info: Start normalizer
20201017-141639	Info: 
--------------------------------------
20201017-141639	Info: Iteration 4
20201017-141639	Info: imputer {'name': 'median'}
20201017-141639	Info: outlier {'fit_on': 'train', 'name': 'customOR', 'strategy': 'iqr', 'threshold': 6.5}
20201017-141639	Info: feature_selector {'k': 100, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'False', 'use_select_best_k': 'True'}
20201017-141639	Info: normalizer {'fit_on': 'train', 'name': 'robustscaler'}
20201017-141639	Info: regression {'name': 'xgb'}
20201017-141639	Info: 
----------------------------------------
20201017-141639	Info: Start fit model
20201017-141639	Info: Stratified split
20201017-141639	Info: The number of samples for each 'age/class' are:
    67  75  69  70  68  72  73  74  66  71  65  77  78  63  76  79  81  64  62  80  60  82  61  58  55  56  59  83  57  84  49  54  52  85  53  86  51  87  46  48  88  89  45  50  44  47  42  90  95  91  92  94  43  97
y  56  54  53  50  48  48  47  45  42  41  39  33  32  32  31  28  25  25  23  21  21  20  20  19  19  17  17  16  15  12  11  10  10  10   9   8   7   7   6   5   5   5   4   4   3   2   2   2   1   1   1   1   1   1
20201017-141639	Info: 'Age' with only one sample: [95 91 92 94 43 97]
20201017-141639	Info: x_train_split: (959, 100)
20201017-141639	Info: x_test_split: (106, 100)
20201017-141731	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=6,
             min_child_weight=3, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1.0,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-141731	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}
20201017-141731	Info: Best training-score with mse loss: 0.49128851482125935
20201017-141731	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.491289        0.062166          0.987697         0.001110
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.490175        0.077676          0.993538         0.000959
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.488648        0.074331          0.926900         0.000848
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.487735        0.077447          0.988604         0.001161
19   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.484062        0.088042          0.994653         0.000771
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.483136        0.071552          0.918667         0.002844
6    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.483113        0.055215          0.751992         0.003192
10   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.483070        0.066876          0.948230         0.002596
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.482527        0.082384          0.921456         0.002875
16   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.481360        0.073375          0.944464         0.002834
9    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.481074        0.089202          0.946808         0.001523
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.480333        0.078652          0.989177         0.000981
0    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.480086        0.042565          0.753468         0.004092
24   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.478973        0.073303          0.990979         0.001473
22   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.476866        0.090864          0.994528         0.000717
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.476699        0.063544          0.986392         0.001366
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.476003        0.083707          0.924749         0.003143
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.475284        0.056397          0.945173         0.002773
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.474501        0.065097          0.924269         0.003155
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.474424        0.070154          0.925009         0.004498
33  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.474124        0.065284          0.721080         0.004753
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.473924        0.090119          0.985810         0.001289
3    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.473647        0.039078          0.752262         0.004185
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.473555        0.064017          0.922947         0.002902
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.472562        0.067358          0.919259         0.002230
12   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.472413        0.083669          0.945194         0.002292
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.472348        0.069858          0.982606         0.001011
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.471853        0.061584          0.924915         0.002306
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.471347        0.067191          0.987916         0.001301
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.470341        0.065885          0.941317         0.002907
20201017-141731	Info: R2 Score achieved on training set: 0.9836081099434661
20201017-141731	Info: R2 Score achieved on test set: 0.5467050276130048
20201017-141731	Info: Start normalizer
20201017-141731	Info: 
--------------------------------------
20201017-141731	Info: Iteration 5
20201017-141731	Info: imputer {'name': 'median'}
20201017-141731	Info: outlier {'fit_on': 'train', 'name': 'customOR', 'strategy': 'iqr', 'threshold': 6.5}
20201017-141731	Info: feature_selector {'k': 100, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'False', 'use_select_best_k': 'True'}
20201017-141731	Info: normalizer {'fit_on': 'test', 'name': 'robustscaler'}
20201017-141731	Info: regression {'name': 'xgb'}
20201017-141731	Info: 
----------------------------------------
20201017-141731	Info: Start fit model
20201017-141731	Info: Stratified split
20201017-141731	Info: The number of samples for each 'age/class' are:
    67  75  69  70  68  72  73  74  66  71  65  77  78  63  76  79  81  64  62  80  60  82  61  58  55  56  59  83  57  84  49  54  52  85  53  86  51  87  46  48  88  89  45  50  44  47  42  90  95  91  92  94  43  97
y  56  54  53  50  48  48  47  45  42  41  39  33  32  32  31  28  25  25  23  21  21  20  20  19  19  17  17  16  15  12  11  10  10  10   9   8   7   7   6   5   5   5   4   4   3   2   2   2   1   1   1   1   1   1
20201017-141731	Info: 'Age' with only one sample: [95 91 92 94 43 97]
20201017-141731	Info: x_train_split: (959, 100)
20201017-141731	Info: x_test_split: (106, 100)
20201017-141823	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=6,
             min_child_weight=3, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1.0,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-141823	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}
20201017-141823	Info: Best training-score with mse loss: 0.49128851482125935
20201017-141823	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.491289        0.062166          0.987697         0.001110
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.490175        0.077676          0.993538         0.000959
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.488648        0.074331          0.926900         0.000848
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.487735        0.077447          0.988604         0.001161
19   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.484062        0.088042          0.994653         0.000771
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.483136        0.071552          0.918667         0.002844
6    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.483113        0.055215          0.751992         0.003192
10   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.483070        0.066876          0.948230         0.002596
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.482527        0.082384          0.921456         0.002875
16   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.481360        0.073375          0.944464         0.002834
9    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.481074        0.089202          0.946808         0.001523
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.480333        0.078652          0.989177         0.000981
0    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.480086        0.042565          0.753468         0.004092
24   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.478973        0.073303          0.990979         0.001473
22   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.476866        0.090864          0.994528         0.000717
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.476699        0.063544          0.986392         0.001366
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.476003        0.083707          0.924749         0.003143
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.475284        0.056397          0.945173         0.002773
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.474501        0.065097          0.924269         0.003155
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.474424        0.070154          0.925009         0.004498
33  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.474124        0.065284          0.721080         0.004753
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.473924        0.090119          0.985810         0.001289
3    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.473647        0.039078          0.752262         0.004185
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.473555        0.064017          0.922947         0.002902
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.472562        0.067358          0.919259         0.002230
12   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.472413        0.083669          0.945194         0.002292
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.472348        0.069858          0.982606         0.001011
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.471853        0.061584          0.924915         0.002306
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.471347        0.067191          0.987916         0.001301
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.470341        0.065885          0.941317         0.002907
20201017-141823	Info: R2 Score achieved on training set: 0.9836081099434661
20201017-141823	Info: R2 Score achieved on test set: 0.5467050276130048
20201017-141823	Info: Feature Selection
20201017-141823	Info: 
Remove constant features:
20201017-141823	Info: Following columns are constant: [193, 297, 339, 629]
20201017-141823	Info: Variance Threshold  0.0  -> nr of features:  828
20201017-141823	Info: Removed: 4 features
20201017-141823	Info: 
Remove constant features:
20201017-141823	Info: Following columns are constant: [1, 2, 6, 9, 16, 34, 50, 78, 82, 83, 145, 153, 166, 194, 205, 231, 255, 262, 265, 268, 315, 333, 360, 361, 371, 375, 376, 396, 419, 446, 451, 477, 478, 497, 502, 524, 583, 585, 606, 624, 635, 641, 660, 675, 680, 696, 715, 717, 725, 731, 743, 751, 758, 774, 807]
20201017-141823	Info: Variance Threshold  0.01  -> nr of features:  773
20201017-141823	Info: Removed: 55 features
20201017-141823	Info: 
Remove Correlated Features:
20201017-141829	Info: Following features are removed: {256, 636, 130, 386, 643, 764, 520, 137, 521, 765, 268, 270, 271, 527, 407, 665, 539, 156, 542, 415, 671, 424, 41, 682, 684, 558, 432, 305, 179, 691, 183, 440, 567, 443, 573, 318, 191, 701, 449, 450, 67, 452, 705, 331, 715, 462, 208, 83, 467, 598, 217, 602, 91, 347, 733, 734, 223, 224, 354, 739, 357, 742, 615, 745, 622, 369, 497, 498, 116, 244, 760, 761, 380, 637, 254}
20201017-141829	Info: Nr. of features remvoed: 75
20201017-141829	Info: Correlation Threshold  0.8  -> nr of features:  698
20201017-141829	Info: Start normalizer
20201017-141829	Info: 
--------------------------------------
20201017-141829	Info: Iteration 6
20201017-141829	Info: imputer {'name': 'median'}
20201017-141829	Info: outlier {'fit_on': 'train', 'name': 'customOR', 'strategy': 'iqr', 'threshold': 6.5}
20201017-141829	Info: feature_selector {'k': 100, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'False', 'use_select_best_k': 'False'}
20201017-141829	Info: normalizer {'fit_on': 'train', 'name': 'robustscaler'}
20201017-141829	Info: regression {'name': 'xgb'}
20201017-141829	Info: 
----------------------------------------
20201017-141829	Info: Start fit model
20201017-141829	Info: Stratified split
20201017-141829	Info: The number of samples for each 'age/class' are:
    67  75  69  70  68  72  73  74  66  71  65  77  78  63  76  79  81  64  62  80  60  82  61  58  55  56  59  83  57  84  49  54  52  85  53  86  51  87  46  48  88  89  45  50  44  47  42  90  95  91  92  94  43  97
y  56  54  53  50  48  48  47  45  42  41  39  33  32  32  31  28  25  25  23  21  21  20  20  19  19  17  17  16  15  12  11  10  10  10   9   8   7   7   6   5   5   5   4   4   3   2   2   2   1   1   1   1   1   1
20201017-141829	Info: 'Age' with only one sample: [95 91 92 94 43 97]
20201017-141829	Info: x_train_split: (959, 698)
20201017-141829	Info: x_test_split: (106, 698)
20201017-142411	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.1, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.100000001, max_delta_step=0, max_depth=2,
             min_child_weight=1, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.8,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-142411	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}
20201017-142411	Info: Best training-score with mse loss: 0.48168519257617043
20201017-142411	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
0    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.481685        0.038429          0.784390         0.002907
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.479378        0.051605          0.951899         0.002118
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.476875        0.077821          0.996184         0.000342
1    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.476657        0.050290          0.785441         0.003628
10   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.475798        0.051921          0.972141         0.001905
6    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.473060        0.047309          0.784753         0.004235
4    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.472142        0.047105          0.786177         0.003857
28  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.470751        0.039246          0.748061         0.004368
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.470746        0.062067          0.954093         0.001443
8    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.469384        0.048776          0.779617         0.004310
3    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.468616        0.046715          0.784988         0.003742
34  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.467863        0.046774          0.747614         0.005667
27  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.466756        0.042837          0.747092         0.004122
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.466459        0.050982          0.951678         0.002288
31  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.465682        0.042805          0.748462         0.004074
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.465291        0.064180          0.992840         0.000712
7    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.464847        0.044499          0.785035         0.004559
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.463786        0.043025          0.949395         0.002160
32  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.463734        0.043020          0.742613         0.004130
2    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.463581        0.046921          0.779060         0.004822
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.463280        0.066114          0.954513         0.001481
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.462935        0.071400          0.993280         0.000872
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.462415        0.068096          0.952702         0.002696
11   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.462056        0.058374          0.968701         0.002676
29  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.461765        0.042562          0.742805         0.003917
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.461737        0.062549          0.952989         0.002505
24   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.461215        0.058522          0.996665         0.000369
33  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.461131        0.048107          0.747514         0.004791
47  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.460761        0.104489          0.996137         0.000772
9    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.460692        0.046959          0.970925         0.001586
20201017-142411	Info: R2 Score achieved on training set: 0.7751192390401009
20201017-142411	Info: R2 Score achieved on test set: 0.5739218086404767
20201017-142411	Info: Start normalizer
20201017-142411	Info: 
--------------------------------------
20201017-142411	Info: Iteration 7
20201017-142411	Info: imputer {'name': 'median'}
20201017-142411	Info: outlier {'fit_on': 'train', 'name': 'customOR', 'strategy': 'iqr', 'threshold': 6.5}
20201017-142411	Info: feature_selector {'k': 100, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'False', 'use_select_best_k': 'False'}
20201017-142411	Info: normalizer {'fit_on': 'test', 'name': 'robustscaler'}
20201017-142411	Info: regression {'name': 'xgb'}
20201017-142411	Info: 
----------------------------------------
20201017-142411	Info: Start fit model
20201017-142411	Info: Stratified split
20201017-142411	Info: The number of samples for each 'age/class' are:
    67  75  69  70  68  72  73  74  66  71  65  77  78  63  76  79  81  64  62  80  60  82  61  58  55  56  59  83  57  84  49  54  52  85  53  86  51  87  46  48  88  89  45  50  44  47  42  90  95  91  92  94  43  97
y  56  54  53  50  48  48  47  45  42  41  39  33  32  32  31  28  25  25  23  21  21  20  20  19  19  17  17  16  15  12  11  10  10  10   9   8   7   7   6   5   5   5   4   4   3   2   2   2   1   1   1   1   1   1
20201017-142411	Info: 'Age' with only one sample: [95 91 92 94 43 97]
20201017-142411	Info: x_train_split: (959, 698)
20201017-142411	Info: x_test_split: (106, 698)
20201017-142952	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.1, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.100000001, max_delta_step=0, max_depth=2,
             min_child_weight=1, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.8,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-142952	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}
20201017-142952	Info: Best training-score with mse loss: 0.48168519257617043
20201017-142952	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
0    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.481685        0.038429          0.784390         0.002907
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.479378        0.051605          0.951899         0.002118
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.476875        0.077821          0.996184         0.000342
1    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.476657        0.050290          0.785441         0.003628
10   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.475798        0.051921          0.972141         0.001905
6    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.473060        0.047309          0.784753         0.004235
4    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.472142        0.047105          0.786177         0.003857
28  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.470751        0.039246          0.748061         0.004368
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.470746        0.062067          0.954093         0.001443
8    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.469384        0.048776          0.779617         0.004310
3    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.468616        0.046715          0.784988         0.003742
34  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.467863        0.046774          0.747614         0.005667
27  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.466756        0.042837          0.747092         0.004122
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.466459        0.050982          0.951678         0.002288
31  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.465682        0.042805          0.748462         0.004074
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.465291        0.064180          0.992840         0.000712
7    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.464847        0.044499          0.785035         0.004559
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.463786        0.043025          0.949395         0.002160
32  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.463734        0.043020          0.742613         0.004130
2    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.463581        0.046921          0.779060         0.004822
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.463280        0.066114          0.954513         0.001481
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.462935        0.071400          0.993280         0.000872
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.462415        0.068096          0.952702         0.002696
11   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.462056        0.058374          0.968701         0.002676
29  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.461765        0.042562          0.742805         0.003917
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.461737        0.062549          0.952989         0.002505
24   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.461215        0.058522          0.996665         0.000369
33  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.461131        0.048107          0.747514         0.004791
47  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.460761        0.104489          0.996137         0.000772
9    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.460692        0.046959          0.970925         0.001586
20201017-142952	Info: R2 Score achieved on training set: 0.7751192390401009
20201017-142952	Info: R2 Score achieved on test set: 0.5739218086404767
20201017-142952	Info: Feature Selection
20201017-142952	Info: 
Remove constant features:
20201017-142952	Info: Following columns are constant: [193, 297, 339, 629]
20201017-142952	Info: Variance Threshold  0.0  -> nr of features:  828
20201017-142952	Info: Removed: 4 features
20201017-142952	Info: 
Remove constant features:
20201017-142952	Info: Following columns are constant: [1, 2, 6, 9, 16, 34, 50, 78, 82, 83, 145, 153, 166, 194, 205, 231, 255, 262, 265, 268, 315, 333, 360, 361, 371, 375, 376, 396, 419, 446, 451, 477, 478, 497, 502, 524, 583, 585, 606, 624, 635, 641, 660, 675, 680, 696, 715, 717, 725, 731, 743, 751, 758, 774, 807]
20201017-142952	Info: Variance Threshold  0.01  -> nr of features:  773
20201017-142952	Info: Removed: 55 features
20201017-142952	Info: 
Remove Correlated Features:
20201017-142958	Info: Following features are removed: {256, 636, 130, 386, 643, 764, 520, 137, 521, 765, 268, 270, 271, 527, 407, 665, 539, 156, 542, 415, 671, 424, 41, 682, 684, 558, 432, 305, 179, 691, 183, 440, 567, 443, 573, 318, 191, 701, 449, 450, 67, 452, 705, 331, 715, 462, 208, 83, 467, 598, 217, 602, 91, 347, 733, 734, 223, 224, 354, 739, 357, 742, 615, 745, 622, 369, 497, 498, 116, 244, 760, 761, 380, 637, 254}
20201017-142958	Info: Nr. of features remvoed: 75
20201017-142958	Info: Correlation Threshold  0.8  -> nr of features:  698
20201017-142958	Info: 
Select Best k features:
20201017-143005	Info: SelectKBest k = 80  -> nr features:  80
20201017-143005	Info: 
Select Best Based on Impurity
20201017-143005	Info: TreeBasedFeatureSelector  -> nr features:  42
20201017-143005	Info: Start normalizer
20201017-143005	Info: 
--------------------------------------
20201017-143005	Info: Iteration 8
20201017-143005	Info: imputer {'name': 'median'}
20201017-143005	Info: outlier {'fit_on': 'train', 'name': 'customOR', 'strategy': 'iqr', 'threshold': 6.5}
20201017-143005	Info: feature_selector {'k': 80, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'True', 'use_select_best_k': 'True'}
20201017-143005	Info: normalizer {'fit_on': 'train', 'name': 'robustscaler'}
20201017-143005	Info: regression {'name': 'xgb'}
20201017-143005	Info: 
----------------------------------------
20201017-143005	Info: Start fit model
20201017-143005	Info: Stratified split
20201017-143005	Info: The number of samples for each 'age/class' are:
    67  75  69  70  68  72  73  74  66  71  65  77  78  63  76  79  81  64  62  80  60  82  61  58  55  56  59  83  57  84  49  54  52  85  53  86  51  87  46  48  88  89  45  50  44  47  42  90  95  91  92  94  43  97
y  56  54  53  50  48  48  47  45  42  41  39  33  32  32  31  28  25  25  23  21  21  20  20  19  19  17  17  16  15  12  11  10  10  10   9   8   7   7   6   5   5   5   4   4   3   2   2   2   1   1   1   1   1   1
20201017-143005	Info: 'Age' with only one sample: [95 91 92 94 43 97]
20201017-143005	Info: x_train_split: (959, 42)
20201017-143005	Info: x_test_split: (106, 42)
20201017-143028	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=4,
             min_child_weight=3, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.8,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-143028	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}
20201017-143028	Info: Best training-score with mse loss: 0.4746796374657308
20201017-143028	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.474680        0.078524          0.878702         0.004421
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.468641        0.086330          0.965302         0.001694
10   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.468245        0.079241          0.918043         0.002955
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.466307        0.082959          0.907543         0.003257
35  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.466005        0.061851          0.691098         0.003727
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.465652        0.110002          0.969187         0.001711
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.464663        0.095275          0.889659         0.004051
2    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.464343        0.063092          0.715493         0.005112
32  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.464104        0.058332          0.692848         0.004611
8    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.464070        0.069114          0.716602         0.004512
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.463789        0.081776          0.907566         0.003517
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.461849        0.096580          0.913703         0.003030
5    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.461343        0.061241          0.717498         0.004435
19   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.461129        0.110111          0.986874         0.001188
22   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.460886        0.072300          0.985621         0.001528
29  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.460390        0.058869          0.690924         0.004707
21   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.460323        0.097514          0.983774         0.001529
16   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.460115        0.096857          0.911946         0.001998
34  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.460076        0.062956          0.692102         0.004275
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.459854        0.086185          0.967208         0.002896
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.459101        0.090536          0.888395         0.003458
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.458889        0.106459          0.982718         0.001503
30  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.458875        0.059951          0.691391         0.005772
31  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.458603        0.059980          0.692370         0.004227
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.457922        0.079728          0.884863         0.004484
7    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.457880        0.063087          0.718214         0.004312
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.456883        0.111694          0.972454         0.001932
14   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.456650        0.096942          0.908394         0.004697
18   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.456350        0.107030          0.985287         0.001159
6    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.455989        0.062616          0.717201         0.004807
20201017-143028	Info: R2 Score achieved on training set: 0.8728748483053513
20201017-143028	Info: R2 Score achieved on test set: 0.5249885445339543
20201017-143028	Info: Start normalizer
20201017-143028	Info: 
--------------------------------------
20201017-143028	Info: Iteration 9
20201017-143028	Info: imputer {'name': 'median'}
20201017-143028	Info: outlier {'fit_on': 'train', 'name': 'customOR', 'strategy': 'iqr', 'threshold': 6.5}
20201017-143028	Info: feature_selector {'k': 80, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'True', 'use_select_best_k': 'True'}
20201017-143028	Info: normalizer {'fit_on': 'test', 'name': 'robustscaler'}
20201017-143028	Info: regression {'name': 'xgb'}
20201017-143028	Info: 
----------------------------------------
20201017-143028	Info: Start fit model
20201017-143028	Info: Stratified split
20201017-143028	Info: The number of samples for each 'age/class' are:
    67  75  69  70  68  72  73  74  66  71  65  77  78  63  76  79  81  64  62  80  60  82  61  58  55  56  59  83  57  84  49  54  52  85  53  86  51  87  46  48  88  89  45  50  44  47  42  90  95  91  92  94  43  97
y  56  54  53  50  48  48  47  45  42  41  39  33  32  32  31  28  25  25  23  21  21  20  20  19  19  17  17  16  15  12  11  10  10  10   9   8   7   7   6   5   5   5   4   4   3   2   2   2   1   1   1   1   1   1
20201017-143028	Info: 'Age' with only one sample: [95 91 92 94 43 97]
20201017-143028	Info: x_train_split: (959, 42)
20201017-143028	Info: x_test_split: (106, 42)
20201017-143051	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=4,
             min_child_weight=3, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.8,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-143051	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}
20201017-143051	Info: Best training-score with mse loss: 0.4746796374657308
20201017-143051	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.474680        0.078524          0.878702         0.004421
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.468641        0.086330          0.965302         0.001694
10   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.468245        0.079241          0.918043         0.002955
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.466307        0.082959          0.907543         0.003257
35  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.466005        0.061851          0.691098         0.003727
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.465652        0.110002          0.969187         0.001711
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.464663        0.095275          0.889659         0.004051
2    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.464343        0.063092          0.715493         0.005112
32  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.464104        0.058332          0.692848         0.004611
8    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.464070        0.069114          0.716602         0.004512
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.463789        0.081776          0.907566         0.003517
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.461849        0.096580          0.913703         0.003030
5    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.461343        0.061241          0.717498         0.004435
19   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.461129        0.110111          0.986874         0.001188
22   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.460886        0.072300          0.985621         0.001528
29  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.460390        0.058869          0.690924         0.004707
21   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.460323        0.097514          0.983774         0.001529
16   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.460115        0.096857          0.911946         0.001998
34  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.460076        0.062956          0.692102         0.004275
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.459854        0.086185          0.967208         0.002896
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.459101        0.090536          0.888395         0.003458
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.458889        0.106459          0.982718         0.001503
30  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.458875        0.059951          0.691391         0.005772
31  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.458603        0.059980          0.692370         0.004227
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.457922        0.079728          0.884863         0.004484
7    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.457880        0.063087          0.718214         0.004312
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.456883        0.111694          0.972454         0.001932
14   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.456650        0.096942          0.908394         0.004697
18   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.456350        0.107030          0.985287         0.001159
6    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.455989        0.062616          0.717201         0.004807
20201017-143051	Info: R2 Score achieved on training set: 0.8728748483053513
20201017-143051	Info: R2 Score achieved on test set: 0.5249885445339543
20201017-143051	Info: Feature Selection
20201017-143051	Info: 
Remove constant features:
20201017-143051	Info: Following columns are constant: [193, 297, 339, 629]
20201017-143051	Info: Variance Threshold  0.0  -> nr of features:  828
20201017-143051	Info: Removed: 4 features
20201017-143051	Info: 
Remove constant features:
20201017-143051	Info: Following columns are constant: [1, 2, 6, 9, 16, 34, 50, 78, 82, 83, 145, 153, 166, 194, 205, 231, 255, 262, 265, 268, 315, 333, 360, 361, 371, 375, 376, 396, 419, 446, 451, 477, 478, 497, 502, 524, 583, 585, 606, 624, 635, 641, 660, 675, 680, 696, 715, 717, 725, 731, 743, 751, 758, 774, 807]
20201017-143051	Info: Variance Threshold  0.01  -> nr of features:  773
20201017-143051	Info: Removed: 55 features
20201017-143051	Info: 
Remove Correlated Features:
20201017-143057	Info: Following features are removed: {256, 636, 130, 386, 643, 764, 520, 137, 521, 765, 268, 270, 271, 527, 407, 665, 539, 156, 542, 415, 671, 424, 41, 682, 684, 558, 432, 305, 179, 691, 183, 440, 567, 443, 573, 318, 191, 701, 449, 450, 67, 452, 705, 331, 715, 462, 208, 83, 467, 598, 217, 602, 91, 347, 733, 734, 223, 224, 354, 739, 357, 742, 615, 745, 622, 369, 497, 498, 116, 244, 760, 761, 380, 637, 254}
20201017-143057	Info: Nr. of features remvoed: 75
20201017-143057	Info: Correlation Threshold  0.8  -> nr of features:  698
20201017-143057	Info: 
Select Best Based on Impurity
20201017-143058	Info: TreeBasedFeatureSelector  -> nr features:  342
20201017-143058	Info: Start normalizer
20201017-143058	Info: 
--------------------------------------
20201017-143058	Info: Iteration 10
20201017-143058	Info: imputer {'name': 'median'}
20201017-143058	Info: outlier {'fit_on': 'train', 'name': 'customOR', 'strategy': 'iqr', 'threshold': 6.5}
20201017-143058	Info: feature_selector {'k': 80, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'True', 'use_select_best_k': 'False'}
20201017-143058	Info: normalizer {'fit_on': 'train', 'name': 'robustscaler'}
20201017-143058	Info: regression {'name': 'xgb'}
20201017-143058	Info: 
----------------------------------------
20201017-143058	Info: Start fit model
20201017-143058	Info: Stratified split
20201017-143058	Info: The number of samples for each 'age/class' are:
    67  75  69  70  68  72  73  74  66  71  65  77  78  63  76  79  81  64  62  80  60  82  61  58  55  56  59  83  57  84  49  54  52  85  53  86  51  87  46  48  88  89  45  50  44  47  42  90  95  91  92  94  43  97
y  56  54  53  50  48  48  47  45  42  41  39  33  32  32  31  28  25  25  23  21  21  20  20  19  19  17  17  16  15  12  11  10  10  10   9   8   7   7   6   5   5   5   4   4   3   2   2   2   1   1   1   1   1   1
20201017-143058	Info: 'Age' with only one sample: [95 91 92 94 43 97]
20201017-143058	Info: x_train_split: (959, 342)
20201017-143058	Info: x_test_split: (106, 342)
20201017-143348	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=4,
             min_child_weight=3, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.8,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-143348	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}
20201017-143348	Info: Best training-score with mse loss: 0.4752807693393857
20201017-143348	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.475281        0.080095          0.935981         0.003446
1    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.474012        0.060354          0.765001         0.004058
4    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.469878        0.065227          0.764056         0.003607
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.469118        0.071627          0.939767         0.002176
21   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.464437        0.066729          0.995434         0.000493
31  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.462543        0.062407          0.729228         0.003616
7    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.461775        0.055025          0.764503         0.003938
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.461099        0.059945          0.957168         0.002746
6    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.459289        0.059734          0.762899         0.004197
28  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.459206        0.064351          0.729668         0.004222
35  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.457485        0.065311          0.724291         0.004413
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.457467        0.075537          0.944840         0.001930
34  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.457398        0.058145          0.729709         0.005160
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.457238        0.093394          0.938213         0.002517
5    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.456335        0.054423          0.759725         0.004646
2    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.455369        0.057387          0.759106         0.004695
8    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.454669        0.060657          0.760281         0.003942
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.453691        0.084937          0.991952         0.000824
29  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.453333        0.067132          0.724445         0.004342
32  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.453070        0.064070          0.723845         0.004473
33  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.452795        0.071313          0.728148         0.005914
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.451905        0.085696          0.988774         0.001214
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.451516        0.075013          0.958065         0.001884
30  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.451444        0.067962          0.727412         0.005015
27  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.449716        0.062645          0.728466         0.004697
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.447720        0.079268          0.940069         0.002820
11   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.447126        0.090687          0.959367         0.003526
0    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.447094        0.065124          0.763843         0.004157
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.446968        0.068013          0.937674         0.002456
22   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.446741        0.077904          0.996912         0.000673
20201017-143348	Info: R2 Score achieved on training set: 0.9298966380802618
20201017-143348	Info: R2 Score achieved on test set: 0.5138515057092985
20201017-143348	Info: Start normalizer
20201017-143348	Info: 
--------------------------------------
20201017-143348	Info: Iteration 11
20201017-143348	Info: imputer {'name': 'median'}
20201017-143348	Info: outlier {'fit_on': 'train', 'name': 'customOR', 'strategy': 'iqr', 'threshold': 6.5}
20201017-143348	Info: feature_selector {'k': 80, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'True', 'use_select_best_k': 'False'}
20201017-143348	Info: normalizer {'fit_on': 'test', 'name': 'robustscaler'}
20201017-143348	Info: regression {'name': 'xgb'}
20201017-143348	Info: 
----------------------------------------
20201017-143348	Info: Start fit model
20201017-143348	Info: Stratified split
20201017-143348	Info: The number of samples for each 'age/class' are:
    67  75  69  70  68  72  73  74  66  71  65  77  78  63  76  79  81  64  62  80  60  82  61  58  55  56  59  83  57  84  49  54  52  85  53  86  51  87  46  48  88  89  45  50  44  47  42  90  95  91  92  94  43  97
y  56  54  53  50  48  48  47  45  42  41  39  33  32  32  31  28  25  25  23  21  21  20  20  19  19  17  17  16  15  12  11  10  10  10   9   8   7   7   6   5   5   5   4   4   3   2   2   2   1   1   1   1   1   1
20201017-143348	Info: 'Age' with only one sample: [95 91 92 94 43 97]
20201017-143348	Info: x_train_split: (959, 342)
20201017-143348	Info: x_test_split: (106, 342)
20201017-143638	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=4,
             min_child_weight=3, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.8,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-143638	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}
20201017-143638	Info: Best training-score with mse loss: 0.4752807693393857
20201017-143638	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.475281        0.080095          0.935981         0.003446
1    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.474012        0.060354          0.765001         0.004058
4    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.469878        0.065227          0.764056         0.003607
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.469118        0.071627          0.939767         0.002176
21   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.464437        0.066729          0.995434         0.000493
31  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.462543        0.062407          0.729228         0.003616
7    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.461775        0.055025          0.764503         0.003938
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.461099        0.059945          0.957168         0.002746
6    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.459289        0.059734          0.762899         0.004197
28  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.459206        0.064351          0.729668         0.004222
35  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.457485        0.065311          0.724291         0.004413
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.457467        0.075537          0.944840         0.001930
34  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.457398        0.058145          0.729709         0.005160
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.457238        0.093394          0.938213         0.002517
5    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.456335        0.054423          0.759725         0.004646
2    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.455369        0.057387          0.759106         0.004695
8    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.454669        0.060657          0.760281         0.003942
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.453691        0.084937          0.991952         0.000824
29  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.453333        0.067132          0.724445         0.004342
32  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.453070        0.064070          0.723845         0.004473
33  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.452795        0.071313          0.728148         0.005914
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.451905        0.085696          0.988774         0.001214
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.451516        0.075013          0.958065         0.001884
30  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.451444        0.067962          0.727412         0.005015
27  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.449716        0.062645          0.728466         0.004697
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.447720        0.079268          0.940069         0.002820
11   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.447126        0.090687          0.959367         0.003526
0    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.447094        0.065124          0.763843         0.004157
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.446968        0.068013          0.937674         0.002456
22   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.446741        0.077904          0.996912         0.000673
20201017-143638	Info: R2 Score achieved on training set: 0.9298966380802618
20201017-143638	Info: R2 Score achieved on test set: 0.5138515057092985
20201017-143638	Info: Feature Selection
20201017-143638	Info: 
Remove constant features:
20201017-143638	Info: Following columns are constant: [193, 297, 339, 629]
20201017-143638	Info: Variance Threshold  0.0  -> nr of features:  828
20201017-143638	Info: Removed: 4 features
20201017-143638	Info: 
Remove constant features:
20201017-143638	Info: Following columns are constant: [1, 2, 6, 9, 16, 34, 50, 78, 82, 83, 145, 153, 166, 194, 205, 231, 255, 262, 265, 268, 315, 333, 360, 361, 371, 375, 376, 396, 419, 446, 451, 477, 478, 497, 502, 524, 583, 585, 606, 624, 635, 641, 660, 675, 680, 696, 715, 717, 725, 731, 743, 751, 758, 774, 807]
20201017-143638	Info: Variance Threshold  0.01  -> nr of features:  773
20201017-143638	Info: Removed: 55 features
20201017-143638	Info: 
Remove Correlated Features:
20201017-143644	Info: Following features are removed: {256, 636, 130, 386, 643, 764, 520, 137, 521, 765, 268, 270, 271, 527, 407, 665, 539, 156, 542, 415, 671, 424, 41, 682, 684, 558, 432, 305, 179, 691, 183, 440, 567, 443, 573, 318, 191, 701, 449, 450, 67, 452, 705, 331, 715, 462, 208, 83, 467, 598, 217, 602, 91, 347, 733, 734, 223, 224, 354, 739, 357, 742, 615, 745, 622, 369, 497, 498, 116, 244, 760, 761, 380, 637, 254}
20201017-143644	Info: Nr. of features remvoed: 75
20201017-143644	Info: Correlation Threshold  0.8  -> nr of features:  698
20201017-143644	Info: 
Select Best k features:
20201017-143651	Info: SelectKBest k = 80  -> nr features:  80
20201017-143651	Info: Start normalizer
20201017-143651	Info: 
--------------------------------------
20201017-143651	Info: Iteration 12
20201017-143651	Info: imputer {'name': 'median'}
20201017-143651	Info: outlier {'fit_on': 'train', 'name': 'customOR', 'strategy': 'iqr', 'threshold': 6.5}
20201017-143651	Info: feature_selector {'k': 80, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'False', 'use_select_best_k': 'True'}
20201017-143651	Info: normalizer {'fit_on': 'train', 'name': 'robustscaler'}
20201017-143651	Info: regression {'name': 'xgb'}
20201017-143651	Info: 
----------------------------------------
20201017-143651	Info: Start fit model
20201017-143651	Info: Stratified split
20201017-143651	Info: The number of samples for each 'age/class' are:
    67  75  69  70  68  72  73  74  66  71  65  77  78  63  76  79  81  64  62  80  60  82  61  58  55  56  59  83  57  84  49  54  52  85  53  86  51  87  46  48  88  89  45  50  44  47  42  90  95  91  92  94  43  97
y  56  54  53  50  48  48  47  45  42  41  39  33  32  32  31  28  25  25  23  21  21  20  20  19  19  17  17  16  15  12  11  10  10  10   9   8   7   7   6   5   5   5   4   4   3   2   2   2   1   1   1   1   1   1
20201017-143651	Info: 'Age' with only one sample: [95 91 92 94 43 97]
20201017-143651	Info: x_train_split: (959, 80)
20201017-143651	Info: x_test_split: (106, 80)
20201017-143733	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=6,
             min_child_weight=3, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1.0,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-143733	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}
20201017-143733	Info: Best training-score with mse loss: 0.5009039013612584
20201017-143733	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.500904        0.071438          0.986278         0.001862
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.499040        0.074241          0.984104         0.000973
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.498941        0.078566          0.938094         0.002396
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.498784        0.078180          0.919739         0.002805
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.497008        0.074192          0.981037         0.000928
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.494151        0.081616          0.989142         0.000856
24   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.494057        0.056656          0.991049         0.001178
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.491483        0.087787          0.986603         0.001599
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.490083        0.083506          0.988353         0.001402
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.489243        0.076886          0.914673         0.003848
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.488435        0.069266          0.920367         0.004426
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.487069        0.082483          0.922194         0.004781
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.486843        0.089909          0.943403         0.002942
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.486666        0.076814          0.917536         0.004854
26   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.485507        0.084718          0.993107         0.001026
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.484795        0.082961          0.921023         0.003589
16   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.482548        0.077798          0.942632         0.002928
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.482203        0.077919          0.993130         0.000961
23   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.480745        0.094147          0.993934         0.000725
10   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.480640        0.103407          0.946316         0.003980
22   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.479995        0.102299          0.994344         0.000963
19   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.479806        0.115629          0.994596         0.000464
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.479010        0.089636          0.985170         0.000704
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.478100        0.098221          0.987880         0.001184
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.473846        0.082467          0.923365         0.003139
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.472743        0.066244          0.919134         0.003377
12   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.471211        0.087882          0.941998         0.003041
9    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.471116        0.086415          0.942716         0.001725
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.470862        0.071488          0.940076         0.004478
3    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.470658        0.051256          0.746111         0.005012
20201017-143733	Info: R2 Score achieved on training set: 0.9863110115354643
20201017-143733	Info: R2 Score achieved on test set: 0.5698486446191683
20201017-143733	Info: Start normalizer
20201017-143733	Info: 
--------------------------------------
20201017-143733	Info: Iteration 13
20201017-143733	Info: imputer {'name': 'median'}
20201017-143733	Info: outlier {'fit_on': 'train', 'name': 'customOR', 'strategy': 'iqr', 'threshold': 6.5}
20201017-143733	Info: feature_selector {'k': 80, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'False', 'use_select_best_k': 'True'}
20201017-143733	Info: normalizer {'fit_on': 'test', 'name': 'robustscaler'}
20201017-143733	Info: regression {'name': 'xgb'}
20201017-143733	Info: 
----------------------------------------
20201017-143733	Info: Start fit model
20201017-143733	Info: Stratified split
20201017-143733	Info: The number of samples for each 'age/class' are:
    67  75  69  70  68  72  73  74  66  71  65  77  78  63  76  79  81  64  62  80  60  82  61  58  55  56  59  83  57  84  49  54  52  85  53  86  51  87  46  48  88  89  45  50  44  47  42  90  95  91  92  94  43  97
y  56  54  53  50  48  48  47  45  42  41  39  33  32  32  31  28  25  25  23  21  21  20  20  19  19  17  17  16  15  12  11  10  10  10   9   8   7   7   6   5   5   5   4   4   3   2   2   2   1   1   1   1   1   1
20201017-143733	Info: 'Age' with only one sample: [95 91 92 94 43 97]
20201017-143733	Info: x_train_split: (959, 80)
20201017-143733	Info: x_test_split: (106, 80)
20201017-143815	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=6,
             min_child_weight=3, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1.0,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-143815	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}
20201017-143815	Info: Best training-score with mse loss: 0.5009039013612584
20201017-143815	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.500904        0.071438          0.986278         0.001862
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.499040        0.074241          0.984104         0.000973
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.498941        0.078566          0.938094         0.002396
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.498784        0.078180          0.919739         0.002805
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.497008        0.074192          0.981037         0.000928
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.494151        0.081616          0.989142         0.000856
24   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.494057        0.056656          0.991049         0.001178
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.491483        0.087787          0.986603         0.001599
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.490083        0.083506          0.988353         0.001402
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.489243        0.076886          0.914673         0.003848
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.488435        0.069266          0.920367         0.004426
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.487069        0.082483          0.922194         0.004781
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.486843        0.089909          0.943403         0.002942
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.486666        0.076814          0.917536         0.004854
26   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.485507        0.084718          0.993107         0.001026
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.484795        0.082961          0.921023         0.003589
16   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.482548        0.077798          0.942632         0.002928
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.482203        0.077919          0.993130         0.000961
23   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.480745        0.094147          0.993934         0.000725
10   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.480640        0.103407          0.946316         0.003980
22   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.479995        0.102299          0.994344         0.000963
19   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.479806        0.115629          0.994596         0.000464
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.479010        0.089636          0.985170         0.000704
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.478100        0.098221          0.987880         0.001184
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.473846        0.082467          0.923365         0.003139
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.472743        0.066244          0.919134         0.003377
12   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.471211        0.087882          0.941998         0.003041
9    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.471116        0.086415          0.942716         0.001725
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.470862        0.071488          0.940076         0.004478
3    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.470658        0.051256          0.746111         0.005012
20201017-143815	Info: R2 Score achieved on training set: 0.9863110115354643
20201017-143815	Info: R2 Score achieved on test set: 0.5698486446191683
20201017-143815	Info: Feature Selection
20201017-143815	Info: 
Remove constant features:
20201017-143815	Info: Following columns are constant: [193, 297, 339, 629]
20201017-143815	Info: Variance Threshold  0.0  -> nr of features:  828
20201017-143815	Info: Removed: 4 features
20201017-143815	Info: 
Remove constant features:
20201017-143815	Info: Following columns are constant: [1, 2, 6, 9, 16, 34, 50, 78, 82, 83, 145, 153, 166, 194, 205, 231, 255, 262, 265, 268, 315, 333, 360, 361, 371, 375, 376, 396, 419, 446, 451, 477, 478, 497, 502, 524, 583, 585, 606, 624, 635, 641, 660, 675, 680, 696, 715, 717, 725, 731, 743, 751, 758, 774, 807]
20201017-143815	Info: Variance Threshold  0.01  -> nr of features:  773
20201017-143815	Info: Removed: 55 features
20201017-143815	Info: 
Remove Correlated Features:
20201017-143821	Info: Following features are removed: {256, 636, 130, 386, 643, 764, 520, 137, 521, 765, 268, 270, 271, 527, 407, 665, 539, 156, 542, 415, 671, 424, 41, 682, 684, 558, 432, 305, 179, 691, 183, 440, 567, 443, 573, 318, 191, 701, 449, 450, 67, 452, 705, 331, 715, 462, 208, 83, 467, 598, 217, 602, 91, 347, 733, 734, 223, 224, 354, 739, 357, 742, 615, 745, 622, 369, 497, 498, 116, 244, 760, 761, 380, 637, 254}
20201017-143821	Info: Nr. of features remvoed: 75
20201017-143821	Info: Correlation Threshold  0.8  -> nr of features:  698
20201017-143821	Info: Start normalizer
20201017-143821	Info: 
--------------------------------------
20201017-143821	Info: Iteration 14
20201017-143821	Info: imputer {'name': 'median'}
20201017-143821	Info: outlier {'fit_on': 'train', 'name': 'customOR', 'strategy': 'iqr', 'threshold': 6.5}
20201017-143821	Info: feature_selector {'k': 80, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'False', 'use_select_best_k': 'False'}
20201017-143821	Info: normalizer {'fit_on': 'train', 'name': 'robustscaler'}
20201017-143821	Info: regression {'name': 'xgb'}
20201017-143821	Info: 
----------------------------------------
20201017-143821	Info: Start fit model
20201017-143821	Info: Stratified split
20201017-143821	Info: The number of samples for each 'age/class' are:
    67  75  69  70  68  72  73  74  66  71  65  77  78  63  76  79  81  64  62  80  60  82  61  58  55  56  59  83  57  84  49  54  52  85  53  86  51  87  46  48  88  89  45  50  44  47  42  90  95  91  92  94  43  97
y  56  54  53  50  48  48  47  45  42  41  39  33  32  32  31  28  25  25  23  21  21  20  20  19  19  17  17  16  15  12  11  10  10  10   9   8   7   7   6   5   5   5   4   4   3   2   2   2   1   1   1   1   1   1
20201017-143821	Info: 'Age' with only one sample: [95 91 92 94 43 97]
20201017-143821	Info: x_train_split: (959, 698)
20201017-143821	Info: x_test_split: (106, 698)
20201017-144404	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.1, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.100000001, max_delta_step=0, max_depth=2,
             min_child_weight=1, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.8,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-144404	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}
20201017-144404	Info: Best training-score with mse loss: 0.48168519257617043
20201017-144404	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
0    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.481685        0.038429          0.784390         0.002907
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.479378        0.051605          0.951899         0.002118
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.476875        0.077821          0.996184         0.000342
1    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.476657        0.050290          0.785441         0.003628
10   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.475798        0.051921          0.972141         0.001905
6    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.473060        0.047309          0.784753         0.004235
4    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.472142        0.047105          0.786177         0.003857
28  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.470751        0.039246          0.748061         0.004368
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.470746        0.062067          0.954093         0.001443
8    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.469384        0.048776          0.779617         0.004310
3    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.468616        0.046715          0.784988         0.003742
34  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.467863        0.046774          0.747614         0.005667
27  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.466756        0.042837          0.747092         0.004122
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.466459        0.050982          0.951678         0.002288
31  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.465682        0.042805          0.748462         0.004074
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.465291        0.064180          0.992840         0.000712
7    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.464847        0.044499          0.785035         0.004559
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.463786        0.043025          0.949395         0.002160
32  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.463734        0.043020          0.742613         0.004130
2    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.463581        0.046921          0.779060         0.004822
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.463280        0.066114          0.954513         0.001481
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.462935        0.071400          0.993280         0.000872
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.462415        0.068096          0.952702         0.002696
11   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.462056        0.058374          0.968701         0.002676
29  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.461765        0.042562          0.742805         0.003917
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.461737        0.062549          0.952989         0.002505
24   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.461215        0.058522          0.996665         0.000369
33  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.461131        0.048107          0.747514         0.004791
47  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.460761        0.104489          0.996137         0.000772
9    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.460692        0.046959          0.970925         0.001586
20201017-144404	Info: R2 Score achieved on training set: 0.7751192390401009
20201017-144404	Info: R2 Score achieved on test set: 0.5739218086404767
20201017-144404	Info: Start normalizer
20201017-144404	Info: 
--------------------------------------
20201017-144404	Info: Iteration 15
20201017-144404	Info: imputer {'name': 'median'}
20201017-144404	Info: outlier {'fit_on': 'train', 'name': 'customOR', 'strategy': 'iqr', 'threshold': 6.5}
20201017-144404	Info: feature_selector {'k': 80, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'False', 'use_select_best_k': 'False'}
20201017-144404	Info: normalizer {'fit_on': 'test', 'name': 'robustscaler'}
20201017-144404	Info: regression {'name': 'xgb'}
20201017-144404	Info: 
----------------------------------------
20201017-144404	Info: Start fit model
20201017-144404	Info: Stratified split
20201017-144404	Info: The number of samples for each 'age/class' are:
    67  75  69  70  68  72  73  74  66  71  65  77  78  63  76  79  81  64  62  80  60  82  61  58  55  56  59  83  57  84  49  54  52  85  53  86  51  87  46  48  88  89  45  50  44  47  42  90  95  91  92  94  43  97
y  56  54  53  50  48  48  47  45  42  41  39  33  32  32  31  28  25  25  23  21  21  20  20  19  19  17  17  16  15  12  11  10  10  10   9   8   7   7   6   5   5   5   4   4   3   2   2   2   1   1   1   1   1   1
20201017-144404	Info: 'Age' with only one sample: [95 91 92 94 43 97]
20201017-144404	Info: x_train_split: (959, 698)
20201017-144404	Info: x_test_split: (106, 698)
20201017-144946	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.1, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.100000001, max_delta_step=0, max_depth=2,
             min_child_weight=1, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.8,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-144946	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}
20201017-144946	Info: Best training-score with mse loss: 0.48168519257617043
20201017-144946	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
0    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.481685        0.038429          0.784390         0.002907
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.479378        0.051605          0.951899         0.002118
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.476875        0.077821          0.996184         0.000342
1    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.476657        0.050290          0.785441         0.003628
10   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.475798        0.051921          0.972141         0.001905
6    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.473060        0.047309          0.784753         0.004235
4    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.472142        0.047105          0.786177         0.003857
28  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.470751        0.039246          0.748061         0.004368
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.470746        0.062067          0.954093         0.001443
8    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.469384        0.048776          0.779617         0.004310
3    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.468616        0.046715          0.784988         0.003742
34  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.467863        0.046774          0.747614         0.005667
27  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.466756        0.042837          0.747092         0.004122
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.466459        0.050982          0.951678         0.002288
31  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.465682        0.042805          0.748462         0.004074
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.465291        0.064180          0.992840         0.000712
7    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.464847        0.044499          0.785035         0.004559
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.463786        0.043025          0.949395         0.002160
32  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.463734        0.043020          0.742613         0.004130
2    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.463581        0.046921          0.779060         0.004822
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.463280        0.066114          0.954513         0.001481
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.462935        0.071400          0.993280         0.000872
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.462415        0.068096          0.952702         0.002696
11   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.462056        0.058374          0.968701         0.002676
29  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.461765        0.042562          0.742805         0.003917
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.461737        0.062549          0.952989         0.002505
24   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.461215        0.058522          0.996665         0.000369
33  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.461131        0.048107          0.747514         0.004791
47  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.460761        0.104489          0.996137         0.000772
9    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.460692        0.046959          0.970925         0.001586
20201017-144946	Info: R2 Score achieved on training set: 0.7751192390401009
20201017-144946	Info: R2 Score achieved on test set: 0.5739218086404767
20201017-144946	Info: Start outlier detection
20201017-144946	Info: Nr. of outliers removed: 50
20201017-144946	Info: Feature Selection
20201017-144946	Info: 
Remove constant features:
20201017-144946	Info: Following columns are constant: [193, 297, 339, 629]
20201017-144946	Info: Variance Threshold  0.0  -> nr of features:  828
20201017-144946	Info: Removed: 4 features
20201017-144946	Info: 
Remove constant features:
20201017-144946	Info: Following columns are constant: [1, 2, 6, 9, 16, 34, 50, 78, 82, 83, 145, 153, 166, 194, 205, 231, 255, 262, 265, 268, 315, 333, 360, 361, 371, 375, 376, 396, 419, 446, 451, 477, 478, 497, 502, 524, 583, 585, 606, 624, 635, 641, 660, 675, 680, 696, 715, 717, 725, 731, 743, 751, 758, 774, 807]
20201017-144946	Info: Variance Threshold  0.01  -> nr of features:  773
20201017-144946	Info: Removed: 55 features
20201017-144946	Info: 
Remove Correlated Features:
20201017-144953	Info: Following features are removed: {256, 130, 386, 643, 764, 520, 137, 521, 765, 268, 270, 271, 527, 407, 665, 539, 156, 542, 415, 671, 424, 682, 684, 558, 305, 179, 691, 183, 567, 443, 573, 318, 701, 449, 450, 67, 452, 705, 462, 208, 83, 467, 598, 217, 602, 91, 347, 734, 223, 224, 354, 615, 745, 622, 369, 497, 498, 244, 760, 761, 380, 637, 254}
20201017-144953	Info: Nr. of features remvoed: 63
20201017-144953	Info: Correlation Threshold  0.8  -> nr of features:  710
20201017-144953	Info: 
Select Best k features:
20201017-145000	Info: SelectKBest k = 100  -> nr features:  100
20201017-145000	Info: 
Select Best Based on Impurity
20201017-145000	Info: TreeBasedFeatureSelector  -> nr features:  50
20201017-145000	Info: Start normalizer
20201017-145000	Info: 
--------------------------------------
20201017-145000	Info: Iteration 16
20201017-145000	Info: imputer {'name': 'median'}
20201017-145000	Info: outlier {'fit_on': 'train', 'name': 'lof', 'strategy': 'iqr', 'threshold': 6.5}
20201017-145000	Info: feature_selector {'k': 100, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'True', 'use_select_best_k': 'True'}
20201017-145000	Info: normalizer {'fit_on': 'train', 'name': 'robustscaler'}
20201017-145000	Info: regression {'name': 'xgb'}
20201017-145000	Info: 
----------------------------------------
20201017-145000	Info: Start fit model
20201017-145000	Info: Stratified split
20201017-145000	Warning: Indexes do not match, probably because of outlier removal!
20201017-145000	Info: The number of samples for each 'age/class' are:
    67  69  75  72  73  70  68  74  66  71  78  65  77  76  79  63  81  62  64  82  60  80  83  58  55  61  59  56  84  87  85  86  57  49  52  54  51  53  48  50  88  46  89  45  44  47  42  95  90  92  91  94  43  97
y  56  55  52  51  51  49  49  47  44  43  38  38  37  35  34  34  30  27  27  24  23  21  21  20  20  20  17  16  15  14  14  14  14  12  12  11  11  10   9   8   6   6   6   5   2   2   2   2   2   2   1   1   1   1
20201017-145000	Info: 'Age' with only one sample: [91 94 43 97]
20201017-145000	Info: x_train_split: (1046, 50)
20201017-145000	Info: x_test_split: (116, 50)
20201017-145030	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=4,
             min_child_weight=3, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.8,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-145030	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}
20201017-145030	Info: Best training-score with mse loss: 0.5844736282049653
20201017-145030	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.584474        0.060997          0.899881         0.003584
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.582475        0.075220          0.902426         0.003957
16   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.578997        0.054996          0.924037         0.002797
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.578264        0.060284          0.920299         0.003053
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.578098        0.069897          0.899707         0.004006
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.578009        0.073239          0.973558         0.002679
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.578001        0.075988          0.903668         0.004263
24   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.577866        0.065599          0.985989         0.001399
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.577044        0.060258          0.928272         0.003611
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.576892        0.059856          0.924025         0.003109
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.576235        0.073913          0.975637         0.002047
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.574435        0.076724          0.975806         0.001730
26   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.574211        0.066334          0.985359         0.001445
21   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.573048        0.063945          0.987261         0.001074
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.572923        0.059572          0.901928         0.004347
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.572499        0.072583          0.975254         0.002131
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.571798        0.068397          0.987647         0.001383
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.571056        0.066123          0.972762         0.002639
23   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.570494        0.068903          0.986355         0.001713
10   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.570480        0.067871          0.928649         0.002889
9    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.569475        0.064298          0.927409         0.002382
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.569346        0.065242          0.894719         0.004668
22   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.568922        0.068213          0.988417         0.001311
12   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.568737        0.067180          0.925872         0.003406
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.567379        0.059063          0.897352         0.002776
19   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.566494        0.076363          0.989219         0.001540
14   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.565564        0.066491          0.920663         0.004001
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.563360        0.067996          0.977507         0.002392
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.561139        0.072123          0.975635         0.001765
7    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.560735        0.073521          0.749893         0.005041
20201017-145030	Info: R2 Score achieved on training set: 0.8936949902335596
20201017-145030	Info: R2 Score achieved on test set: 0.5201157118087611
20201017-145030	Info: Start normalizer
20201017-145030	Info: 
--------------------------------------
20201017-145030	Info: Iteration 17
20201017-145030	Info: imputer {'name': 'median'}
20201017-145030	Info: outlier {'fit_on': 'train', 'name': 'lof', 'strategy': 'iqr', 'threshold': 6.5}
20201017-145030	Info: feature_selector {'k': 100, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'True', 'use_select_best_k': 'True'}
20201017-145030	Info: normalizer {'fit_on': 'test', 'name': 'robustscaler'}
20201017-145030	Info: regression {'name': 'xgb'}
20201017-145030	Info: 
----------------------------------------
20201017-145030	Info: Start fit model
20201017-145030	Info: Stratified split
20201017-145030	Info: The number of samples for each 'age/class' are:
    67  69  75  72  73  70  68  74  66  71  78  65  77  76  79  63  81  62  64  82  60  80  83  58  55  61  59  56  84  87  85  86  57  49  52  54  51  53  48  50  88  46  89  45  44  47  42  95  90  92  91  94  43  97
y  56  55  52  51  51  49  49  47  44  43  38  38  37  35  34  34  30  27  27  24  23  21  21  20  20  20  17  16  15  14  14  14  14  12  12  11  11  10   9   8   6   6   6   5   2   2   2   2   2   2   1   1   1   1
20201017-145030	Info: 'Age' with only one sample: [91 94 43 97]
20201017-145030	Info: x_train_split: (1046, 50)
20201017-145030	Info: x_test_split: (116, 50)
20201017-145059	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=4,
             min_child_weight=3, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.8,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-145059	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}
20201017-145059	Info: Best training-score with mse loss: 0.5844736282049653
20201017-145059	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.584474        0.060997          0.899881         0.003584
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.582475        0.075220          0.902426         0.003957
16   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.578997        0.054996          0.924037         0.002797
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.578264        0.060284          0.920299         0.003053
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.578098        0.069897          0.899707         0.004006
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.578009        0.073239          0.973558         0.002679
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.578001        0.075988          0.903668         0.004263
24   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.577866        0.065599          0.985989         0.001399
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.577044        0.060258          0.928272         0.003611
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.576892        0.059856          0.924025         0.003109
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.576235        0.073913          0.975637         0.002047
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.574435        0.076724          0.975806         0.001730
26   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.574211        0.066334          0.985359         0.001445
21   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.573048        0.063945          0.987261         0.001074
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.572923        0.059572          0.901928         0.004347
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.572499        0.072583          0.975254         0.002131
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.571798        0.068397          0.987647         0.001383
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.571056        0.066123          0.972762         0.002639
23   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.570494        0.068903          0.986355         0.001713
10   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.570480        0.067871          0.928649         0.002889
9    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.569475        0.064298          0.927409         0.002382
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.569346        0.065242          0.894719         0.004668
22   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.568922        0.068213          0.988417         0.001311
12   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.568737        0.067180          0.925872         0.003406
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.567379        0.059063          0.897352         0.002776
19   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.566494        0.076363          0.989219         0.001540
14   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.565564        0.066491          0.920663         0.004001
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.563360        0.067996          0.977507         0.002392
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.561139        0.072123          0.975635         0.001765
7    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.560735        0.073521          0.749893         0.005041
20201017-145059	Info: R2 Score achieved on training set: 0.8936949902335596
20201017-145059	Info: R2 Score achieved on test set: 0.5201157118087611
20201017-145059	Info: Feature Selection
20201017-145059	Info: 
Remove constant features:
20201017-145059	Info: Following columns are constant: [193, 297, 339, 629]
20201017-145059	Info: Variance Threshold  0.0  -> nr of features:  828
20201017-145059	Info: Removed: 4 features
20201017-145059	Info: 
Remove constant features:
20201017-145059	Info: Following columns are constant: [1, 2, 6, 9, 16, 34, 50, 78, 82, 83, 145, 153, 166, 194, 205, 231, 255, 262, 265, 268, 315, 333, 360, 361, 371, 375, 376, 396, 419, 446, 451, 477, 478, 497, 502, 524, 583, 585, 606, 624, 635, 641, 660, 675, 680, 696, 715, 717, 725, 731, 743, 751, 758, 774, 807]
20201017-145059	Info: Variance Threshold  0.01  -> nr of features:  773
20201017-145059	Info: Removed: 55 features
20201017-145059	Info: 
Remove Correlated Features:
20201017-145106	Info: Following features are removed: {256, 130, 386, 643, 764, 520, 137, 521, 765, 268, 270, 271, 527, 407, 665, 539, 156, 542, 415, 671, 424, 682, 684, 558, 305, 179, 691, 183, 567, 443, 573, 318, 701, 449, 450, 67, 452, 705, 462, 208, 83, 467, 598, 217, 602, 91, 347, 734, 223, 224, 354, 615, 745, 622, 369, 497, 498, 244, 760, 761, 380, 637, 254}
20201017-145106	Info: Nr. of features remvoed: 63
20201017-145106	Info: Correlation Threshold  0.8  -> nr of features:  710
20201017-145106	Info: 
Select Best Based on Impurity
20201017-145106	Info: TreeBasedFeatureSelector  -> nr features:  347
20201017-145106	Info: Start normalizer
20201017-145106	Info: 
--------------------------------------
20201017-145106	Info: Iteration 18
20201017-145106	Info: imputer {'name': 'median'}
20201017-145106	Info: outlier {'fit_on': 'train', 'name': 'lof', 'strategy': 'iqr', 'threshold': 6.5}
20201017-145106	Info: feature_selector {'k': 100, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'True', 'use_select_best_k': 'False'}
20201017-145106	Info: normalizer {'fit_on': 'train', 'name': 'robustscaler'}
20201017-145106	Info: regression {'name': 'xgb'}
20201017-145106	Info: 
----------------------------------------
20201017-145106	Info: Start fit model
20201017-145106	Info: Stratified split
20201017-145106	Info: The number of samples for each 'age/class' are:
    67  69  75  72  73  70  68  74  66  71  78  65  77  76  79  63  81  62  64  82  60  80  83  58  55  61  59  56  84  87  85  86  57  49  52  54  51  53  48  50  88  46  89  45  44  47  42  95  90  92  91  94  43  97
y  56  55  52  51  51  49  49  47  44  43  38  38  37  35  34  34  30  27  27  24  23  21  21  20  20  20  17  16  15  14  14  14  14  12  12  11  11  10   9   8   6   6   6   5   2   2   2   2   2   2   1   1   1   1
20201017-145106	Info: 'Age' with only one sample: [91 94 43 97]
20201017-145106	Info: x_train_split: (1046, 347)
20201017-145106	Info: x_test_split: (116, 347)
20201017-145414	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=6,
             min_child_weight=3, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.9,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-145414	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}
20201017-145414	Info: Best training-score with mse loss: 0.579489488903626
20201017-145414	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.579489        0.070056          0.992414         0.000790
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.577419        0.070372          0.946973         0.002666
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.576640        0.070683          0.991299         0.000971
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.575195        0.083043          0.948390         0.002219
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.572443        0.073128          0.945742         0.002492
16   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.571727        0.092323          0.965209         0.001677
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.571484        0.085272          0.993647         0.000865
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.568274        0.077769          0.993203         0.000863
14   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.567989        0.085232          0.964414         0.002012
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.567266        0.070999          0.992042         0.000807
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.566948        0.070939          0.993926         0.000551
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.566465        0.068604          0.996734         0.000362
12   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.565708        0.075573          0.965100         0.001455
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.565171        0.079738          0.963870         0.002918
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.563890        0.075658          0.945878         0.002735
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.563706        0.083885          0.946135         0.002904
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.562061        0.081396          0.965585         0.001730
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.561627        0.079332          0.945257         0.001761
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.561511        0.083443          0.946898         0.001465
47  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.561163        0.098139          0.993360         0.000999
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.561144        0.096200          0.948187         0.002834
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.561074        0.092246          0.963141         0.001599
26   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.560977        0.080145          0.997056         0.000439
23   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.558646        0.082412          0.997206         0.000347
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.558047        0.094468          0.946002         0.002525
11   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.557727        0.086804          0.963333         0.002152
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.557023        0.097627          0.993546         0.000695
34  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.556119        0.087414          0.765936         0.005184
21   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.555439        0.070958          0.996326         0.000428
9    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.553087        0.083747          0.964913         0.001128
20201017-145414	Info: R2 Score achieved on training set: 0.9910170448421458
20201017-145414	Info: R2 Score achieved on test set: 0.5922454578741718
20201017-145414	Info: Start normalizer
20201017-145414	Info: 
--------------------------------------
20201017-145414	Info: Iteration 19
20201017-145414	Info: imputer {'name': 'median'}
20201017-145414	Info: outlier {'fit_on': 'train', 'name': 'lof', 'strategy': 'iqr', 'threshold': 6.5}
20201017-145414	Info: feature_selector {'k': 100, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'True', 'use_select_best_k': 'False'}
20201017-145414	Info: normalizer {'fit_on': 'test', 'name': 'robustscaler'}
20201017-145414	Info: regression {'name': 'xgb'}
20201017-145414	Info: 
----------------------------------------
20201017-145414	Info: Start fit model
20201017-145414	Info: Stratified split
20201017-145414	Info: The number of samples for each 'age/class' are:
    67  69  75  72  73  70  68  74  66  71  78  65  77  76  79  63  81  62  64  82  60  80  83  58  55  61  59  56  84  87  85  86  57  49  52  54  51  53  48  50  88  46  89  45  44  47  42  95  90  92  91  94  43  97
y  56  55  52  51  51  49  49  47  44  43  38  38  37  35  34  34  30  27  27  24  23  21  21  20  20  20  17  16  15  14  14  14  14  12  12  11  11  10   9   8   6   6   6   5   2   2   2   2   2   2   1   1   1   1
20201017-145414	Info: 'Age' with only one sample: [91 94 43 97]
20201017-145414	Info: x_train_split: (1046, 347)
20201017-145414	Info: x_test_split: (116, 347)
20201017-145723	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=6,
             min_child_weight=3, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.9,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-145723	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}
20201017-145723	Info: Best training-score with mse loss: 0.579489488903626
20201017-145723	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.579489        0.070056          0.992414         0.000790
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.577419        0.070372          0.946973         0.002666
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.576640        0.070683          0.991299         0.000971
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.575195        0.083043          0.948390         0.002219
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.572443        0.073128          0.945742         0.002492
16   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.571727        0.092323          0.965209         0.001677
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.571484        0.085272          0.993647         0.000865
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.568274        0.077769          0.993203         0.000863
14   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.567989        0.085232          0.964414         0.002012
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.567266        0.070999          0.992042         0.000807
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.566948        0.070939          0.993926         0.000551
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.566465        0.068604          0.996734         0.000362
12   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.565708        0.075573          0.965100         0.001455
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.565171        0.079738          0.963870         0.002918
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.563890        0.075658          0.945878         0.002735
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.563706        0.083885          0.946135         0.002904
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.562061        0.081396          0.965585         0.001730
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.561627        0.079332          0.945257         0.001761
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.561511        0.083443          0.946898         0.001465
47  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.561163        0.098139          0.993360         0.000999
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.561144        0.096200          0.948187         0.002834
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.561074        0.092246          0.963141         0.001599
26   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.560977        0.080145          0.997056         0.000439
23   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.558646        0.082412          0.997206         0.000347
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.558047        0.094468          0.946002         0.002525
11   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.557727        0.086804          0.963333         0.002152
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.557023        0.097627          0.993546         0.000695
34  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.556119        0.087414          0.765936         0.005184
21   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.555439        0.070958          0.996326         0.000428
9    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.553087        0.083747          0.964913         0.001128
20201017-145723	Info: R2 Score achieved on training set: 0.9910170448421458
20201017-145723	Info: R2 Score achieved on test set: 0.5922454578741718
20201017-145723	Info: Feature Selection
20201017-145723	Info: 
Remove constant features:
20201017-145723	Info: Following columns are constant: [193, 297, 339, 629]
20201017-145723	Info: Variance Threshold  0.0  -> nr of features:  828
20201017-145723	Info: Removed: 4 features
20201017-145723	Info: 
Remove constant features:
20201017-145723	Info: Following columns are constant: [1, 2, 6, 9, 16, 34, 50, 78, 82, 83, 145, 153, 166, 194, 205, 231, 255, 262, 265, 268, 315, 333, 360, 361, 371, 375, 376, 396, 419, 446, 451, 477, 478, 497, 502, 524, 583, 585, 606, 624, 635, 641, 660, 675, 680, 696, 715, 717, 725, 731, 743, 751, 758, 774, 807]
20201017-145723	Info: Variance Threshold  0.01  -> nr of features:  773
20201017-145723	Info: Removed: 55 features
20201017-145723	Info: 
Remove Correlated Features:
20201017-145729	Info: Following features are removed: {256, 130, 386, 643, 764, 520, 137, 521, 765, 268, 270, 271, 527, 407, 665, 539, 156, 542, 415, 671, 424, 682, 684, 558, 305, 179, 691, 183, 567, 443, 573, 318, 701, 449, 450, 67, 452, 705, 462, 208, 83, 467, 598, 217, 602, 91, 347, 734, 223, 224, 354, 615, 745, 622, 369, 497, 498, 244, 760, 761, 380, 637, 254}
20201017-145729	Info: Nr. of features remvoed: 63
20201017-145729	Info: Correlation Threshold  0.8  -> nr of features:  710
20201017-145729	Info: 
Select Best k features:
20201017-145736	Info: SelectKBest k = 100  -> nr features:  100
20201017-145736	Info: Start normalizer
20201017-145736	Info: 
--------------------------------------
20201017-145736	Info: Iteration 20
20201017-145736	Info: imputer {'name': 'median'}
20201017-145736	Info: outlier {'fit_on': 'train', 'name': 'lof', 'strategy': 'iqr', 'threshold': 6.5}
20201017-145736	Info: feature_selector {'k': 100, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'False', 'use_select_best_k': 'True'}
20201017-145736	Info: normalizer {'fit_on': 'train', 'name': 'robustscaler'}
20201017-145736	Info: regression {'name': 'xgb'}
20201017-145736	Info: 
----------------------------------------
20201017-145736	Info: Start fit model
20201017-145736	Info: Stratified split
20201017-145736	Info: The number of samples for each 'age/class' are:
    67  69  75  72  73  70  68  74  66  71  78  65  77  76  79  63  81  62  64  82  60  80  83  58  55  61  59  56  84  87  85  86  57  49  52  54  51  53  48  50  88  46  89  45  44  47  42  95  90  92  91  94  43  97
y  56  55  52  51  51  49  49  47  44  43  38  38  37  35  34  34  30  27  27  24  23  21  21  20  20  20  17  16  15  14  14  14  14  12  12  11  11  10   9   8   6   6   6   5   2   2   2   2   2   2   1   1   1   1
20201017-145736	Info: 'Age' with only one sample: [91 94 43 97]
20201017-145736	Info: x_train_split: (1046, 100)
20201017-145736	Info: x_test_split: (116, 100)
20201017-145833	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=6,
             min_child_weight=3, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.8,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-145833	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}
20201017-145833	Info: Best training-score with mse loss: 0.6021698028293276
20201017-145833	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.602170        0.069805          0.984374         0.001027
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.599202        0.073072          0.925420         0.003588
16   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.598060        0.064406          0.946390         0.002110
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.596199        0.081083          0.924431         0.003733
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.594179        0.068853          0.986505         0.001820
26   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.593763        0.082026          0.993308         0.000682
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.593323        0.072151          0.926218         0.003154
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.593319        0.084672          0.993234         0.001111
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.591314        0.071304          0.947950         0.004083
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.590270        0.066520          0.985725         0.001031
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.589965        0.069285          0.921329         0.004592
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.589010        0.068849          0.926601         0.003368
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.589003        0.085529          0.944406         0.003497
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.587170        0.076269          0.987658         0.000841
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.586659        0.095832          0.985941         0.001164
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.585916        0.068915          0.924548         0.005555
23   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.585459        0.080722          0.993316         0.001033
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.584387        0.095775          0.926063         0.002831
14   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.583588        0.074868          0.943925         0.003077
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.582420        0.069965          0.943989         0.002931
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.582176        0.086977          0.924582         0.004872
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.581198        0.084437          0.987472         0.001382
19   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.581093        0.080965          0.994117         0.000457
47  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.580845        0.083257          0.986432         0.001269
12   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.580764        0.077071          0.946411         0.002449
11   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.580521        0.087780          0.943290         0.002671
10   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.579422        0.074646          0.949059         0.002133
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.579062        0.078161          0.928527         0.002741
22   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.578564        0.075983          0.994152         0.000847
24   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.578156        0.072749          0.992246         0.000790
20201017-145833	Info: R2 Score achieved on training set: 0.9808126826065153
20201017-145833	Info: R2 Score achieved on test set: 0.5939988509677374
20201017-145833	Info: Start normalizer
20201017-145833	Info: 
--------------------------------------
20201017-145833	Info: Iteration 21
20201017-145833	Info: imputer {'name': 'median'}
20201017-145833	Info: outlier {'fit_on': 'train', 'name': 'lof', 'strategy': 'iqr', 'threshold': 6.5}
20201017-145833	Info: feature_selector {'k': 100, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'False', 'use_select_best_k': 'True'}
20201017-145833	Info: normalizer {'fit_on': 'test', 'name': 'robustscaler'}
20201017-145833	Info: regression {'name': 'xgb'}
20201017-145833	Info: 
----------------------------------------
20201017-145833	Info: Start fit model
20201017-145833	Info: Stratified split
20201017-145833	Info: The number of samples for each 'age/class' are:
    67  69  75  72  73  70  68  74  66  71  78  65  77  76  79  63  81  62  64  82  60  80  83  58  55  61  59  56  84  87  85  86  57  49  52  54  51  53  48  50  88  46  89  45  44  47  42  95  90  92  91  94  43  97
y  56  55  52  51  51  49  49  47  44  43  38  38  37  35  34  34  30  27  27  24  23  21  21  20  20  20  17  16  15  14  14  14  14  12  12  11  11  10   9   8   6   6   6   5   2   2   2   2   2   2   1   1   1   1
20201017-145833	Info: 'Age' with only one sample: [91 94 43 97]
20201017-145833	Info: x_train_split: (1046, 100)
20201017-145833	Info: x_test_split: (116, 100)
20201017-145930	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=6,
             min_child_weight=3, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.8,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-145930	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}
20201017-145930	Info: Best training-score with mse loss: 0.6021698028293276
20201017-145930	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.602170        0.069805          0.984374         0.001027
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.599202        0.073072          0.925420         0.003588
16   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.598060        0.064406          0.946390         0.002110
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.596199        0.081083          0.924431         0.003733
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.594179        0.068853          0.986505         0.001820
26   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.593763        0.082026          0.993308         0.000682
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.593323        0.072151          0.926218         0.003154
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.593319        0.084672          0.993234         0.001111
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.591314        0.071304          0.947950         0.004083
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.590270        0.066520          0.985725         0.001031
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.589965        0.069285          0.921329         0.004592
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.589010        0.068849          0.926601         0.003368
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.589003        0.085529          0.944406         0.003497
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.587170        0.076269          0.987658         0.000841
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.586659        0.095832          0.985941         0.001164
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.585916        0.068915          0.924548         0.005555
23   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.585459        0.080722          0.993316         0.001033
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.584387        0.095775          0.926063         0.002831
14   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.583588        0.074868          0.943925         0.003077
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.582420        0.069965          0.943989         0.002931
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.582176        0.086977          0.924582         0.004872
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.581198        0.084437          0.987472         0.001382
19   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.581093        0.080965          0.994117         0.000457
47  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.580845        0.083257          0.986432         0.001269
12   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.580764        0.077071          0.946411         0.002449
11   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.580521        0.087780          0.943290         0.002671
10   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.579422        0.074646          0.949059         0.002133
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.579062        0.078161          0.928527         0.002741
22   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.578564        0.075983          0.994152         0.000847
24   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.578156        0.072749          0.992246         0.000790
20201017-145930	Info: R2 Score achieved on training set: 0.9808126826065153
20201017-145930	Info: R2 Score achieved on test set: 0.5939988509677374
20201017-145930	Info: Feature Selection
20201017-145930	Info: 
Remove constant features:
20201017-145930	Info: Following columns are constant: [193, 297, 339, 629]
20201017-145930	Info: Variance Threshold  0.0  -> nr of features:  828
20201017-145930	Info: Removed: 4 features
20201017-145930	Info: 
Remove constant features:
20201017-145930	Info: Following columns are constant: [1, 2, 6, 9, 16, 34, 50, 78, 82, 83, 145, 153, 166, 194, 205, 231, 255, 262, 265, 268, 315, 333, 360, 361, 371, 375, 376, 396, 419, 446, 451, 477, 478, 497, 502, 524, 583, 585, 606, 624, 635, 641, 660, 675, 680, 696, 715, 717, 725, 731, 743, 751, 758, 774, 807]
20201017-145930	Info: Variance Threshold  0.01  -> nr of features:  773
20201017-145930	Info: Removed: 55 features
20201017-145930	Info: 
Remove Correlated Features:
20201017-145936	Info: Following features are removed: {256, 130, 386, 643, 764, 520, 137, 521, 765, 268, 270, 271, 527, 407, 665, 539, 156, 542, 415, 671, 424, 682, 684, 558, 305, 179, 691, 183, 567, 443, 573, 318, 701, 449, 450, 67, 452, 705, 462, 208, 83, 467, 598, 217, 602, 91, 347, 734, 223, 224, 354, 615, 745, 622, 369, 497, 498, 244, 760, 761, 380, 637, 254}
20201017-145936	Info: Nr. of features remvoed: 63
20201017-145936	Info: Correlation Threshold  0.8  -> nr of features:  710
20201017-145936	Info: Start normalizer
20201017-145936	Info: 
--------------------------------------
20201017-145936	Info: Iteration 22
20201017-145936	Info: imputer {'name': 'median'}
20201017-145936	Info: outlier {'fit_on': 'train', 'name': 'lof', 'strategy': 'iqr', 'threshold': 6.5}
20201017-145936	Info: feature_selector {'k': 100, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'False', 'use_select_best_k': 'False'}
20201017-145936	Info: normalizer {'fit_on': 'train', 'name': 'robustscaler'}
20201017-145936	Info: regression {'name': 'xgb'}
20201017-145936	Info: 
----------------------------------------
20201017-145936	Info: Start fit model
20201017-145936	Info: Stratified split
20201017-145936	Info: The number of samples for each 'age/class' are:
    67  69  75  72  73  70  68  74  66  71  78  65  77  76  79  63  81  62  64  82  60  80  83  58  55  61  59  56  84  87  85  86  57  49  52  54  51  53  48  50  88  46  89  45  44  47  42  95  90  92  91  94  43  97
y  56  55  52  51  51  49  49  47  44  43  38  38  37  35  34  34  30  27  27  24  23  21  21  20  20  20  17  16  15  14  14  14  14  12  12  11  11  10   9   8   6   6   6   5   2   2   2   2   2   2   1   1   1   1
20201017-145936	Info: 'Age' with only one sample: [91 94 43 97]
20201017-145936	Info: x_train_split: (1046, 710)
20201017-145936	Info: x_test_split: (116, 710)
20201017-150556	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=4,
             min_child_weight=2, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.8,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-150556	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}
20201017-150556	Info: Best training-score with mse loss: 0.5780600993858084
20201017-150556	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.578060        0.060494          0.956522         0.001987
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.578021        0.084058          0.957299         0.002619
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.571786        0.086985          0.957535         0.001508
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.569623        0.077334          0.994094         0.000540
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.568370        0.081902          0.994752         0.000343
11   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.567453        0.094092          0.972410         0.001179
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.566164        0.088891          0.994049         0.000632
16   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.565229        0.079937          0.973811         0.000800
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.565178        0.093102          0.995564         0.000418
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.564954        0.084205          0.974178         0.001310
12   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.564688        0.074875          0.972845         0.001434
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.564475        0.100136          0.958558         0.001548
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.564407        0.080773          0.971898         0.001467
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.563964        0.075257          0.972950         0.001802
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.563559        0.080405          0.956197         0.002578
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.563366        0.089937          0.958151         0.002012
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.563064        0.094485          0.995237         0.000501
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.561007        0.077770          0.996062         0.000439
19   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.560997        0.079647          0.998351         0.000197
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.560970        0.071566          0.996020         0.000442
23   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.560304        0.085691          0.998437         0.000222
18   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.559167        0.089401          0.997684         0.000259
26   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.559122        0.076300          0.998372         0.000093
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.558598        0.085909          0.998188         0.000302
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.558528        0.083973          0.958582         0.001821
30  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.558346        0.094662          0.776282         0.004154
28  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.557821        0.094597          0.776769         0.005058
1    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.557504        0.099462          0.808096         0.004863
27  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.557227        0.093039          0.776716         0.004350
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.556935        0.084169          0.956128         0.002130
20201017-150556	Info: R2 Score achieved on training set: 0.9450031664363248
20201017-150556	Info: R2 Score achieved on test set: 0.5508267243432567
20201017-150556	Info: Start normalizer
20201017-150556	Info: 
--------------------------------------
20201017-150556	Info: Iteration 23
20201017-150556	Info: imputer {'name': 'median'}
20201017-150556	Info: outlier {'fit_on': 'train', 'name': 'lof', 'strategy': 'iqr', 'threshold': 6.5}
20201017-150556	Info: feature_selector {'k': 100, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'False', 'use_select_best_k': 'False'}
20201017-150556	Info: normalizer {'fit_on': 'test', 'name': 'robustscaler'}
20201017-150556	Info: regression {'name': 'xgb'}
20201017-150556	Info: 
----------------------------------------
20201017-150556	Info: Start fit model
20201017-150556	Info: Stratified split
20201017-150556	Info: The number of samples for each 'age/class' are:
    67  69  75  72  73  70  68  74  66  71  78  65  77  76  79  63  81  62  64  82  60  80  83  58  55  61  59  56  84  87  85  86  57  49  52  54  51  53  48  50  88  46  89  45  44  47  42  95  90  92  91  94  43  97
y  56  55  52  51  51  49  49  47  44  43  38  38  37  35  34  34  30  27  27  24  23  21  21  20  20  20  17  16  15  14  14  14  14  12  12  11  11  10   9   8   6   6   6   5   2   2   2   2   2   2   1   1   1   1
20201017-150556	Info: 'Age' with only one sample: [91 94 43 97]
20201017-150556	Info: x_train_split: (1046, 710)
20201017-150556	Info: x_test_split: (116, 710)
20201017-151216	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=4,
             min_child_weight=2, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.8,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-151216	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}
20201017-151216	Info: Best training-score with mse loss: 0.5780600993858084
20201017-151216	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.578060        0.060494          0.956522         0.001987
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.578021        0.084058          0.957299         0.002619
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.571786        0.086985          0.957535         0.001508
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.569623        0.077334          0.994094         0.000540
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.568370        0.081902          0.994752         0.000343
11   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.567453        0.094092          0.972410         0.001179
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.566164        0.088891          0.994049         0.000632
16   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.565229        0.079937          0.973811         0.000800
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.565178        0.093102          0.995564         0.000418
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.564954        0.084205          0.974178         0.001310
12   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.564688        0.074875          0.972845         0.001434
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.564475        0.100136          0.958558         0.001548
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.564407        0.080773          0.971898         0.001467
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.563964        0.075257          0.972950         0.001802
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.563559        0.080405          0.956197         0.002578
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.563366        0.089937          0.958151         0.002012
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.563064        0.094485          0.995237         0.000501
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.561007        0.077770          0.996062         0.000439
19   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.560997        0.079647          0.998351         0.000197
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.560970        0.071566          0.996020         0.000442
23   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.560304        0.085691          0.998437         0.000222
18   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.559167        0.089401          0.997684         0.000259
26   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.559122        0.076300          0.998372         0.000093
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.558598        0.085909          0.998188         0.000302
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.558528        0.083973          0.958582         0.001821
30  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.558346        0.094662          0.776282         0.004154
28  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.557821        0.094597          0.776769         0.005058
1    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.557504        0.099462          0.808096         0.004863
27  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.557227        0.093039          0.776716         0.004350
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.556935        0.084169          0.956128         0.002130
20201017-151216	Info: R2 Score achieved on training set: 0.9450031664363248
20201017-151216	Info: R2 Score achieved on test set: 0.5508267243432567
20201017-151216	Info: Feature Selection
20201017-151216	Info: 
Remove constant features:
20201017-151216	Info: Following columns are constant: [193, 297, 339, 629]
20201017-151216	Info: Variance Threshold  0.0  -> nr of features:  828
20201017-151216	Info: Removed: 4 features
20201017-151216	Info: 
Remove constant features:
20201017-151216	Info: Following columns are constant: [1, 2, 6, 9, 16, 34, 50, 78, 82, 83, 145, 153, 166, 194, 205, 231, 255, 262, 265, 268, 315, 333, 360, 361, 371, 375, 376, 396, 419, 446, 451, 477, 478, 497, 502, 524, 583, 585, 606, 624, 635, 641, 660, 675, 680, 696, 715, 717, 725, 731, 743, 751, 758, 774, 807]
20201017-151216	Info: Variance Threshold  0.01  -> nr of features:  773
20201017-151216	Info: Removed: 55 features
20201017-151216	Info: 
Remove Correlated Features:
20201017-151222	Info: Following features are removed: {256, 130, 386, 643, 764, 520, 137, 521, 765, 268, 270, 271, 527, 407, 665, 539, 156, 542, 415, 671, 424, 682, 684, 558, 305, 179, 691, 183, 567, 443, 573, 318, 701, 449, 450, 67, 452, 705, 462, 208, 83, 467, 598, 217, 602, 91, 347, 734, 223, 224, 354, 615, 745, 622, 369, 497, 498, 244, 760, 761, 380, 637, 254}
20201017-151222	Info: Nr. of features remvoed: 63
20201017-151222	Info: Correlation Threshold  0.8  -> nr of features:  710
20201017-151222	Info: 
Select Best k features:
20201017-151229	Info: SelectKBest k = 80  -> nr features:  80
20201017-151229	Info: 
Select Best Based on Impurity
20201017-151230	Info: TreeBasedFeatureSelector  -> nr features:  34
20201017-151230	Info: Start normalizer
20201017-151230	Info: 
--------------------------------------
20201017-151230	Info: Iteration 24
20201017-151230	Info: imputer {'name': 'median'}
20201017-151230	Info: outlier {'fit_on': 'train', 'name': 'lof', 'strategy': 'iqr', 'threshold': 6.5}
20201017-151230	Info: feature_selector {'k': 80, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'True', 'use_select_best_k': 'True'}
20201017-151230	Info: normalizer {'fit_on': 'train', 'name': 'robustscaler'}
20201017-151230	Info: regression {'name': 'xgb'}
20201017-151230	Info: 
----------------------------------------
20201017-151230	Info: Start fit model
20201017-151230	Info: Stratified split
20201017-151230	Info: The number of samples for each 'age/class' are:
    67  69  75  72  73  70  68  74  66  71  78  65  77  76  79  63  81  62  64  82  60  80  83  58  55  61  59  56  84  87  85  86  57  49  52  54  51  53  48  50  88  46  89  45  44  47  42  95  90  92  91  94  43  97
y  56  55  52  51  51  49  49  47  44  43  38  38  37  35  34  34  30  27  27  24  23  21  21  20  20  20  17  16  15  14  14  14  14  12  12  11  11  10   9   8   6   6   6   5   2   2   2   2   2   2   1   1   1   1
20201017-151230	Info: 'Age' with only one sample: [91 94 43 97]
20201017-151230	Info: x_train_split: (1046, 34)
20201017-151230	Info: x_test_split: (116, 34)
20201017-151250	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=6,
             min_child_weight=2, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.8,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-151250	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}
20201017-151250	Info: Best training-score with mse loss: 0.5741421437278251
20201017-151250	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.574142        0.091949          0.968863         0.002175
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.571669        0.075448          0.885811         0.004191
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.570719        0.081796          0.970067         0.002249
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.568851        0.073805          0.965311         0.002523
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.567932        0.068112          0.881533         0.004453
10   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.566235        0.088390          0.912191         0.003092
21   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.566206        0.080171          0.982257         0.001237
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.565225        0.074831          0.969666         0.001931
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.564930        0.083542          0.964677         0.002114
22   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.564830        0.072979          0.982099         0.002211
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.564763        0.077777          0.961796         0.002367
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.564058        0.076144          0.885597         0.003833
16   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.563483        0.070176          0.906053         0.004802
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.563198        0.083465          0.887396         0.004350
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.563138        0.081549          0.878380         0.004255
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.562996        0.075718          0.886662         0.005351
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.562430        0.075570          0.907782         0.003197
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.561580        0.075036          0.880586         0.004686
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.560535        0.068928          0.902049         0.003509
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.559828        0.073950          0.879960         0.004594
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.557508        0.084939          0.880384         0.003143
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.557286        0.073043          0.909652         0.003188
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.556404        0.076912          0.965139         0.002009
20   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.556392        0.093253          0.979104         0.001645
12   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.556143        0.083243          0.910001         0.004304
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.555924        0.078169          0.970843         0.002032
18   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.555071        0.093547          0.983683         0.001368
14   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.554899        0.078705          0.904052         0.004305
9    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.553735        0.092431          0.913087         0.003807
26   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.553575        0.073464          0.977357         0.002381
20201017-151250	Info: R2 Score achieved on training set: 0.9595856875421548
20201017-151250	Info: R2 Score achieved on test set: 0.5474845174551972
20201017-151250	Info: Start normalizer
20201017-151250	Info: 
--------------------------------------
20201017-151250	Info: Iteration 25
20201017-151250	Info: imputer {'name': 'median'}
20201017-151250	Info: outlier {'fit_on': 'train', 'name': 'lof', 'strategy': 'iqr', 'threshold': 6.5}
20201017-151250	Info: feature_selector {'k': 80, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'True', 'use_select_best_k': 'True'}
20201017-151250	Info: normalizer {'fit_on': 'test', 'name': 'robustscaler'}
20201017-151250	Info: regression {'name': 'xgb'}
20201017-151250	Info: 
----------------------------------------
20201017-151250	Info: Start fit model
20201017-151250	Info: Stratified split
20201017-151250	Info: The number of samples for each 'age/class' are:
    67  69  75  72  73  70  68  74  66  71  78  65  77  76  79  63  81  62  64  82  60  80  83  58  55  61  59  56  84  87  85  86  57  49  52  54  51  53  48  50  88  46  89  45  44  47  42  95  90  92  91  94  43  97
y  56  55  52  51  51  49  49  47  44  43  38  38  37  35  34  34  30  27  27  24  23  21  21  20  20  20  17  16  15  14  14  14  14  12  12  11  11  10   9   8   6   6   6   5   2   2   2   2   2   2   1   1   1   1
20201017-151250	Info: 'Age' with only one sample: [91 94 43 97]
20201017-151250	Info: x_train_split: (1046, 34)
20201017-151250	Info: x_test_split: (116, 34)
20201017-151311	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=6,
             min_child_weight=2, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.8,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-151311	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}
20201017-151311	Info: Best training-score with mse loss: 0.5741421437278251
20201017-151311	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.574142        0.091949          0.968863         0.002175
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.571669        0.075448          0.885811         0.004191
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.570719        0.081796          0.970067         0.002249
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.568851        0.073805          0.965311         0.002523
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.567932        0.068112          0.881533         0.004453
10   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.566235        0.088390          0.912191         0.003092
21   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.566206        0.080171          0.982257         0.001237
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.565225        0.074831          0.969666         0.001931
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.564930        0.083542          0.964677         0.002114
22   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.564830        0.072979          0.982099         0.002211
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.564763        0.077777          0.961796         0.002367
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.564058        0.076144          0.885597         0.003833
16   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.563483        0.070176          0.906053         0.004802
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.563198        0.083465          0.887396         0.004350
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.563138        0.081549          0.878380         0.004255
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.562996        0.075718          0.886662         0.005351
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.562430        0.075570          0.907782         0.003197
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.561580        0.075036          0.880586         0.004686
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.560535        0.068928          0.902049         0.003509
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.559828        0.073950          0.879960         0.004594
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.557508        0.084939          0.880384         0.003143
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.557286        0.073043          0.909652         0.003188
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.556404        0.076912          0.965139         0.002009
20   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.556392        0.093253          0.979104         0.001645
12   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.556143        0.083243          0.910001         0.004304
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.555924        0.078169          0.970843         0.002032
18   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.555071        0.093547          0.983683         0.001368
14   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.554899        0.078705          0.904052         0.004305
9    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.553735        0.092431          0.913087         0.003807
26   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.553575        0.073464          0.977357         0.002381
20201017-151311	Info: R2 Score achieved on training set: 0.9595856875421548
20201017-151311	Info: R2 Score achieved on test set: 0.5474845174551972
20201017-151311	Info: Feature Selection
20201017-151311	Info: 
Remove constant features:
20201017-151311	Info: Following columns are constant: [193, 297, 339, 629]
20201017-151311	Info: Variance Threshold  0.0  -> nr of features:  828
20201017-151311	Info: Removed: 4 features
20201017-151311	Info: 
Remove constant features:
20201017-151311	Info: Following columns are constant: [1, 2, 6, 9, 16, 34, 50, 78, 82, 83, 145, 153, 166, 194, 205, 231, 255, 262, 265, 268, 315, 333, 360, 361, 371, 375, 376, 396, 419, 446, 451, 477, 478, 497, 502, 524, 583, 585, 606, 624, 635, 641, 660, 675, 680, 696, 715, 717, 725, 731, 743, 751, 758, 774, 807]
20201017-151311	Info: Variance Threshold  0.01  -> nr of features:  773
20201017-151311	Info: Removed: 55 features
20201017-151311	Info: 
Remove Correlated Features:
20201017-151317	Info: Following features are removed: {256, 130, 386, 643, 764, 520, 137, 521, 765, 268, 270, 271, 527, 407, 665, 539, 156, 542, 415, 671, 424, 682, 684, 558, 305, 179, 691, 183, 567, 443, 573, 318, 701, 449, 450, 67, 452, 705, 462, 208, 83, 467, 598, 217, 602, 91, 347, 734, 223, 224, 354, 615, 745, 622, 369, 497, 498, 244, 760, 761, 380, 637, 254}
20201017-151317	Info: Nr. of features remvoed: 63
20201017-151317	Info: Correlation Threshold  0.8  -> nr of features:  710
20201017-151317	Info: 
Select Best Based on Impurity
20201017-151318	Info: TreeBasedFeatureSelector  -> nr features:  347
20201017-151318	Info: Start normalizer
20201017-151318	Info: 
--------------------------------------
20201017-151318	Info: Iteration 26
20201017-151318	Info: imputer {'name': 'median'}
20201017-151318	Info: outlier {'fit_on': 'train', 'name': 'lof', 'strategy': 'iqr', 'threshold': 6.5}
20201017-151318	Info: feature_selector {'k': 80, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'True', 'use_select_best_k': 'False'}
20201017-151318	Info: normalizer {'fit_on': 'train', 'name': 'robustscaler'}
20201017-151318	Info: regression {'name': 'xgb'}
20201017-151318	Info: 
----------------------------------------
20201017-151318	Info: Start fit model
20201017-151318	Info: Stratified split
20201017-151318	Info: The number of samples for each 'age/class' are:
    67  69  75  72  73  70  68  74  66  71  78  65  77  76  79  63  81  62  64  82  60  80  83  58  55  61  59  56  84  87  85  86  57  49  52  54  51  53  48  50  88  46  89  45  44  47  42  95  90  92  91  94  43  97
y  56  55  52  51  51  49  49  47  44  43  38  38  37  35  34  34  30  27  27  24  23  21  21  20  20  20  17  16  15  14  14  14  14  12  12  11  11  10   9   8   6   6   6   5   2   2   2   2   2   2   1   1   1   1
20201017-151318	Info: 'Age' with only one sample: [91 94 43 97]
20201017-151318	Info: x_train_split: (1046, 347)
20201017-151318	Info: x_test_split: (116, 347)
20201017-151626	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=6,
             min_child_weight=3, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.9,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-151626	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}
20201017-151626	Info: Best training-score with mse loss: 0.579489488903626
20201017-151626	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.579489        0.070056          0.992414         0.000790
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.577419        0.070372          0.946973         0.002666
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.576640        0.070683          0.991299         0.000971
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.575195        0.083043          0.948390         0.002219
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.572443        0.073128          0.945742         0.002492
16   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.571727        0.092323          0.965209         0.001677
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.571484        0.085272          0.993647         0.000865
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.568274        0.077769          0.993203         0.000863
14   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.567989        0.085232          0.964414         0.002012
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.567266        0.070999          0.992042         0.000807
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.566948        0.070939          0.993926         0.000551
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.566465        0.068604          0.996734         0.000362
12   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.565708        0.075573          0.965100         0.001455
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.565171        0.079738          0.963870         0.002918
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.563890        0.075658          0.945878         0.002735
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.563706        0.083885          0.946135         0.002904
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.562061        0.081396          0.965585         0.001730
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.561627        0.079332          0.945257         0.001761
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.561511        0.083443          0.946898         0.001465
47  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.561163        0.098139          0.993360         0.000999
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.561144        0.096200          0.948187         0.002834
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.561074        0.092246          0.963141         0.001599
26   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.560977        0.080145          0.997056         0.000439
23   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.558646        0.082412          0.997206         0.000347
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.558047        0.094468          0.946002         0.002525
11   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.557727        0.086804          0.963333         0.002152
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.557023        0.097627          0.993546         0.000695
34  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.556119        0.087414          0.765936         0.005184
21   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.555439        0.070958          0.996326         0.000428
9    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.553087        0.083747          0.964913         0.001128
20201017-151626	Info: R2 Score achieved on training set: 0.9910170448421458
20201017-151626	Info: R2 Score achieved on test set: 0.5922454578741718
20201017-151626	Info: Start normalizer
20201017-151626	Info: 
--------------------------------------
20201017-151626	Info: Iteration 27
20201017-151626	Info: imputer {'name': 'median'}
20201017-151626	Info: outlier {'fit_on': 'train', 'name': 'lof', 'strategy': 'iqr', 'threshold': 6.5}
20201017-151626	Info: feature_selector {'k': 80, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'True', 'use_select_best_k': 'False'}
20201017-151626	Info: normalizer {'fit_on': 'test', 'name': 'robustscaler'}
20201017-151626	Info: regression {'name': 'xgb'}
20201017-151626	Info: 
----------------------------------------
20201017-151626	Info: Start fit model
20201017-151626	Info: Stratified split
20201017-151626	Info: The number of samples for each 'age/class' are:
    67  69  75  72  73  70  68  74  66  71  78  65  77  76  79  63  81  62  64  82  60  80  83  58  55  61  59  56  84  87  85  86  57  49  52  54  51  53  48  50  88  46  89  45  44  47  42  95  90  92  91  94  43  97
y  56  55  52  51  51  49  49  47  44  43  38  38  37  35  34  34  30  27  27  24  23  21  21  20  20  20  17  16  15  14  14  14  14  12  12  11  11  10   9   8   6   6   6   5   2   2   2   2   2   2   1   1   1   1
20201017-151626	Info: 'Age' with only one sample: [91 94 43 97]
20201017-151626	Info: x_train_split: (1046, 347)
20201017-151626	Info: x_test_split: (116, 347)
20201017-151934	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=6,
             min_child_weight=3, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.9,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-151934	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}
20201017-151934	Info: Best training-score with mse loss: 0.579489488903626
20201017-151934	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.579489        0.070056          0.992414         0.000790
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.577419        0.070372          0.946973         0.002666
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.576640        0.070683          0.991299         0.000971
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.575195        0.083043          0.948390         0.002219
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.572443        0.073128          0.945742         0.002492
16   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.571727        0.092323          0.965209         0.001677
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.571484        0.085272          0.993647         0.000865
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.568274        0.077769          0.993203         0.000863
14   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.567989        0.085232          0.964414         0.002012
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.567266        0.070999          0.992042         0.000807
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.566948        0.070939          0.993926         0.000551
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.566465        0.068604          0.996734         0.000362
12   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.565708        0.075573          0.965100         0.001455
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.565171        0.079738          0.963870         0.002918
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.563890        0.075658          0.945878         0.002735
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.563706        0.083885          0.946135         0.002904
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.562061        0.081396          0.965585         0.001730
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.561627        0.079332          0.945257         0.001761
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.561511        0.083443          0.946898         0.001465
47  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.561163        0.098139          0.993360         0.000999
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.561144        0.096200          0.948187         0.002834
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.561074        0.092246          0.963141         0.001599
26   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.560977        0.080145          0.997056         0.000439
23   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.558646        0.082412          0.997206         0.000347
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.558047        0.094468          0.946002         0.002525
11   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.557727        0.086804          0.963333         0.002152
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.557023        0.097627          0.993546         0.000695
34  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.556119        0.087414          0.765936         0.005184
21   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.555439        0.070958          0.996326         0.000428
9    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.553087        0.083747          0.964913         0.001128
20201017-151934	Info: R2 Score achieved on training set: 0.9910170448421458
20201017-151934	Info: R2 Score achieved on test set: 0.5922454578741718
20201017-151934	Info: Feature Selection
20201017-151934	Info: 
Remove constant features:
20201017-151934	Info: Following columns are constant: [193, 297, 339, 629]
20201017-151934	Info: Variance Threshold  0.0  -> nr of features:  828
20201017-151934	Info: Removed: 4 features
20201017-151934	Info: 
Remove constant features:
20201017-151934	Info: Following columns are constant: [1, 2, 6, 9, 16, 34, 50, 78, 82, 83, 145, 153, 166, 194, 205, 231, 255, 262, 265, 268, 315, 333, 360, 361, 371, 375, 376, 396, 419, 446, 451, 477, 478, 497, 502, 524, 583, 585, 606, 624, 635, 641, 660, 675, 680, 696, 715, 717, 725, 731, 743, 751, 758, 774, 807]
20201017-151934	Info: Variance Threshold  0.01  -> nr of features:  773
20201017-151934	Info: Removed: 55 features
20201017-151934	Info: 
Remove Correlated Features:
20201017-151940	Info: Following features are removed: {256, 130, 386, 643, 764, 520, 137, 521, 765, 268, 270, 271, 527, 407, 665, 539, 156, 542, 415, 671, 424, 682, 684, 558, 305, 179, 691, 183, 567, 443, 573, 318, 701, 449, 450, 67, 452, 705, 462, 208, 83, 467, 598, 217, 602, 91, 347, 734, 223, 224, 354, 615, 745, 622, 369, 497, 498, 244, 760, 761, 380, 637, 254}
20201017-151940	Info: Nr. of features remvoed: 63
20201017-151940	Info: Correlation Threshold  0.8  -> nr of features:  710
20201017-151940	Info: 
Select Best k features:
20201017-151947	Info: SelectKBest k = 80  -> nr features:  80
20201017-151947	Info: Start normalizer
20201017-151947	Info: 
--------------------------------------
20201017-151947	Info: Iteration 28
20201017-151947	Info: imputer {'name': 'median'}
20201017-151947	Info: outlier {'fit_on': 'train', 'name': 'lof', 'strategy': 'iqr', 'threshold': 6.5}
20201017-151947	Info: feature_selector {'k': 80, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'False', 'use_select_best_k': 'True'}
20201017-151947	Info: normalizer {'fit_on': 'train', 'name': 'robustscaler'}
20201017-151947	Info: regression {'name': 'xgb'}
20201017-151947	Info: 
----------------------------------------
20201017-151947	Info: Start fit model
20201017-151947	Info: Stratified split
20201017-151947	Info: The number of samples for each 'age/class' are:
    67  69  75  72  73  70  68  74  66  71  78  65  77  76  79  63  81  62  64  82  60  80  83  58  55  61  59  56  84  87  85  86  57  49  52  54  51  53  48  50  88  46  89  45  44  47  42  95  90  92  91  94  43  97
y  56  55  52  51  51  49  49  47  44  43  38  38  37  35  34  34  30  27  27  24  23  21  21  20  20  20  17  16  15  14  14  14  14  12  12  11  11  10   9   8   6   6   6   5   2   2   2   2   2   2   1   1   1   1
20201017-151947	Info: 'Age' with only one sample: [91 94 43 97]
20201017-151947	Info: x_train_split: (1046, 80)
20201017-151947	Info: x_test_split: (116, 80)
20201017-152033	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=6,
             min_child_weight=3, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.8,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-152033	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}
20201017-152033	Info: Best training-score with mse loss: 0.6014478420368705
20201017-152033	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.601448        0.084598          0.982243         0.001774
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.601384        0.081029          0.983366         0.001712
10   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.599749        0.076173          0.944367         0.002037
16   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.598862        0.079774          0.940846         0.001791
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.598278        0.081379          0.918069         0.002896
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.596665        0.084720          0.992313         0.000635
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.596273        0.075220          0.984605         0.001533
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.596169        0.076326          0.920282         0.002102
21   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.595697        0.079975          0.991964         0.000995
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.594018        0.067443          0.942786         0.002299
18   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.593232        0.086421          0.992902         0.000935
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.591706        0.073728          0.982698         0.001852
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.591149        0.086324          0.918601         0.003151
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.591126        0.099583          0.985685         0.001110
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.590975        0.077803          0.983379         0.001065
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.590852        0.079082          0.920099         0.001879
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.587678        0.077307          0.940690         0.002062
12   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.587263        0.091410          0.943032         0.002656
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.586241        0.080436          0.937189         0.002735
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.586192        0.098098          0.983770         0.001151
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.586127        0.075721          0.984327         0.001363
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.584945        0.100405          0.921197         0.002904
24   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.584873        0.072216          0.991511         0.000713
19   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.584562        0.079484          0.993255         0.000794
47  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.584072        0.080199          0.983378         0.001749
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.583928        0.099288          0.922864         0.001617
26   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.583204        0.086215          0.991718         0.000825
22   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.582585        0.078064          0.993166         0.000566
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.582194        0.081583          0.918512         0.004677
23   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.581801        0.073554          0.992526         0.000995
20201017-152033	Info: R2 Score achieved on training set: 0.9765625102276045
20201017-152033	Info: R2 Score achieved on test set: 0.6145023443967877
20201017-152033	Info: Start normalizer
20201017-152033	Info: 
--------------------------------------
20201017-152033	Info: Iteration 29
20201017-152033	Info: imputer {'name': 'median'}
20201017-152033	Info: outlier {'fit_on': 'train', 'name': 'lof', 'strategy': 'iqr', 'threshold': 6.5}
20201017-152033	Info: feature_selector {'k': 80, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'False', 'use_select_best_k': 'True'}
20201017-152033	Info: normalizer {'fit_on': 'test', 'name': 'robustscaler'}
20201017-152033	Info: regression {'name': 'xgb'}
20201017-152033	Info: 
----------------------------------------
20201017-152033	Info: Start fit model
20201017-152033	Info: Stratified split
20201017-152033	Info: The number of samples for each 'age/class' are:
    67  69  75  72  73  70  68  74  66  71  78  65  77  76  79  63  81  62  64  82  60  80  83  58  55  61  59  56  84  87  85  86  57  49  52  54  51  53  48  50  88  46  89  45  44  47  42  95  90  92  91  94  43  97
y  56  55  52  51  51  49  49  47  44  43  38  38  37  35  34  34  30  27  27  24  23  21  21  20  20  20  17  16  15  14  14  14  14  12  12  11  11  10   9   8   6   6   6   5   2   2   2   2   2   2   1   1   1   1
20201017-152033	Info: 'Age' with only one sample: [91 94 43 97]
20201017-152033	Info: x_train_split: (1046, 80)
20201017-152033	Info: x_test_split: (116, 80)
20201017-152119	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=6,
             min_child_weight=3, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.8,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-152119	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}
20201017-152119	Info: Best training-score with mse loss: 0.6014478420368705
20201017-152119	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.601448        0.084598          0.982243         0.001774
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.601384        0.081029          0.983366         0.001712
10   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.599749        0.076173          0.944367         0.002037
16   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.598862        0.079774          0.940846         0.001791
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.598278        0.081379          0.918069         0.002896
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.596665        0.084720          0.992313         0.000635
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.596273        0.075220          0.984605         0.001533
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.596169        0.076326          0.920282         0.002102
21   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.595697        0.079975          0.991964         0.000995
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.594018        0.067443          0.942786         0.002299
18   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.593232        0.086421          0.992902         0.000935
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.591706        0.073728          0.982698         0.001852
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.591149        0.086324          0.918601         0.003151
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.591126        0.099583          0.985685         0.001110
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.590975        0.077803          0.983379         0.001065
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.590852        0.079082          0.920099         0.001879
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.587678        0.077307          0.940690         0.002062
12   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.587263        0.091410          0.943032         0.002656
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.586241        0.080436          0.937189         0.002735
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.586192        0.098098          0.983770         0.001151
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.586127        0.075721          0.984327         0.001363
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.584945        0.100405          0.921197         0.002904
24   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.584873        0.072216          0.991511         0.000713
19   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.584562        0.079484          0.993255         0.000794
47  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.584072        0.080199          0.983378         0.001749
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.583928        0.099288          0.922864         0.001617
26   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.583204        0.086215          0.991718         0.000825
22   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.582585        0.078064          0.993166         0.000566
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.582194        0.081583          0.918512         0.004677
23   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.581801        0.073554          0.992526         0.000995
20201017-152119	Info: R2 Score achieved on training set: 0.9765625102276045
20201017-152119	Info: R2 Score achieved on test set: 0.6145023443967877
20201017-152119	Info: Feature Selection
20201017-152119	Info: 
Remove constant features:
20201017-152119	Info: Following columns are constant: [193, 297, 339, 629]
20201017-152119	Info: Variance Threshold  0.0  -> nr of features:  828
20201017-152119	Info: Removed: 4 features
20201017-152119	Info: 
Remove constant features:
20201017-152119	Info: Following columns are constant: [1, 2, 6, 9, 16, 34, 50, 78, 82, 83, 145, 153, 166, 194, 205, 231, 255, 262, 265, 268, 315, 333, 360, 361, 371, 375, 376, 396, 419, 446, 451, 477, 478, 497, 502, 524, 583, 585, 606, 624, 635, 641, 660, 675, 680, 696, 715, 717, 725, 731, 743, 751, 758, 774, 807]
20201017-152119	Info: Variance Threshold  0.01  -> nr of features:  773
20201017-152119	Info: Removed: 55 features
20201017-152119	Info: 
Remove Correlated Features:
20201017-152125	Info: Following features are removed: {256, 130, 386, 643, 764, 520, 137, 521, 765, 268, 270, 271, 527, 407, 665, 539, 156, 542, 415, 671, 424, 682, 684, 558, 305, 179, 691, 183, 567, 443, 573, 318, 701, 449, 450, 67, 452, 705, 462, 208, 83, 467, 598, 217, 602, 91, 347, 734, 223, 224, 354, 615, 745, 622, 369, 497, 498, 244, 760, 761, 380, 637, 254}
20201017-152125	Info: Nr. of features remvoed: 63
20201017-152125	Info: Correlation Threshold  0.8  -> nr of features:  710
20201017-152125	Info: Start normalizer
20201017-152125	Info: 
--------------------------------------
20201017-152125	Info: Iteration 30
20201017-152125	Info: imputer {'name': 'median'}
20201017-152125	Info: outlier {'fit_on': 'train', 'name': 'lof', 'strategy': 'iqr', 'threshold': 6.5}
20201017-152125	Info: feature_selector {'k': 80, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'False', 'use_select_best_k': 'False'}
20201017-152125	Info: normalizer {'fit_on': 'train', 'name': 'robustscaler'}
20201017-152125	Info: regression {'name': 'xgb'}
20201017-152125	Info: 
----------------------------------------
20201017-152125	Info: Start fit model
20201017-152125	Info: Stratified split
20201017-152125	Info: The number of samples for each 'age/class' are:
    67  69  75  72  73  70  68  74  66  71  78  65  77  76  79  63  81  62  64  82  60  80  83  58  55  61  59  56  84  87  85  86  57  49  52  54  51  53  48  50  88  46  89  45  44  47  42  95  90  92  91  94  43  97
y  56  55  52  51  51  49  49  47  44  43  38  38  37  35  34  34  30  27  27  24  23  21  21  20  20  20  17  16  15  14  14  14  14  12  12  11  11  10   9   8   6   6   6   5   2   2   2   2   2   2   1   1   1   1
20201017-152125	Info: 'Age' with only one sample: [91 94 43 97]
20201017-152126	Info: x_train_split: (1046, 710)
20201017-152126	Info: x_test_split: (116, 710)
20201017-152746	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=4,
             min_child_weight=2, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.8,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-152746	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}
20201017-152746	Info: Best training-score with mse loss: 0.5780600993858084
20201017-152746	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.578060        0.060494          0.956522         0.001987
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.578021        0.084058          0.957299         0.002619
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.571786        0.086985          0.957535         0.001508
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.569623        0.077334          0.994094         0.000540
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.568370        0.081902          0.994752         0.000343
11   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.567453        0.094092          0.972410         0.001179
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.566164        0.088891          0.994049         0.000632
16   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.565229        0.079937          0.973811         0.000800
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.565178        0.093102          0.995564         0.000418
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.564954        0.084205          0.974178         0.001310
12   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.564688        0.074875          0.972845         0.001434
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.564475        0.100136          0.958558         0.001548
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.564407        0.080773          0.971898         0.001467
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.563964        0.075257          0.972950         0.001802
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.563559        0.080405          0.956197         0.002578
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.563366        0.089937          0.958151         0.002012
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.563064        0.094485          0.995237         0.000501
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.561007        0.077770          0.996062         0.000439
19   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.560997        0.079647          0.998351         0.000197
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.560970        0.071566          0.996020         0.000442
23   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.560304        0.085691          0.998437         0.000222
18   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.559167        0.089401          0.997684         0.000259
26   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.559122        0.076300          0.998372         0.000093
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.558598        0.085909          0.998188         0.000302
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.558528        0.083973          0.958582         0.001821
30  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.558346        0.094662          0.776282         0.004154
28  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.557821        0.094597          0.776769         0.005058
1    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.557504        0.099462          0.808096         0.004863
27  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.557227        0.093039          0.776716         0.004350
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.556935        0.084169          0.956128         0.002130
20201017-152746	Info: R2 Score achieved on training set: 0.9450031664363248
20201017-152746	Info: R2 Score achieved on test set: 0.5508267243432567
20201017-152746	Info: Start normalizer
20201017-152746	Info: 
--------------------------------------
20201017-152746	Info: Iteration 31
20201017-152746	Info: imputer {'name': 'median'}
20201017-152746	Info: outlier {'fit_on': 'train', 'name': 'lof', 'strategy': 'iqr', 'threshold': 6.5}
20201017-152746	Info: feature_selector {'k': 80, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'False', 'use_select_best_k': 'False'}
20201017-152746	Info: normalizer {'fit_on': 'test', 'name': 'robustscaler'}
20201017-152746	Info: regression {'name': 'xgb'}
20201017-152746	Info: 
----------------------------------------
20201017-152746	Info: Start fit model
20201017-152746	Info: Stratified split
20201017-152746	Info: The number of samples for each 'age/class' are:
    67  69  75  72  73  70  68  74  66  71  78  65  77  76  79  63  81  62  64  82  60  80  83  58  55  61  59  56  84  87  85  86  57  49  52  54  51  53  48  50  88  46  89  45  44  47  42  95  90  92  91  94  43  97
y  56  55  52  51  51  49  49  47  44  43  38  38  37  35  34  34  30  27  27  24  23  21  21  20  20  20  17  16  15  14  14  14  14  12  12  11  11  10   9   8   6   6   6   5   2   2   2   2   2   2   1   1   1   1
20201017-152746	Info: 'Age' with only one sample: [91 94 43 97]
20201017-152746	Info: x_train_split: (1046, 710)
20201017-152746	Info: x_test_split: (116, 710)
20201017-153406	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=4,
             min_child_weight=2, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.8,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-153406	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}
20201017-153406	Info: Best training-score with mse loss: 0.5780600993858084
20201017-153407	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.578060        0.060494          0.956522         0.001987
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.578021        0.084058          0.957299         0.002619
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.571786        0.086985          0.957535         0.001508
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.569623        0.077334          0.994094         0.000540
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.568370        0.081902          0.994752         0.000343
11   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.567453        0.094092          0.972410         0.001179
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.566164        0.088891          0.994049         0.000632
16   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.565229        0.079937          0.973811         0.000800
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.565178        0.093102          0.995564         0.000418
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.564954        0.084205          0.974178         0.001310
12   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.564688        0.074875          0.972845         0.001434
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.564475        0.100136          0.958558         0.001548
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.564407        0.080773          0.971898         0.001467
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.563964        0.075257          0.972950         0.001802
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.563559        0.080405          0.956197         0.002578
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.563366        0.089937          0.958151         0.002012
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.563064        0.094485          0.995237         0.000501
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.561007        0.077770          0.996062         0.000439
19   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.560997        0.079647          0.998351         0.000197
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.560970        0.071566          0.996020         0.000442
23   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.560304        0.085691          0.998437         0.000222
18   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.559167        0.089401          0.997684         0.000259
26   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.559122        0.076300          0.998372         0.000093
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.558598        0.085909          0.998188         0.000302
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.558528        0.083973          0.958582         0.001821
30  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.558346        0.094662          0.776282         0.004154
28  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.557821        0.094597          0.776769         0.005058
1    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.557504        0.099462          0.808096         0.004863
27  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.557227        0.093039          0.776716         0.004350
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.556935        0.084169          0.956128         0.002130
20201017-153407	Info: R2 Score achieved on training set: 0.9450031664363248
20201017-153407	Info: R2 Score achieved on test set: 0.5508267243432567
20201017-153407	Info: Start outlier detection
20201017-153407	Info: OutlierRemover: Removed (162,) rows
20201017-153407	Info: Feature Selection
20201017-153407	Info: 
Remove constant features:
20201017-153407	Info: Following columns are constant: [193, 297, 339, 629]
20201017-153407	Info: Variance Threshold  0.0  -> nr of features:  828
20201017-153407	Info: Removed: 4 features
20201017-153407	Info: 
Remove constant features:
20201017-153407	Info: Following columns are constant: [1, 2, 6, 9, 16, 34, 50, 78, 82, 83, 145, 153, 166, 194, 205, 231, 255, 262, 265, 268, 315, 333, 360, 361, 371, 375, 376, 396, 419, 446, 451, 477, 478, 497, 502, 524, 583, 585, 606, 624, 635, 641, 660, 675, 680, 696, 715, 717, 725, 731, 743, 751, 758, 774, 807]
20201017-153407	Info: Variance Threshold  0.01  -> nr of features:  773
20201017-153407	Info: Removed: 55 features
20201017-153407	Info: 
Remove Correlated Features:
20201017-153413	Info: Following features are removed: {256, 636, 130, 386, 643, 764, 520, 137, 521, 765, 268, 270, 271, 527, 407, 665, 539, 156, 542, 415, 671, 424, 41, 682, 684, 558, 432, 305, 179, 691, 183, 440, 567, 443, 573, 318, 191, 701, 449, 450, 67, 452, 705, 331, 715, 462, 208, 83, 467, 598, 217, 602, 91, 347, 733, 734, 223, 224, 354, 739, 742, 615, 745, 622, 369, 497, 498, 116, 244, 760, 761, 380, 637, 254}
20201017-153413	Info: Nr. of features remvoed: 74
20201017-153413	Info: Correlation Threshold  0.8  -> nr of features:  699
20201017-153413	Info: 
Select Best k features:
20201017-153419	Info: SelectKBest k = 100  -> nr features:  100
20201017-153419	Info: 
Select Best Based on Impurity
20201017-153420	Info: TreeBasedFeatureSelector  -> nr features:  43
20201017-153420	Info: Start normalizer
20201017-153420	Info: 
--------------------------------------
20201017-153420	Info: Iteration 32
20201017-153420	Info: imputer {'name': 'median'}
20201017-153420	Info: outlier {'fit_on': 'test', 'name': 'customOR', 'strategy': 'iqr', 'threshold': 6.5}
20201017-153420	Info: feature_selector {'k': 100, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'True', 'use_select_best_k': 'True'}
20201017-153420	Info: normalizer {'fit_on': 'train', 'name': 'robustscaler'}
20201017-153420	Info: regression {'name': 'xgb'}
20201017-153420	Info: 
----------------------------------------
20201017-153420	Info: Start fit model
20201017-153420	Info: Stratified split
20201017-153420	Warning: Indexes do not match, probably because of outlier removal!
20201017-153420	Info: The number of samples for each 'age/class' are:
    67  75  69  70  72  73  68  74  66  71  65  77  63  78  76  79  64  81  62  60  80  61  55  82  58  59  56  57  83  84  54  52  49  53  85  86  51  46  87  89  48  88  45  50  44  47  42  90  95  91  94  43  97
y  55  53  53  50  47  47  46  44  42  41  38  33  32  32  31  28  25  24  23  21  21  20  19  19  18  17  17  15  15  12  10  10  10   9   9   8   7   6   6   5   5   5   4   4   3   2   2   2   1   1   1   1   1
20201017-153420	Info: 'Age' with only one sample: [95 91 94 43 97]
20201017-153420	Info: x_train_split: (945, 43)
20201017-153420	Info: x_test_split: (105, 43)
20201017-153443	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=4,
             min_child_weight=2, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.9,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-153443	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}
20201017-153443	Info: Best training-score with mse loss: 0.44043244860052255
20201017-153443	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.440432        0.057904          0.888746         0.004512
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.436294        0.049630          0.975310         0.001647
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.431525        0.073371          0.881609         0.004550
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.430763        0.058078          0.976768         0.001660
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.430079        0.069221          0.886804         0.003061
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.429935        0.067660          0.892497         0.002224
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.429304        0.070346          0.883605         0.004874
34  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.427545        0.078379          0.673852         0.004891
1    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.426086        0.084656          0.706300         0.004783
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.425139        0.063290          0.972155         0.002229
31  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.424680        0.080217          0.676490         0.004800
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.424639        0.073586          0.983421         0.002013
27  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.424560        0.076791          0.679726         0.004693
5    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.424098        0.081424          0.699206         0.004805
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.423780        0.064016          0.971420         0.002240
35  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.422605        0.082359          0.670237         0.004176
19   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.422013        0.056689          0.987582         0.001474
28  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.421990        0.078456          0.677903         0.005190
7    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.421219        0.089393          0.703200         0.004190
22   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.421002        0.057470          0.986535         0.001798
11   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.420285        0.062365          0.911819         0.004264
8    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.420167        0.078394          0.698649         0.003953
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.420068        0.069675          0.917661         0.002877
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.419966        0.069156          0.970472         0.001361
4    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.419715        0.088041          0.705108         0.004940
3    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.419068        0.078359          0.707282         0.005440
6    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.418986        0.074737          0.702645         0.005494
29  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.418952        0.077787          0.672399         0.004184
14   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.418916        0.071387          0.908457         0.006943
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.418617        0.068103          0.883134         0.002795
20201017-153443	Info: R2 Score achieved on training set: 0.881176290765147
20201017-153443	Info: R2 Score achieved on test set: 0.5397854600504692
20201017-153443	Info: Start normalizer
20201017-153443	Info: 
--------------------------------------
20201017-153443	Info: Iteration 33
20201017-153443	Info: imputer {'name': 'median'}
20201017-153443	Info: outlier {'fit_on': 'test', 'name': 'customOR', 'strategy': 'iqr', 'threshold': 6.5}
20201017-153443	Info: feature_selector {'k': 100, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'True', 'use_select_best_k': 'True'}
20201017-153443	Info: normalizer {'fit_on': 'test', 'name': 'robustscaler'}
20201017-153443	Info: regression {'name': 'xgb'}
20201017-153443	Info: 
----------------------------------------
20201017-153443	Info: Start fit model
20201017-153443	Info: Stratified split
20201017-153443	Info: The number of samples for each 'age/class' are:
    67  75  69  70  72  73  68  74  66  71  65  77  63  78  76  79  64  81  62  60  80  61  55  82  58  59  56  57  83  84  54  52  49  53  85  86  51  46  87  89  48  88  45  50  44  47  42  90  95  91  94  43  97
y  55  53  53  50  47  47  46  44  42  41  38  33  32  32  31  28  25  24  23  21  21  20  19  19  18  17  17  15  15  12  10  10  10   9   9   8   7   6   6   5   5   5   4   4   3   2   2   2   1   1   1   1   1
20201017-153443	Info: 'Age' with only one sample: [95 91 94 43 97]
20201017-153443	Info: x_train_split: (945, 43)
20201017-153443	Info: x_test_split: (105, 43)
20201017-153506	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=4,
             min_child_weight=2, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.9,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-153506	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}
20201017-153506	Info: Best training-score with mse loss: 0.44043244860052255
20201017-153506	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.440432        0.057904          0.888746         0.004512
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.436294        0.049630          0.975310         0.001647
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.431525        0.073371          0.881609         0.004550
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.430763        0.058078          0.976768         0.001660
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.430079        0.069221          0.886804         0.003061
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.429935        0.067660          0.892497         0.002224
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.429304        0.070346          0.883605         0.004874
34  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.427545        0.078379          0.673852         0.004891
1    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.426086        0.084656          0.706300         0.004783
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.425139        0.063290          0.972155         0.002229
31  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.424680        0.080217          0.676490         0.004800
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.424639        0.073586          0.983421         0.002013
27  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.424560        0.076791          0.679726         0.004693
5    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.424098        0.081424          0.699206         0.004805
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.423780        0.064016          0.971420         0.002240
35  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.422605        0.082359          0.670237         0.004176
19   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.422013        0.056689          0.987582         0.001474
28  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.421990        0.078456          0.677903         0.005190
7    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.421219        0.089393          0.703200         0.004190
22   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.421002        0.057470          0.986535         0.001798
11   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.420285        0.062365          0.911819         0.004264
8    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.420167        0.078394          0.698649         0.003953
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.420068        0.069675          0.917661         0.002877
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.419966        0.069156          0.970472         0.001361
4    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.419715        0.088041          0.705108         0.004940
3    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.419068        0.078359          0.707282         0.005440
6    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.418986        0.074737          0.702645         0.005494
29  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.418952        0.077787          0.672399         0.004184
14   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.418916        0.071387          0.908457         0.006943
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.418617        0.068103          0.883134         0.002795
20201017-153506	Info: R2 Score achieved on training set: 0.881176290765147
20201017-153506	Info: R2 Score achieved on test set: 0.5397854600504692
20201017-153506	Info: Feature Selection
20201017-153506	Info: 
Remove constant features:
20201017-153506	Info: Following columns are constant: [193, 297, 339, 629]
20201017-153506	Info: Variance Threshold  0.0  -> nr of features:  828
20201017-153506	Info: Removed: 4 features
20201017-153506	Info: 
Remove constant features:
20201017-153506	Info: Following columns are constant: [1, 2, 6, 9, 16, 34, 50, 78, 82, 83, 145, 153, 166, 194, 205, 231, 255, 262, 265, 268, 315, 333, 360, 361, 371, 375, 376, 396, 419, 446, 451, 477, 478, 497, 502, 524, 583, 585, 606, 624, 635, 641, 660, 675, 680, 696, 715, 717, 725, 731, 743, 751, 758, 774, 807]
20201017-153506	Info: Variance Threshold  0.01  -> nr of features:  773
20201017-153506	Info: Removed: 55 features
20201017-153506	Info: 
Remove Correlated Features:
20201017-153512	Info: Following features are removed: {256, 636, 130, 386, 643, 764, 520, 137, 521, 765, 268, 270, 271, 527, 407, 665, 539, 156, 542, 415, 671, 424, 41, 682, 684, 558, 432, 305, 179, 691, 183, 440, 567, 443, 573, 318, 191, 701, 449, 450, 67, 452, 705, 331, 715, 462, 208, 83, 467, 598, 217, 602, 91, 347, 733, 734, 223, 224, 354, 739, 742, 615, 745, 622, 369, 497, 498, 116, 244, 760, 761, 380, 637, 254}
20201017-153512	Info: Nr. of features remvoed: 74
20201017-153512	Info: Correlation Threshold  0.8  -> nr of features:  699
20201017-153512	Info: 
Select Best Based on Impurity
20201017-153513	Info: TreeBasedFeatureSelector  -> nr features:  331
20201017-153513	Info: Start normalizer
20201017-153513	Info: 
--------------------------------------
20201017-153513	Info: Iteration 34
20201017-153513	Info: imputer {'name': 'median'}
20201017-153513	Info: outlier {'fit_on': 'test', 'name': 'customOR', 'strategy': 'iqr', 'threshold': 6.5}
20201017-153513	Info: feature_selector {'k': 100, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'True', 'use_select_best_k': 'False'}
20201017-153513	Info: normalizer {'fit_on': 'train', 'name': 'robustscaler'}
20201017-153513	Info: regression {'name': 'xgb'}
20201017-153513	Info: 
----------------------------------------
20201017-153513	Info: Start fit model
20201017-153513	Info: Stratified split
20201017-153513	Info: The number of samples for each 'age/class' are:
    67  75  69  70  72  73  68  74  66  71  65  77  63  78  76  79  64  81  62  60  80  61  55  82  58  59  56  57  83  84  54  52  49  53  85  86  51  46  87  89  48  88  45  50  44  47  42  90  95  91  94  43  97
y  55  53  53  50  47  47  46  44  42  41  38  33  32  32  31  28  25  24  23  21  21  20  19  19  18  17  17  15  15  12  10  10  10   9   9   8   7   6   6   5   5   5   4   4   3   2   2   2   1   1   1   1   1
20201017-153513	Info: 'Age' with only one sample: [95 91 94 43 97]
20201017-153513	Info: x_train_split: (945, 331)
20201017-153513	Info: x_test_split: (105, 331)
20201017-153755	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.1, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.100000001, max_delta_step=0, max_depth=6,
             min_child_weight=2, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.9,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-153755	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}
20201017-153755	Info: Best training-score with mse loss: 0.4755542167099282
20201017-153755	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
22   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.475554        0.088967          0.997077         0.000370
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.469415        0.067024          0.993092         0.000770
10   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.469073        0.084346          0.964165         0.001348
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.468565        0.070257          0.944923         0.001228
11   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.467968        0.072257          0.960358         0.001859
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.467572        0.073080          0.941126         0.002743
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.467271        0.078763          0.963792         0.002140
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.466556        0.069292          0.994104         0.000454
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.463975        0.067057          0.941641         0.003396
1    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.463969        0.067466          0.766000         0.004206
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.463482        0.071103          0.940723         0.003451
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.463183        0.080717          0.938581         0.003387
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.462252        0.061420          0.943096         0.002383
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.462180        0.081689          0.990762         0.000906
7    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.462150        0.072946          0.763096         0.005862
23   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.461249        0.083942          0.997245         0.000356
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.460168        0.069944          0.936695         0.003831
14   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.460063        0.069128          0.961853         0.003221
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.459082        0.062198          0.993295         0.000921
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.458866        0.082881          0.996394         0.000509
28  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.458692        0.062938          0.731955         0.003856
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.458160        0.078383          0.992122         0.000494
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.457645        0.091561          0.988969         0.001054
31  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.456476        0.057791          0.731356         0.003680
35  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.456231        0.063869          0.724590         0.003260
16   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.456138        0.076968          0.960944         0.002550
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.455332        0.070900          0.940703         0.002452
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.455127        0.066925          0.942354         0.001922
47  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.454777        0.071981          0.993936         0.000761
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.453938        0.085638          0.991024         0.000992
20201017-153755	Info: R2 Score achieved on training set: 0.9963058271289575
20201017-153755	Info: R2 Score achieved on test set: 0.43352625875035444
20201017-153755	Info: Start normalizer
20201017-153755	Info: 
--------------------------------------
20201017-153755	Info: Iteration 35
20201017-153755	Info: imputer {'name': 'median'}
20201017-153755	Info: outlier {'fit_on': 'test', 'name': 'customOR', 'strategy': 'iqr', 'threshold': 6.5}
20201017-153755	Info: feature_selector {'k': 100, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'True', 'use_select_best_k': 'False'}
20201017-153755	Info: normalizer {'fit_on': 'test', 'name': 'robustscaler'}
20201017-153755	Info: regression {'name': 'xgb'}
20201017-153755	Info: 
----------------------------------------
20201017-153755	Info: Start fit model
20201017-153755	Info: Stratified split
20201017-153755	Info: The number of samples for each 'age/class' are:
    67  75  69  70  72  73  68  74  66  71  65  77  63  78  76  79  64  81  62  60  80  61  55  82  58  59  56  57  83  84  54  52  49  53  85  86  51  46  87  89  48  88  45  50  44  47  42  90  95  91  94  43  97
y  55  53  53  50  47  47  46  44  42  41  38  33  32  32  31  28  25  24  23  21  21  20  19  19  18  17  17  15  15  12  10  10  10   9   9   8   7   6   6   5   5   5   4   4   3   2   2   2   1   1   1   1   1
20201017-153755	Info: 'Age' with only one sample: [95 91 94 43 97]
20201017-153755	Info: x_train_split: (945, 331)
20201017-153755	Info: x_test_split: (105, 331)
20201017-154037	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.1, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.100000001, max_delta_step=0, max_depth=6,
             min_child_weight=2, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.9,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-154037	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}
20201017-154037	Info: Best training-score with mse loss: 0.4755542167099282
20201017-154037	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
22   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.475554        0.088967          0.997077         0.000370
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.469415        0.067025          0.993092         0.000770
10   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.469073        0.084346          0.964165         0.001348
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.468565        0.070257          0.944923         0.001228
11   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.467968        0.072257          0.960358         0.001859
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.467572        0.073080          0.941126         0.002743
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.467271        0.078763          0.963792         0.002140
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.466556        0.069292          0.994104         0.000454
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.463975        0.067057          0.941641         0.003396
1    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.463969        0.067466          0.766000         0.004206
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.463482        0.071103          0.940723         0.003451
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.463183        0.080717          0.938581         0.003387
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.462252        0.061420          0.943096         0.002383
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.462180        0.081689          0.990762         0.000906
7    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.462150        0.072946          0.763096         0.005862
23   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.461249        0.083942          0.997245         0.000356
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.460168        0.069944          0.936695         0.003831
14   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.460063        0.069128          0.961853         0.003221
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.459082        0.062198          0.993295         0.000921
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.458866        0.082881          0.996394         0.000509
28  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.458692        0.062938          0.731955         0.003856
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.458166        0.078383          0.992122         0.000494
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.457645        0.091561          0.988969         0.001054
31  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.456476        0.057791          0.731356         0.003680
35  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.456231        0.063869          0.724590         0.003260
16   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.456138        0.076968          0.960944         0.002550
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.455332        0.070900          0.940703         0.002452
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.455127        0.066925          0.942354         0.001922
47  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.454777        0.071981          0.993936         0.000761
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.453938        0.085638          0.991024         0.000992
20201017-154037	Info: R2 Score achieved on training set: 0.9963058271289575
20201017-154037	Info: R2 Score achieved on test set: 0.43352625875035444
20201017-154037	Info: Feature Selection
20201017-154037	Info: 
Remove constant features:
20201017-154037	Info: Following columns are constant: [193, 297, 339, 629]
20201017-154037	Info: Variance Threshold  0.0  -> nr of features:  828
20201017-154037	Info: Removed: 4 features
20201017-154037	Info: 
Remove constant features:
20201017-154038	Info: Following columns are constant: [1, 2, 6, 9, 16, 34, 50, 78, 82, 83, 145, 153, 166, 194, 205, 231, 255, 262, 265, 268, 315, 333, 360, 361, 371, 375, 376, 396, 419, 446, 451, 477, 478, 497, 502, 524, 583, 585, 606, 624, 635, 641, 660, 675, 680, 696, 715, 717, 725, 731, 743, 751, 758, 774, 807]
20201017-154038	Info: Variance Threshold  0.01  -> nr of features:  773
20201017-154038	Info: Removed: 55 features
20201017-154038	Info: 
Remove Correlated Features:
20201017-154044	Info: Following features are removed: {256, 636, 130, 386, 643, 764, 520, 137, 521, 765, 268, 270, 271, 527, 407, 665, 539, 156, 542, 415, 671, 424, 41, 682, 684, 558, 432, 305, 179, 691, 183, 440, 567, 443, 573, 318, 191, 701, 449, 450, 67, 452, 705, 331, 715, 462, 208, 83, 467, 598, 217, 602, 91, 347, 733, 734, 223, 224, 354, 739, 742, 615, 745, 622, 369, 497, 498, 116, 244, 760, 761, 380, 637, 254}
20201017-154044	Info: Nr. of features remvoed: 74
20201017-154044	Info: Correlation Threshold  0.8  -> nr of features:  699
20201017-154044	Info: 
Select Best k features:
20201017-154050	Info: SelectKBest k = 100  -> nr features:  100
20201017-154050	Info: Start normalizer
20201017-154050	Info: 
--------------------------------------
20201017-154050	Info: Iteration 36
20201017-154050	Info: imputer {'name': 'median'}
20201017-154050	Info: outlier {'fit_on': 'test', 'name': 'customOR', 'strategy': 'iqr', 'threshold': 6.5}
20201017-154050	Info: feature_selector {'k': 100, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'False', 'use_select_best_k': 'True'}
20201017-154050	Info: normalizer {'fit_on': 'train', 'name': 'robustscaler'}
20201017-154050	Info: regression {'name': 'xgb'}
20201017-154050	Info: 
----------------------------------------
20201017-154050	Info: Start fit model
20201017-154050	Info: Stratified split
20201017-154050	Info: The number of samples for each 'age/class' are:
    67  75  69  70  72  73  68  74  66  71  65  77  63  78  76  79  64  81  62  60  80  61  55  82  58  59  56  57  83  84  54  52  49  53  85  86  51  46  87  89  48  88  45  50  44  47  42  90  95  91  94  43  97
y  55  53  53  50  47  47  46  44  42  41  38  33  32  32  31  28  25  24  23  21  21  20  19  19  18  17  17  15  15  12  10  10  10   9   9   8   7   6   6   5   5   5   4   4   3   2   2   2   1   1   1   1   1
20201017-154050	Info: 'Age' with only one sample: [95 91 94 43 97]
20201017-154050	Info: x_train_split: (945, 100)
20201017-154050	Info: x_test_split: (105, 100)
20201017-154142	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=4,
             min_child_weight=2, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.8,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-154142	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}
20201017-154142	Info: Best training-score with mse loss: 0.48239953339867475
20201017-154142	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.482400        0.083638          0.920168         0.001737
14   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.480778        0.070520          0.944214         0.003149
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.476116        0.068151          0.981635         0.001124
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.472983        0.074249          0.924605         0.003331
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.471666        0.067181          0.985579         0.001694
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.470997        0.078115          0.984347         0.001366
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.470972        0.087312          0.984786         0.001085
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.470146        0.067302          0.926211         0.002693
19   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.468830        0.087785          0.994545         0.000639
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.468776        0.063103          0.921736         0.005291
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.467550        0.075506          0.988339         0.001373
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.467550        0.067529          0.921059         0.002538
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.467122        0.079347          0.988243         0.000515
5    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.466792        0.061927          0.739974         0.004756
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.466520        0.070160          0.987182         0.000852
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.466023        0.072609          0.918970         0.004700
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.464930        0.073445          0.941968         0.003060
47  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.464112        0.067101          0.987969         0.001422
32  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.463663        0.063905          0.709421         0.003403
11   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.463321        0.061697          0.943688         0.002133
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.463132        0.070936          0.922550         0.003261
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.462178        0.068500          0.986961         0.001520
34  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.461403        0.067160          0.713568         0.002750
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.461223        0.084707          0.917687         0.003284
21   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.461043        0.080058          0.992524         0.000698
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.460805        0.079682          0.993186         0.000399
10   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.460631        0.092168          0.947101         0.001903
22   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.460067        0.085014          0.994305         0.000395
31  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.459994        0.062793          0.715170         0.003308
2    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.459648        0.069924          0.740362         0.003987
20201017-154142	Info: R2 Score achieved on training set: 0.9114097250163768
20201017-154142	Info: R2 Score achieved on test set: 0.5490240720291384
20201017-154142	Info: Start normalizer
20201017-154142	Info: 
--------------------------------------
20201017-154142	Info: Iteration 37
20201017-154142	Info: imputer {'name': 'median'}
20201017-154142	Info: outlier {'fit_on': 'test', 'name': 'customOR', 'strategy': 'iqr', 'threshold': 6.5}
20201017-154142	Info: feature_selector {'k': 100, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'False', 'use_select_best_k': 'True'}
20201017-154142	Info: normalizer {'fit_on': 'test', 'name': 'robustscaler'}
20201017-154142	Info: regression {'name': 'xgb'}
20201017-154142	Info: 
----------------------------------------
20201017-154142	Info: Start fit model
20201017-154142	Info: Stratified split
20201017-154142	Info: The number of samples for each 'age/class' are:
    67  75  69  70  72  73  68  74  66  71  65  77  63  78  76  79  64  81  62  60  80  61  55  82  58  59  56  57  83  84  54  52  49  53  85  86  51  46  87  89  48  88  45  50  44  47  42  90  95  91  94  43  97
y  55  53  53  50  47  47  46  44  42  41  38  33  32  32  31  28  25  24  23  21  21  20  19  19  18  17  17  15  15  12  10  10  10   9   9   8   7   6   6   5   5   5   4   4   3   2   2   2   1   1   1   1   1
20201017-154142	Info: 'Age' with only one sample: [95 91 94 43 97]
20201017-154142	Info: x_train_split: (945, 100)
20201017-154142	Info: x_test_split: (105, 100)
20201017-154233	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=4,
             min_child_weight=2, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.8,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-154233	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}
20201017-154233	Info: Best training-score with mse loss: 0.48239953339867475
20201017-154233	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.482400        0.083638          0.920168         0.001737
14   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.480778        0.070520          0.944214         0.003149
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.476116        0.068151          0.981635         0.001124
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.472983        0.074249          0.924605         0.003331
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.471666        0.067181          0.985579         0.001694
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.470997        0.078115          0.984347         0.001366
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.470972        0.087312          0.984786         0.001085
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.470146        0.067302          0.926211         0.002693
19   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.468830        0.087785          0.994545         0.000639
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.468776        0.063103          0.921736         0.005291
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.467550        0.075506          0.988339         0.001373
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.467550        0.067529          0.921059         0.002538
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.467122        0.079347          0.988243         0.000515
5    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.466792        0.061927          0.739974         0.004756
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.466520        0.070160          0.987182         0.000852
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.466023        0.072609          0.918970         0.004700
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.464930        0.073445          0.941968         0.003060
47  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.464112        0.067101          0.987969         0.001422
32  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.463663        0.063905          0.709421         0.003403
11   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.463321        0.061697          0.943688         0.002133
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.463132        0.070936          0.922550         0.003261
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.462178        0.068500          0.986961         0.001520
34  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.461403        0.067160          0.713568         0.002750
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.461223        0.084707          0.917687         0.003284
21   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.461043        0.080058          0.992524         0.000698
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.460805        0.079682          0.993186         0.000399
10   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.460631        0.092168          0.947101         0.001903
22   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.460067        0.085014          0.994305         0.000395
31  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.459994        0.062793          0.715170         0.003308
2    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.459648        0.069924          0.740362         0.003987
20201017-154233	Info: R2 Score achieved on training set: 0.9114097250163768
20201017-154233	Info: R2 Score achieved on test set: 0.5490240720291384
20201017-154233	Info: Feature Selection
20201017-154233	Info: 
Remove constant features:
20201017-154233	Info: Following columns are constant: [193, 297, 339, 629]
20201017-154233	Info: Variance Threshold  0.0  -> nr of features:  828
20201017-154233	Info: Removed: 4 features
20201017-154233	Info: 
Remove constant features:
20201017-154233	Info: Following columns are constant: [1, 2, 6, 9, 16, 34, 50, 78, 82, 83, 145, 153, 166, 194, 205, 231, 255, 262, 265, 268, 315, 333, 360, 361, 371, 375, 376, 396, 419, 446, 451, 477, 478, 497, 502, 524, 583, 585, 606, 624, 635, 641, 660, 675, 680, 696, 715, 717, 725, 731, 743, 751, 758, 774, 807]
20201017-154233	Info: Variance Threshold  0.01  -> nr of features:  773
20201017-154233	Info: Removed: 55 features
20201017-154233	Info: 
Remove Correlated Features:
20201017-154239	Info: Following features are removed: {256, 636, 130, 386, 643, 764, 520, 137, 521, 765, 268, 270, 271, 527, 407, 665, 539, 156, 542, 415, 671, 424, 41, 682, 684, 558, 432, 305, 179, 691, 183, 440, 567, 443, 573, 318, 191, 701, 449, 450, 67, 452, 705, 331, 715, 462, 208, 83, 467, 598, 217, 602, 91, 347, 733, 734, 223, 224, 354, 739, 742, 615, 745, 622, 369, 497, 498, 116, 244, 760, 761, 380, 637, 254}
20201017-154239	Info: Nr. of features remvoed: 74
20201017-154239	Info: Correlation Threshold  0.8  -> nr of features:  699
20201017-154239	Info: Start normalizer
20201017-154239	Info: 
--------------------------------------
20201017-154239	Info: Iteration 38
20201017-154239	Info: imputer {'name': 'median'}
20201017-154239	Info: outlier {'fit_on': 'test', 'name': 'customOR', 'strategy': 'iqr', 'threshold': 6.5}
20201017-154239	Info: feature_selector {'k': 100, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'False', 'use_select_best_k': 'False'}
20201017-154239	Info: normalizer {'fit_on': 'train', 'name': 'robustscaler'}
20201017-154239	Info: regression {'name': 'xgb'}
20201017-154239	Info: 
----------------------------------------
20201017-154239	Info: Start fit model
20201017-154239	Info: Stratified split
20201017-154239	Info: The number of samples for each 'age/class' are:
    67  75  69  70  72  73  68  74  66  71  65  77  63  78  76  79  64  81  62  60  80  61  55  82  58  59  56  57  83  84  54  52  49  53  85  86  51  46  87  89  48  88  45  50  44  47  42  90  95  91  94  43  97
y  55  53  53  50  47  47  46  44  42  41  38  33  32  32  31  28  25  24  23  21  21  20  19  19  18  17  17  15  15  12  10  10  10   9   9   8   7   6   6   5   5   5   4   4   3   2   2   2   1   1   1   1   1
20201017-154239	Info: 'Age' with only one sample: [95 91 94 43 97]
20201017-154239	Info: x_train_split: (945, 699)
20201017-154239	Info: x_test_split: (105, 699)
20201017-154818	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=4,
             min_child_weight=1, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.9,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-154818	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}
20201017-154818	Info: Best training-score with mse loss: 0.47688854629803695
20201017-154818	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.476889        0.056376          0.956014         0.002272
23   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.475950        0.055387          0.998392         0.000216
1    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.471693        0.051342          0.785507         0.003488
31  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.471315        0.050922          0.747069         0.002065
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.468897        0.060637          0.954424         0.002389
28  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.468655        0.055002          0.747085         0.003459
7    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.468640        0.064251          0.783294         0.004534
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.468379        0.083766          0.971423         0.002567
4    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.467028        0.064053          0.784782         0.002671
34  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.467005        0.061236          0.747095         0.004088
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.466440        0.060707          0.996010         0.000656
19   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.460675        0.070890          0.998248         0.000192
5    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.460530        0.063189          0.777835         0.003768
11   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.460414        0.056249          0.970045         0.001806
10   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.459781        0.062977          0.971853         0.001795
3    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.459616        0.061559          0.782976         0.004107
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.459578        0.072345          0.969039         0.001595
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.459548        0.067580          0.994956         0.000433
32  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.459544        0.067493          0.742201         0.003612
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.459330        0.075680          0.952829         0.003026
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.458946        0.061869          0.952892         0.002180
27  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.458608        0.058980          0.747289         0.002747
47  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.458462        0.070661          0.996124         0.000367
35  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.458425        0.055624          0.740872         0.003458
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.456638        0.075399          0.953567         0.002810
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.455653        0.079902          0.951828         0.002755
30  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.455580        0.063395          0.746525         0.002715
33  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.454737        0.066064          0.747644         0.004382
0    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.454720        0.064805          0.782883         0.002342
29  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.454559        0.066533          0.741638         0.003414
20201017-154818	Info: R2 Score achieved on training set: 0.9471638291621839
20201017-154818	Info: R2 Score achieved on test set: 0.5115721737119729
20201017-154818	Info: Start normalizer
20201017-154818	Info: 
--------------------------------------
20201017-154818	Info: Iteration 39
20201017-154818	Info: imputer {'name': 'median'}
20201017-154818	Info: outlier {'fit_on': 'test', 'name': 'customOR', 'strategy': 'iqr', 'threshold': 6.5}
20201017-154818	Info: feature_selector {'k': 100, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'False', 'use_select_best_k': 'False'}
20201017-154818	Info: normalizer {'fit_on': 'test', 'name': 'robustscaler'}
20201017-154818	Info: regression {'name': 'xgb'}
20201017-154818	Info: 
----------------------------------------
20201017-154818	Info: Start fit model
20201017-154818	Info: Stratified split
20201017-154818	Info: The number of samples for each 'age/class' are:
    67  75  69  70  72  73  68  74  66  71  65  77  63  78  76  79  64  81  62  60  80  61  55  82  58  59  56  57  83  84  54  52  49  53  85  86  51  46  87  89  48  88  45  50  44  47  42  90  95  91  94  43  97
y  55  53  53  50  47  47  46  44  42  41  38  33  32  32  31  28  25  24  23  21  21  20  19  19  18  17  17  15  15  12  10  10  10   9   9   8   7   6   6   5   5   5   4   4   3   2   2   2   1   1   1   1   1
20201017-154818	Info: 'Age' with only one sample: [95 91 94 43 97]
20201017-154818	Info: x_train_split: (945, 699)
20201017-154818	Info: x_test_split: (105, 699)
20201017-155358	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=4,
             min_child_weight=1, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.9,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-155358	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}
20201017-155358	Info: Best training-score with mse loss: 0.47688854629803695
20201017-155358	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.476889        0.056376          0.956014         0.002272
23   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.475950        0.055387          0.998392         0.000216
1    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.471693        0.051342          0.785507         0.003488
31  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.471315        0.050922          0.747069         0.002065
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.468897        0.060637          0.954424         0.002389
28  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.468655        0.055002          0.747085         0.003459
7    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.468640        0.064251          0.783294         0.004534
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.468379        0.083766          0.971423         0.002567
4    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.467028        0.064053          0.784782         0.002671
34  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.467005        0.061236          0.747095         0.004088
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.466440        0.060707          0.996010         0.000656
19   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.460675        0.070890          0.998248         0.000192
5    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.460530        0.063189          0.777835         0.003768
11   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.460414        0.056249          0.970045         0.001806
10   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.459781        0.062977          0.971853         0.001795
3    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.459616        0.061559          0.782976         0.004107
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.459578        0.072345          0.969039         0.001595
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.459548        0.067580          0.994956         0.000433
32  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.459544        0.067493          0.742201         0.003612
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.459330        0.075680          0.952829         0.003026
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.458946        0.061869          0.952892         0.002180
27  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.458608        0.058980          0.747289         0.002747
47  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.458462        0.070661          0.996124         0.000367
35  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.458425        0.055624          0.740872         0.003458
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.456638        0.075399          0.953567         0.002810
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.455653        0.079902          0.951828         0.002755
30  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.455580        0.063395          0.746525         0.002715
33  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.454737        0.066064          0.747644         0.004382
0    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.454720        0.064805          0.782883         0.002342
29  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.454559        0.066533          0.741638         0.003414
20201017-155358	Info: R2 Score achieved on training set: 0.9471638291621839
20201017-155358	Info: R2 Score achieved on test set: 0.5115721737119729
20201017-155358	Info: Feature Selection
20201017-155358	Info: 
Remove constant features:
20201017-155358	Info: Following columns are constant: [193, 297, 339, 629]
20201017-155358	Info: Variance Threshold  0.0  -> nr of features:  828
20201017-155358	Info: Removed: 4 features
20201017-155358	Info: 
Remove constant features:
20201017-155358	Info: Following columns are constant: [1, 2, 6, 9, 16, 34, 50, 78, 82, 83, 145, 153, 166, 194, 205, 231, 255, 262, 265, 268, 315, 333, 360, 361, 371, 375, 376, 396, 419, 446, 451, 477, 478, 497, 502, 524, 583, 585, 606, 624, 635, 641, 660, 675, 680, 696, 715, 717, 725, 731, 743, 751, 758, 774, 807]
20201017-155358	Info: Variance Threshold  0.01  -> nr of features:  773
20201017-155358	Info: Removed: 55 features
20201017-155358	Info: 
Remove Correlated Features:
20201017-155404	Info: Following features are removed: {256, 636, 130, 386, 643, 764, 520, 137, 521, 765, 268, 270, 271, 527, 407, 665, 539, 156, 542, 415, 671, 424, 41, 682, 684, 558, 432, 305, 179, 691, 183, 440, 567, 443, 573, 318, 191, 701, 449, 450, 67, 452, 705, 331, 715, 462, 208, 83, 467, 598, 217, 602, 91, 347, 733, 734, 223, 224, 354, 739, 742, 615, 745, 622, 369, 497, 498, 116, 244, 760, 761, 380, 637, 254}
20201017-155404	Info: Nr. of features remvoed: 74
20201017-155404	Info: Correlation Threshold  0.8  -> nr of features:  699
20201017-155404	Info: 
Select Best k features:
20201017-155410	Info: SelectKBest k = 80  -> nr features:  80
20201017-155410	Info: 
Select Best Based on Impurity
20201017-155411	Info: TreeBasedFeatureSelector  -> nr features:  38
20201017-155411	Info: Start normalizer
20201017-155411	Info: 
--------------------------------------
20201017-155411	Info: Iteration 40
20201017-155411	Info: imputer {'name': 'median'}
20201017-155411	Info: outlier {'fit_on': 'test', 'name': 'customOR', 'strategy': 'iqr', 'threshold': 6.5}
20201017-155411	Info: feature_selector {'k': 80, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'True', 'use_select_best_k': 'True'}
20201017-155411	Info: normalizer {'fit_on': 'train', 'name': 'robustscaler'}
20201017-155411	Info: regression {'name': 'xgb'}
20201017-155411	Info: 
----------------------------------------
20201017-155411	Info: Start fit model
20201017-155411	Info: Stratified split
20201017-155411	Info: The number of samples for each 'age/class' are:
    67  75  69  70  72  73  68  74  66  71  65  77  63  78  76  79  64  81  62  60  80  61  55  82  58  59  56  57  83  84  54  52  49  53  85  86  51  46  87  89  48  88  45  50  44  47  42  90  95  91  94  43  97
y  55  53  53  50  47  47  46  44  42  41  38  33  32  32  31  28  25  24  23  21  21  20  19  19  18  17  17  15  15  12  10  10  10   9   9   8   7   6   6   5   5   5   4   4   3   2   2   2   1   1   1   1   1
20201017-155411	Info: 'Age' with only one sample: [95 91 94 43 97]
20201017-155411	Info: x_train_split: (945, 38)
20201017-155411	Info: x_test_split: (105, 38)
20201017-155431	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.1, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.100000001, max_delta_step=0, max_depth=6,
             min_child_weight=1, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.9,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-155431	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}
20201017-155431	Info: Best training-score with mse loss: 0.4712047024739293
20201017-155431	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
19   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.471205        0.067523          0.988948         0.001092
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.469271        0.074740          0.973200         0.001967
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.469032        0.062725          0.979700         0.001486
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.464514        0.062195          0.977062         0.003173
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.462621        0.065790          0.975286         0.002840
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.461229        0.067427          0.976969         0.001849
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.460822        0.070204          0.984838         0.001343
33  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.459274        0.070273          0.687461         0.004136
26   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.458683        0.080115          0.985069         0.001580
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.458064        0.072662          0.883140         0.003826
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.458005        0.059529          0.972536         0.002070
27  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.457483        0.075830          0.691506         0.003950
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.456437        0.066312          0.893933         0.002224
47  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.455573        0.067099          0.979845         0.001882
30  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.454080        0.073930          0.690258         0.004073
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.453927        0.071888          0.889789         0.004551
10   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.453766        0.055551          0.920590         0.003409
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.453705        0.065098          0.920355         0.002496
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.453335        0.087421          0.888961         0.003802
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.453264        0.073425          0.966363         0.002754
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.453235        0.066893          0.896712         0.004538
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.453221        0.071130          0.886352         0.004749
24   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.452588        0.068354          0.981372         0.001235
21   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.452073        0.078457          0.984737         0.001753
23   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.451614        0.077870          0.987842         0.002147
35  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.451541        0.077072          0.687629         0.006322
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.451111        0.066895          0.895928         0.004546
22   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.450938        0.070373          0.988149         0.001283
31  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.449327        0.076982          0.691996         0.004679
34  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.448946        0.073345          0.690080         0.004292
20201017-155431	Info: R2 Score achieved on training set: 0.9881362204576449
20201017-155431	Info: R2 Score achieved on test set: 0.45234706045997797
20201017-155431	Info: Start normalizer
20201017-155431	Info: 
--------------------------------------
20201017-155431	Info: Iteration 41
20201017-155431	Info: imputer {'name': 'median'}
20201017-155431	Info: outlier {'fit_on': 'test', 'name': 'customOR', 'strategy': 'iqr', 'threshold': 6.5}
20201017-155431	Info: feature_selector {'k': 80, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'True', 'use_select_best_k': 'True'}
20201017-155431	Info: normalizer {'fit_on': 'test', 'name': 'robustscaler'}
20201017-155431	Info: regression {'name': 'xgb'}
20201017-155431	Info: 
----------------------------------------
20201017-155431	Info: Start fit model
20201017-155431	Info: Stratified split
20201017-155431	Info: The number of samples for each 'age/class' are:
    67  75  69  70  72  73  68  74  66  71  65  77  63  78  76  79  64  81  62  60  80  61  55  82  58  59  56  57  83  84  54  52  49  53  85  86  51  46  87  89  48  88  45  50  44  47  42  90  95  91  94  43  97
y  55  53  53  50  47  47  46  44  42  41  38  33  32  32  31  28  25  24  23  21  21  20  19  19  18  17  17  15  15  12  10  10  10   9   9   8   7   6   6   5   5   5   4   4   3   2   2   2   1   1   1   1   1
20201017-155431	Info: 'Age' with only one sample: [95 91 94 43 97]
20201017-155432	Info: x_train_split: (945, 38)
20201017-155432	Info: x_test_split: (105, 38)
20201017-155452	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.1, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.100000001, max_delta_step=0, max_depth=6,
             min_child_weight=1, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.9,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-155452	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}
20201017-155452	Info: Best training-score with mse loss: 0.4712047024739293
20201017-155452	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
19   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.471205        0.067523          0.988948         0.001092
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.469271        0.074740          0.973200         0.001967
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.469032        0.062725          0.979700         0.001486
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.464514        0.062195          0.977062         0.003173
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.462621        0.065790          0.975286         0.002840
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.461229        0.067427          0.976969         0.001849
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.460822        0.070204          0.984838         0.001343
33  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.459274        0.070273          0.687461         0.004136
26   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.458683        0.080115          0.985069         0.001580
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.458064        0.072662          0.883140         0.003826
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.458005        0.059529          0.972536         0.002070
27  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.457483        0.075830          0.691506         0.003950
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.456437        0.066312          0.893933         0.002224
47  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.455573        0.067099          0.979845         0.001882
30  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.454080        0.073930          0.690258         0.004073
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.453927        0.071888          0.889789         0.004551
10   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.453766        0.055551          0.920590         0.003409
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.453705        0.065098          0.920355         0.002496
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.453335        0.087421          0.888961         0.003802
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.453264        0.073425          0.966363         0.002754
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.453235        0.066893          0.896712         0.004538
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.453221        0.071130          0.886352         0.004749
24   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.452588        0.068354          0.981372         0.001235
21   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.452073        0.078457          0.984737         0.001753
23   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.451614        0.077870          0.987842         0.002147
35  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.451541        0.077072          0.687629         0.006322
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.451111        0.066895          0.895928         0.004546
22   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.450938        0.070373          0.988149         0.001283
31  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.449327        0.076982          0.691996         0.004679
34  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.448946        0.073345          0.690080         0.004292
20201017-155452	Info: R2 Score achieved on training set: 0.9881362204576449
20201017-155452	Info: R2 Score achieved on test set: 0.45234706045997797
20201017-155452	Info: Feature Selection
20201017-155452	Info: 
Remove constant features:
20201017-155452	Info: Following columns are constant: [193, 297, 339, 629]
20201017-155452	Info: Variance Threshold  0.0  -> nr of features:  828
20201017-155452	Info: Removed: 4 features
20201017-155452	Info: 
Remove constant features:
20201017-155452	Info: Following columns are constant: [1, 2, 6, 9, 16, 34, 50, 78, 82, 83, 145, 153, 166, 194, 205, 231, 255, 262, 265, 268, 315, 333, 360, 361, 371, 375, 376, 396, 419, 446, 451, 477, 478, 497, 502, 524, 583, 585, 606, 624, 635, 641, 660, 675, 680, 696, 715, 717, 725, 731, 743, 751, 758, 774, 807]
20201017-155452	Info: Variance Threshold  0.01  -> nr of features:  773
20201017-155452	Info: Removed: 55 features
20201017-155452	Info: 
Remove Correlated Features:
20201017-155458	Info: Following features are removed: {256, 636, 130, 386, 643, 764, 520, 137, 521, 765, 268, 270, 271, 527, 407, 665, 539, 156, 542, 415, 671, 424, 41, 682, 684, 558, 432, 305, 179, 691, 183, 440, 567, 443, 573, 318, 191, 701, 449, 450, 67, 452, 705, 331, 715, 462, 208, 83, 467, 598, 217, 602, 91, 347, 733, 734, 223, 224, 354, 739, 742, 615, 745, 622, 369, 497, 498, 116, 244, 760, 761, 380, 637, 254}
20201017-155458	Info: Nr. of features remvoed: 74
20201017-155458	Info: Correlation Threshold  0.8  -> nr of features:  699
20201017-155458	Info: 
Select Best Based on Impurity
20201017-155459	Info: TreeBasedFeatureSelector  -> nr features:  331
20201017-155459	Info: Start normalizer
20201017-155459	Info: 
--------------------------------------
20201017-155459	Info: Iteration 42
20201017-155459	Info: imputer {'name': 'median'}
20201017-155459	Info: outlier {'fit_on': 'test', 'name': 'customOR', 'strategy': 'iqr', 'threshold': 6.5}
20201017-155459	Info: feature_selector {'k': 80, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'True', 'use_select_best_k': 'False'}
20201017-155459	Info: normalizer {'fit_on': 'train', 'name': 'robustscaler'}
20201017-155459	Info: regression {'name': 'xgb'}
20201017-155459	Info: 
----------------------------------------
20201017-155459	Info: Start fit model
20201017-155459	Info: Stratified split
20201017-155459	Info: The number of samples for each 'age/class' are:
    67  75  69  70  72  73  68  74  66  71  65  77  63  78  76  79  64  81  62  60  80  61  55  82  58  59  56  57  83  84  54  52  49  53  85  86  51  46  87  89  48  88  45  50  44  47  42  90  95  91  94  43  97
y  55  53  53  50  47  47  46  44  42  41  38  33  32  32  31  28  25  24  23  21  21  20  19  19  18  17  17  15  15  12  10  10  10   9   9   8   7   6   6   5   5   5   4   4   3   2   2   2   1   1   1   1   1
20201017-155459	Info: 'Age' with only one sample: [95 91 94 43 97]
20201017-155459	Info: x_train_split: (945, 331)
20201017-155459	Info: x_test_split: (105, 331)
20201017-155742	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.1, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.100000001, max_delta_step=0, max_depth=6,
             min_child_weight=2, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.9,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-155742	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}
20201017-155742	Info: Best training-score with mse loss: 0.4755542167099282
20201017-155742	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
22   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.475554        0.088967          0.997077         0.000370
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.469415        0.067024          0.993092         0.000770
10   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.469073        0.084346          0.964165         0.001348
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.468565        0.070257          0.944923         0.001228
11   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.467968        0.072257          0.960358         0.001859
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.467572        0.073080          0.941126         0.002743
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.467271        0.078763          0.963792         0.002140
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.466556        0.069292          0.994104         0.000454
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.463975        0.067057          0.941641         0.003396
1    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.463969        0.067466          0.766000         0.004206
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.463482        0.071103          0.940723         0.003451
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.463183        0.080717          0.938581         0.003387
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.462252        0.061420          0.943096         0.002383
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.462180        0.081689          0.990762         0.000906
7    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.462150        0.072946          0.763096         0.005862
23   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.461249        0.083942          0.997245         0.000356
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.460168        0.069944          0.936695         0.003831
14   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.460063        0.069128          0.961853         0.003221
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.459082        0.062198          0.993295         0.000921
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.458866        0.082881          0.996394         0.000509
28  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.458692        0.062938          0.731955         0.003856
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.458160        0.078383          0.992122         0.000494
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.457645        0.091561          0.988969         0.001054
31  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.456476        0.057791          0.731356         0.003680
35  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.456231        0.063869          0.724590         0.003260
16   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.456138        0.076968          0.960944         0.002550
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.455332        0.070900          0.940703         0.002452
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.455127        0.066925          0.942354         0.001922
47  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.454777        0.071981          0.993936         0.000761
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.453938        0.085638          0.991024         0.000992
20201017-155742	Info: R2 Score achieved on training set: 0.9963058271289575
20201017-155742	Info: R2 Score achieved on test set: 0.43352625875035444
20201017-155742	Info: Start normalizer
20201017-155742	Info: 
--------------------------------------
20201017-155742	Info: Iteration 43
20201017-155742	Info: imputer {'name': 'median'}
20201017-155742	Info: outlier {'fit_on': 'test', 'name': 'customOR', 'strategy': 'iqr', 'threshold': 6.5}
20201017-155742	Info: feature_selector {'k': 80, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'True', 'use_select_best_k': 'False'}
20201017-155742	Info: normalizer {'fit_on': 'test', 'name': 'robustscaler'}
20201017-155742	Info: regression {'name': 'xgb'}
20201017-155742	Info: 
----------------------------------------
20201017-155742	Info: Start fit model
20201017-155742	Info: Stratified split
20201017-155742	Info: The number of samples for each 'age/class' are:
    67  75  69  70  72  73  68  74  66  71  65  77  63  78  76  79  64  81  62  60  80  61  55  82  58  59  56  57  83  84  54  52  49  53  85  86  51  46  87  89  48  88  45  50  44  47  42  90  95  91  94  43  97
y  55  53  53  50  47  47  46  44  42  41  38  33  32  32  31  28  25  24  23  21  21  20  19  19  18  17  17  15  15  12  10  10  10   9   9   8   7   6   6   5   5   5   4   4   3   2   2   2   1   1   1   1   1
20201017-155742	Info: 'Age' with only one sample: [95 91 94 43 97]
20201017-155742	Info: x_train_split: (945, 331)
20201017-155742	Info: x_test_split: (105, 331)
20201017-160024	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.1, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.100000001, max_delta_step=0, max_depth=6,
             min_child_weight=2, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.9,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-160024	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}
20201017-160024	Info: Best training-score with mse loss: 0.4755542167099282
20201017-160024	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
22   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.475554        0.088967          0.997077         0.000370
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.469415        0.067025          0.993092         0.000770
10   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.469073        0.084346          0.964165         0.001348
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.468565        0.070257          0.944923         0.001228
11   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.467968        0.072257          0.960358         0.001859
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.467572        0.073080          0.941126         0.002743
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.467271        0.078763          0.963792         0.002140
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.466556        0.069292          0.994104         0.000454
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.463975        0.067057          0.941641         0.003396
1    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.463969        0.067466          0.766000         0.004206
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.463482        0.071103          0.940723         0.003451
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.463183        0.080717          0.938581         0.003387
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.462252        0.061420          0.943096         0.002383
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.462180        0.081689          0.990762         0.000906
7    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.462150        0.072946          0.763096         0.005862
23   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.461249        0.083942          0.997245         0.000356
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.460168        0.069944          0.936695         0.003831
14   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.460063        0.069128          0.961853         0.003221
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.459082        0.062198          0.993295         0.000921
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.458866        0.082881          0.996394         0.000509
28  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.458692        0.062938          0.731955         0.003856
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.458166        0.078383          0.992122         0.000494
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.457645        0.091561          0.988969         0.001054
31  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.456476        0.057791          0.731356         0.003680
35  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.456231        0.063869          0.724590         0.003260
16   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.456138        0.076968          0.960944         0.002550
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.455332        0.070900          0.940703         0.002452
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.455127        0.066925          0.942354         0.001922
47  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.454777        0.071981          0.993936         0.000761
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.453938        0.085638          0.991024         0.000992
20201017-160024	Info: R2 Score achieved on training set: 0.9963058271289575
20201017-160024	Info: R2 Score achieved on test set: 0.43352625875035444
20201017-160024	Info: Feature Selection
20201017-160024	Info: 
Remove constant features:
20201017-160024	Info: Following columns are constant: [193, 297, 339, 629]
20201017-160024	Info: Variance Threshold  0.0  -> nr of features:  828
20201017-160024	Info: Removed: 4 features
20201017-160024	Info: 
Remove constant features:
20201017-160024	Info: Following columns are constant: [1, 2, 6, 9, 16, 34, 50, 78, 82, 83, 145, 153, 166, 194, 205, 231, 255, 262, 265, 268, 315, 333, 360, 361, 371, 375, 376, 396, 419, 446, 451, 477, 478, 497, 502, 524, 583, 585, 606, 624, 635, 641, 660, 675, 680, 696, 715, 717, 725, 731, 743, 751, 758, 774, 807]
20201017-160024	Info: Variance Threshold  0.01  -> nr of features:  773
20201017-160024	Info: Removed: 55 features
20201017-160024	Info: 
Remove Correlated Features:
20201017-160030	Info: Following features are removed: {256, 636, 130, 386, 643, 764, 520, 137, 521, 765, 268, 270, 271, 527, 407, 665, 539, 156, 542, 415, 671, 424, 41, 682, 684, 558, 432, 305, 179, 691, 183, 440, 567, 443, 573, 318, 191, 701, 449, 450, 67, 452, 705, 331, 715, 462, 208, 83, 467, 598, 217, 602, 91, 347, 733, 734, 223, 224, 354, 739, 742, 615, 745, 622, 369, 497, 498, 116, 244, 760, 761, 380, 637, 254}
20201017-160030	Info: Nr. of features remvoed: 74
20201017-160030	Info: Correlation Threshold  0.8  -> nr of features:  699
20201017-160030	Info: 
Select Best k features:
20201017-160037	Info: SelectKBest k = 80  -> nr features:  80
20201017-160037	Info: Start normalizer
20201017-160037	Info: 
--------------------------------------
20201017-160037	Info: Iteration 44
20201017-160037	Info: imputer {'name': 'median'}
20201017-160037	Info: outlier {'fit_on': 'test', 'name': 'customOR', 'strategy': 'iqr', 'threshold': 6.5}
20201017-160037	Info: feature_selector {'k': 80, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'False', 'use_select_best_k': 'True'}
20201017-160037	Info: normalizer {'fit_on': 'train', 'name': 'robustscaler'}
20201017-160037	Info: regression {'name': 'xgb'}
20201017-160037	Info: 
----------------------------------------
20201017-160037	Info: Start fit model
20201017-160037	Info: Stratified split
20201017-160037	Info: The number of samples for each 'age/class' are:
    67  75  69  70  72  73  68  74  66  71  65  77  63  78  76  79  64  81  62  60  80  61  55  82  58  59  56  57  83  84  54  52  49  53  85  86  51  46  87  89  48  88  45  50  44  47  42  90  95  91  94  43  97
y  55  53  53  50  47  47  46  44  42  41  38  33  32  32  31  28  25  24  23  21  21  20  19  19  18  17  17  15  15  12  10  10  10   9   9   8   7   6   6   5   5   5   4   4   3   2   2   2   1   1   1   1   1
20201017-160037	Info: 'Age' with only one sample: [95 91 94 43 97]
20201017-160037	Info: x_train_split: (945, 80)
20201017-160037	Info: x_test_split: (105, 80)
20201017-160119	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=4,
             min_child_weight=1, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.9,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-160119	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}
20201017-160119	Info: Best training-score with mse loss: 0.4890031993062351
20201017-160119	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.489003        0.070231          0.924706         0.003550
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.487576        0.057458          0.987650         0.000713
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.485679        0.066602          0.985509         0.001167
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.484621        0.060820          0.945956         0.003278
23   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.484135        0.072436          0.994295         0.000622
47  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.484095        0.077387          0.987837         0.001353
10   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.483936        0.064951          0.946033         0.001803
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.483700        0.062855          0.921142         0.003732
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.482682        0.067403          0.918850         0.002832
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.482569        0.067022          0.984310         0.001260
16   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.481182        0.080572          0.942992         0.002360
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.479293        0.078846          0.988374         0.001108
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.478623        0.068442          0.923517         0.002984
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.477044        0.063125          0.942003         0.003735
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.476309        0.070661          0.985394         0.000842
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.476204        0.094211          0.992671         0.000849
11   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.475702        0.063400          0.942840         0.002961
24   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.475538        0.063842          0.990249         0.000997
18   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.475101        0.077675          0.992954         0.000860
19   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.474749        0.083368          0.994915         0.000531
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.474738        0.051013          0.988190         0.001059
12   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.474577        0.066371          0.943754         0.003205
14   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.474387        0.065614          0.943620         0.003109
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.473884        0.072312          0.981443         0.001350
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.472459        0.069566          0.920917         0.003520
22   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.472210        0.059081          0.994188         0.000817
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.469165        0.067054          0.919076         0.002579
2    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.468331        0.063077          0.744150         0.003213
9    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.468274        0.069683          0.944294         0.001906
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.467826        0.058207          0.922761         0.001931
20201017-160119	Info: R2 Score achieved on training set: 0.9133837370339004
20201017-160119	Info: R2 Score achieved on test set: 0.5247226101509479
20201017-160119	Info: Start normalizer
20201017-160119	Info: 
--------------------------------------
20201017-160119	Info: Iteration 45
20201017-160119	Info: imputer {'name': 'median'}
20201017-160119	Info: outlier {'fit_on': 'test', 'name': 'customOR', 'strategy': 'iqr', 'threshold': 6.5}
20201017-160119	Info: feature_selector {'k': 80, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'False', 'use_select_best_k': 'True'}
20201017-160119	Info: normalizer {'fit_on': 'test', 'name': 'robustscaler'}
20201017-160119	Info: regression {'name': 'xgb'}
20201017-160119	Info: 
----------------------------------------
20201017-160119	Info: Start fit model
20201017-160119	Info: Stratified split
20201017-160119	Info: The number of samples for each 'age/class' are:
    67  75  69  70  72  73  68  74  66  71  65  77  63  78  76  79  64  81  62  60  80  61  55  82  58  59  56  57  83  84  54  52  49  53  85  86  51  46  87  89  48  88  45  50  44  47  42  90  95  91  94  43  97
y  55  53  53  50  47  47  46  44  42  41  38  33  32  32  31  28  25  24  23  21  21  20  19  19  18  17  17  15  15  12  10  10  10   9   9   8   7   6   6   5   5   5   4   4   3   2   2   2   1   1   1   1   1
20201017-160119	Info: 'Age' with only one sample: [95 91 94 43 97]
20201017-160119	Info: x_train_split: (945, 80)
20201017-160119	Info: x_test_split: (105, 80)
20201017-160200	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=4,
             min_child_weight=1, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.9,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-160200	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}
20201017-160200	Info: Best training-score with mse loss: 0.4890031993062351
20201017-160200	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.489003        0.070231          0.924706         0.003550
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.487576        0.057458          0.987650         0.000713
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.485679        0.066602          0.985509         0.001167
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.484621        0.060820          0.945956         0.003278
23   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.484135        0.072436          0.994295         0.000622
47  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.484095        0.077387          0.987837         0.001353
10   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.483936        0.064951          0.946033         0.001803
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.483700        0.062855          0.921142         0.003732
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.482682        0.067403          0.918850         0.002832
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.482569        0.067022          0.984310         0.001260
16   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.481182        0.080572          0.942992         0.002360
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.479293        0.078846          0.988374         0.001108
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.478623        0.068442          0.923517         0.002984
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.477044        0.063125          0.942003         0.003735
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.476309        0.070661          0.985394         0.000842
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.476204        0.094211          0.992671         0.000849
11   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.475702        0.063400          0.942840         0.002961
24   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.475538        0.063842          0.990249         0.000997
18   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.475101        0.077675          0.992954         0.000860
19   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.474749        0.083368          0.994915         0.000531
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.474738        0.051013          0.988190         0.001059
12   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.474577        0.066371          0.943754         0.003205
14   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.474387        0.065614          0.943620         0.003109
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.473884        0.072312          0.981443         0.001350
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.472459        0.069566          0.920917         0.003520
22   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.472210        0.059081          0.994188         0.000817
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.469165        0.067054          0.919076         0.002579
2    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.468331        0.063077          0.744150         0.003213
9    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.468274        0.069683          0.944294         0.001906
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.467826        0.058207          0.922761         0.001931
20201017-160200	Info: R2 Score achieved on training set: 0.9133837370339004
20201017-160200	Info: R2 Score achieved on test set: 0.5247226101509479
20201017-160200	Info: Feature Selection
20201017-160200	Info: 
Remove constant features:
20201017-160200	Info: Following columns are constant: [193, 297, 339, 629]
20201017-160200	Info: Variance Threshold  0.0  -> nr of features:  828
20201017-160200	Info: Removed: 4 features
20201017-160200	Info: 
Remove constant features:
20201017-160200	Info: Following columns are constant: [1, 2, 6, 9, 16, 34, 50, 78, 82, 83, 145, 153, 166, 194, 205, 231, 255, 262, 265, 268, 315, 333, 360, 361, 371, 375, 376, 396, 419, 446, 451, 477, 478, 497, 502, 524, 583, 585, 606, 624, 635, 641, 660, 675, 680, 696, 715, 717, 725, 731, 743, 751, 758, 774, 807]
20201017-160200	Info: Variance Threshold  0.01  -> nr of features:  773
20201017-160200	Info: Removed: 55 features
20201017-160200	Info: 
Remove Correlated Features:
20201017-160206	Info: Following features are removed: {256, 636, 130, 386, 643, 764, 520, 137, 521, 765, 268, 270, 271, 527, 407, 665, 539, 156, 542, 415, 671, 424, 41, 682, 684, 558, 432, 305, 179, 691, 183, 440, 567, 443, 573, 318, 191, 701, 449, 450, 67, 452, 705, 331, 715, 462, 208, 83, 467, 598, 217, 602, 91, 347, 733, 734, 223, 224, 354, 739, 742, 615, 745, 622, 369, 497, 498, 116, 244, 760, 761, 380, 637, 254}
20201017-160206	Info: Nr. of features remvoed: 74
20201017-160206	Info: Correlation Threshold  0.8  -> nr of features:  699
20201017-160206	Info: Start normalizer
20201017-160206	Info: 
--------------------------------------
20201017-160206	Info: Iteration 46
20201017-160206	Info: imputer {'name': 'median'}
20201017-160206	Info: outlier {'fit_on': 'test', 'name': 'customOR', 'strategy': 'iqr', 'threshold': 6.5}
20201017-160206	Info: feature_selector {'k': 80, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'False', 'use_select_best_k': 'False'}
20201017-160206	Info: normalizer {'fit_on': 'train', 'name': 'robustscaler'}
20201017-160206	Info: regression {'name': 'xgb'}
20201017-160206	Info: 
----------------------------------------
20201017-160206	Info: Start fit model
20201017-160206	Info: Stratified split
20201017-160206	Info: The number of samples for each 'age/class' are:
    67  75  69  70  72  73  68  74  66  71  65  77  63  78  76  79  64  81  62  60  80  61  55  82  58  59  56  57  83  84  54  52  49  53  85  86  51  46  87  89  48  88  45  50  44  47  42  90  95  91  94  43  97
y  55  53  53  50  47  47  46  44  42  41  38  33  32  32  31  28  25  24  23  21  21  20  19  19  18  17  17  15  15  12  10  10  10   9   9   8   7   6   6   5   5   5   4   4   3   2   2   2   1   1   1   1   1
20201017-160206	Info: 'Age' with only one sample: [95 91 94 43 97]
20201017-160206	Info: x_train_split: (945, 699)
20201017-160206	Info: x_test_split: (105, 699)
20201017-160745	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=4,
             min_child_weight=1, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.9,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-160745	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}
20201017-160745	Info: Best training-score with mse loss: 0.47688854629803695
20201017-160745	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.476889        0.056376          0.956014         0.002272
23   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.475950        0.055387          0.998392         0.000216
1    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.471693        0.051342          0.785507         0.003488
31  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.471315        0.050922          0.747069         0.002065
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.468897        0.060637          0.954424         0.002389
28  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.468655        0.055002          0.747085         0.003459
7    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.468640        0.064251          0.783294         0.004534
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.468379        0.083766          0.971423         0.002567
4    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.467028        0.064053          0.784782         0.002671
34  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.467005        0.061236          0.747095         0.004088
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.466440        0.060707          0.996010         0.000656
19   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.460675        0.070890          0.998248         0.000192
5    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.460530        0.063189          0.777835         0.003768
11   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.460414        0.056249          0.970045         0.001806
10   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.459781        0.062977          0.971853         0.001795
3    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.459616        0.061559          0.782976         0.004107
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.459578        0.072345          0.969039         0.001595
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.459548        0.067580          0.994956         0.000433
32  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.459544        0.067493          0.742201         0.003612
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.459330        0.075680          0.952829         0.003026
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.458946        0.061869          0.952892         0.002180
27  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.458608        0.058980          0.747289         0.002747
47  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.458462        0.070661          0.996124         0.000367
35  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.458425        0.055624          0.740872         0.003458
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.456638        0.075399          0.953567         0.002810
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.455653        0.079902          0.951828         0.002755
30  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.455580        0.063395          0.746525         0.002715
33  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.454737        0.066064          0.747644         0.004382
0    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.454720        0.064805          0.782883         0.002342
29  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.454559        0.066533          0.741638         0.003414
20201017-160745	Info: R2 Score achieved on training set: 0.9471638291621839
20201017-160745	Info: R2 Score achieved on test set: 0.5115721737119729
20201017-160745	Info: Start normalizer
20201017-160745	Info: 
--------------------------------------
20201017-160745	Info: Iteration 47
20201017-160745	Info: imputer {'name': 'median'}
20201017-160745	Info: outlier {'fit_on': 'test', 'name': 'customOR', 'strategy': 'iqr', 'threshold': 6.5}
20201017-160745	Info: feature_selector {'k': 80, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'False', 'use_select_best_k': 'False'}
20201017-160745	Info: normalizer {'fit_on': 'test', 'name': 'robustscaler'}
20201017-160745	Info: regression {'name': 'xgb'}
20201017-160745	Info: 
----------------------------------------
20201017-160745	Info: Start fit model
20201017-160745	Info: Stratified split
20201017-160745	Info: The number of samples for each 'age/class' are:
    67  75  69  70  72  73  68  74  66  71  65  77  63  78  76  79  64  81  62  60  80  61  55  82  58  59  56  57  83  84  54  52  49  53  85  86  51  46  87  89  48  88  45  50  44  47  42  90  95  91  94  43  97
y  55  53  53  50  47  47  46  44  42  41  38  33  32  32  31  28  25  24  23  21  21  20  19  19  18  17  17  15  15  12  10  10  10   9   9   8   7   6   6   5   5   5   4   4   3   2   2   2   1   1   1   1   1
20201017-160745	Info: 'Age' with only one sample: [95 91 94 43 97]
20201017-160745	Info: x_train_split: (945, 699)
20201017-160745	Info: x_test_split: (105, 699)
20201017-161323	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=4,
             min_child_weight=1, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.9,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-161323	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}
20201017-161323	Info: Best training-score with mse loss: 0.47688854629803695
20201017-161323	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.476889        0.056376          0.956014         0.002272
23   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.475950        0.055387          0.998392         0.000216
1    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.471693        0.051342          0.785507         0.003488
31  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.471315        0.050922          0.747069         0.002065
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.468897        0.060637          0.954424         0.002389
28  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.468655        0.055002          0.747085         0.003459
7    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.468640        0.064251          0.783294         0.004534
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.468379        0.083766          0.971423         0.002567
4    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.467028        0.064053          0.784782         0.002671
34  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.467005        0.061236          0.747095         0.004088
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.466440        0.060707          0.996010         0.000656
19   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.460675        0.070890          0.998248         0.000192
5    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.460530        0.063189          0.777835         0.003768
11   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.460414        0.056249          0.970045         0.001806
10   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.459781        0.062977          0.971853         0.001795
3    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.459616        0.061559          0.782976         0.004107
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.459578        0.072345          0.969039         0.001595
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.459548        0.067580          0.994956         0.000433
32  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.459544        0.067493          0.742201         0.003612
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.459330        0.075680          0.952829         0.003026
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.458946        0.061869          0.952892         0.002180
27  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.458608        0.058980          0.747289         0.002747
47  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.458462        0.070661          0.996124         0.000367
35  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.458425        0.055624          0.740872         0.003458
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.456638        0.075399          0.953567         0.002810
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.455653        0.079902          0.951828         0.002755
30  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.455580        0.063395          0.746525         0.002715
33  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.454737        0.066064          0.747644         0.004382
0    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.454720        0.064805          0.782883         0.002342
29  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.454559        0.066533          0.741638         0.003414
20201017-161323	Info: R2 Score achieved on training set: 0.9471638291621839
20201017-161323	Info: R2 Score achieved on test set: 0.5115721737119729
20201017-161323	Info: Start outlier detection
20201017-161324	Info: Nr. of outliers removed: 100
20201017-161324	Info: Feature Selection
20201017-161324	Info: 
Remove constant features:
20201017-161324	Info: Following columns are constant: [193, 297, 339, 629]
20201017-161324	Info: Variance Threshold  0.0  -> nr of features:  828
20201017-161324	Info: Removed: 4 features
20201017-161324	Info: 
Remove constant features:
20201017-161324	Info: Following columns are constant: [1, 2, 6, 9, 16, 34, 50, 78, 82, 83, 145, 153, 166, 194, 205, 231, 255, 262, 265, 268, 315, 333, 360, 361, 371, 375, 376, 396, 419, 446, 451, 477, 478, 497, 502, 524, 583, 585, 606, 624, 635, 641, 660, 675, 680, 696, 715, 717, 725, 731, 743, 751, 758, 774, 807]
20201017-161324	Info: Variance Threshold  0.01  -> nr of features:  773
20201017-161324	Info: Removed: 55 features
20201017-161324	Info: 
Remove Correlated Features:
20201017-161330	Info: Following features are removed: {256, 130, 386, 643, 520, 137, 765, 268, 270, 271, 527, 407, 665, 156, 542, 671, 424, 682, 558, 305, 179, 691, 183, 567, 573, 318, 701, 449, 450, 67, 452, 705, 462, 208, 83, 467, 598, 217, 602, 347, 91, 734, 223, 354, 615, 745, 622, 369, 497, 498, 761, 764, 637, 254}
20201017-161330	Info: Nr. of features remvoed: 54
20201017-161330	Info: Correlation Threshold  0.8  -> nr of features:  719
20201017-161330	Info: 
Select Best k features:
20201017-161337	Info: SelectKBest k = 100  -> nr features:  100
20201017-161337	Info: 
Select Best Based on Impurity
20201017-161337	Info: TreeBasedFeatureSelector  -> nr features:  45
20201017-161337	Info: Start normalizer
20201017-161337	Info: 
--------------------------------------
20201017-161337	Info: Iteration 48
20201017-161337	Info: imputer {'name': 'median'}
20201017-161337	Info: outlier {'fit_on': 'test', 'name': 'lof', 'strategy': 'iqr', 'threshold': 6.5}
20201017-161337	Info: feature_selector {'k': 100, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'True', 'use_select_best_k': 'True'}
20201017-161337	Info: normalizer {'fit_on': 'train', 'name': 'robustscaler'}
20201017-161337	Info: regression {'name': 'xgb'}
20201017-161337	Info: 
----------------------------------------
20201017-161337	Info: Start fit model
20201017-161337	Info: Stratified split
20201017-161337	Warning: Indexes do not match, probably because of outlier removal!
20201017-161337	Info: The number of samples for each 'age/class' are:
    67  69  75  73  72  68  70  74  66  71  78  65  76  77  79  63  81  64  82  60  62  80  83  61  55  58  59  84  56  87  86  85  57  52  49  53  54  48  50  51  88  89  95  92  46  45  42  90  47  91  94  43  97
y  55  54  51  51  50  49  47  47  44  42  38  36  35  35  34  33  30  25  24  23  22  21  20  19  19  17  16  15  15  14  14  14  12  11  10   8   8   8   8   7   6   5   3   3   3   2   2   2   1   1   1   1   1
20201017-161337	Info: 'Age' with only one sample: [47 91 94 43 97]
20201017-161337	Info: x_train_split: (1001, 45)
20201017-161337	Info: x_test_split: (111, 45)
20201017-161403	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=6,
             min_child_weight=3, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1.0,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-161403	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}
20201017-161403	Info: Best training-score with mse loss: 0.5635954759446193
20201017-161403	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.563595        0.058410          0.974884         0.002217
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.561927        0.056010          0.972465         0.002547
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.561016        0.068409          0.975015         0.002122
9    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.559104        0.055910          0.928688         0.002641
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.558147        0.063774          0.975016         0.001929
21   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.557691        0.062386          0.987301         0.001123
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.556652        0.069413          0.902136         0.004787
24   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.553201        0.070389          0.985829         0.001470
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.553148        0.053783          0.924494         0.003289
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.552114        0.063020          0.908166         0.001977
12   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.551553        0.059743          0.928341         0.003349
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.551493        0.056348          0.976061         0.002676
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.551471        0.060255          0.896766         0.004124
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.550703        0.061045          0.904220         0.003629
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.549895        0.058655          0.922676         0.004137
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.549624        0.051516          0.898853         0.004088
26   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.548207        0.051236          0.985872         0.002161
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.547853        0.075894          0.978089         0.001718
47  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.547118        0.058715          0.975516         0.002431
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.546793        0.058396          0.976319         0.002233
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.545854        0.065056          0.906864         0.002423
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.545705        0.076320          0.931896         0.003348
19   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.545680        0.070298          0.989242         0.001056
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.543178        0.049914          0.987111         0.001817
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.540505        0.064931          0.978719         0.001684
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.540141        0.068209          0.903179         0.003470
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.539936        0.069158          0.900897         0.002389
23   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.539423        0.073353          0.986178         0.001825
18   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.538480        0.054677          0.987542         0.000995
20   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.538214        0.061739          0.985234         0.001726
20201017-161403	Info: R2 Score achieved on training set: 0.9740601800451808
20201017-161403	Info: R2 Score achieved on test set: 0.6086864404406412
20201017-161403	Info: Start normalizer
20201017-161403	Info: 
--------------------------------------
20201017-161403	Info: Iteration 49
20201017-161403	Info: imputer {'name': 'median'}
20201017-161403	Info: outlier {'fit_on': 'test', 'name': 'lof', 'strategy': 'iqr', 'threshold': 6.5}
20201017-161403	Info: feature_selector {'k': 100, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'True', 'use_select_best_k': 'True'}
20201017-161403	Info: normalizer {'fit_on': 'test', 'name': 'robustscaler'}
20201017-161403	Info: regression {'name': 'xgb'}
20201017-161403	Info: 
----------------------------------------
20201017-161403	Info: Start fit model
20201017-161403	Info: Stratified split
20201017-161403	Info: The number of samples for each 'age/class' are:
    67  69  75  73  72  68  70  74  66  71  78  65  76  77  79  63  81  64  82  60  62  80  83  61  55  58  59  84  56  87  86  85  57  52  49  53  54  48  50  51  88  89  95  92  46  45  42  90  47  91  94  43  97
y  55  54  51  51  50  49  47  47  44  42  38  36  35  35  34  33  30  25  24  23  22  21  20  19  19  17  16  15  15  14  14  14  12  11  10   8   8   8   8   7   6   5   3   3   3   2   2   2   1   1   1   1   1
20201017-161403	Info: 'Age' with only one sample: [47 91 94 43 97]
20201017-161403	Info: x_train_split: (1001, 45)
20201017-161403	Info: x_test_split: (111, 45)
20201017-161429	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=6,
             min_child_weight=3, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1.0,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-161429	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}
20201017-161429	Info: Best training-score with mse loss: 0.5635954759446193
20201017-161429	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.563595        0.058410          0.974884         0.002217
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.561927        0.056010          0.972465         0.002547
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.561016        0.068409          0.975015         0.002122
9    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.559104        0.055910          0.928688         0.002641
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.558147        0.063774          0.975016         0.001929
21   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.557691        0.062386          0.987301         0.001123
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.556652        0.069413          0.902136         0.004787
24   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.553201        0.070389          0.985829         0.001470
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.553148        0.053783          0.924494         0.003289
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.552114        0.063020          0.908166         0.001977
12   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.551553        0.059743          0.928341         0.003349
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.551493        0.056348          0.976061         0.002676
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.551471        0.060255          0.896766         0.004124
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.550703        0.061045          0.904220         0.003629
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.549895        0.058655          0.922676         0.004137
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.549624        0.051516          0.898853         0.004088
26   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.548207        0.051236          0.985872         0.002161
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.547853        0.075894          0.978089         0.001718
47  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.547118        0.058715          0.975516         0.002431
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.546793        0.058396          0.976319         0.002233
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.545854        0.065056          0.906864         0.002423
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.545705        0.076320          0.931896         0.003348
19   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.545680        0.070298          0.989242         0.001056
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.543178        0.049914          0.987111         0.001817
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.540505        0.064931          0.978719         0.001684
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.540141        0.068209          0.903179         0.003470
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.539936        0.069158          0.900897         0.002389
23   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.539423        0.073353          0.986178         0.001825
18   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.538480        0.054677          0.987542         0.000995
20   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.538214        0.061739          0.985234         0.001726
20201017-161429	Info: R2 Score achieved on training set: 0.9740601800451808
20201017-161429	Info: R2 Score achieved on test set: 0.6086864404406412
20201017-161429	Info: Feature Selection
20201017-161429	Info: 
Remove constant features:
20201017-161429	Info: Following columns are constant: [193, 297, 339, 629]
20201017-161429	Info: Variance Threshold  0.0  -> nr of features:  828
20201017-161429	Info: Removed: 4 features
20201017-161429	Info: 
Remove constant features:
20201017-161429	Info: Following columns are constant: [1, 2, 6, 9, 16, 34, 50, 78, 82, 83, 145, 153, 166, 194, 205, 231, 255, 262, 265, 268, 315, 333, 360, 361, 371, 375, 376, 396, 419, 446, 451, 477, 478, 497, 502, 524, 583, 585, 606, 624, 635, 641, 660, 675, 680, 696, 715, 717, 725, 731, 743, 751, 758, 774, 807]
20201017-161429	Info: Variance Threshold  0.01  -> nr of features:  773
20201017-161429	Info: Removed: 55 features
20201017-161429	Info: 
Remove Correlated Features:
20201017-161435	Info: Following features are removed: {256, 130, 386, 643, 520, 137, 765, 268, 270, 271, 527, 407, 665, 156, 542, 671, 424, 682, 558, 305, 179, 691, 183, 567, 573, 318, 701, 449, 450, 67, 452, 705, 462, 208, 83, 467, 598, 217, 602, 347, 91, 734, 223, 354, 615, 745, 622, 369, 497, 498, 761, 764, 637, 254}
20201017-161435	Info: Nr. of features remvoed: 54
20201017-161435	Info: Correlation Threshold  0.8  -> nr of features:  719
20201017-161435	Info: 
Select Best Based on Impurity
20201017-161436	Info: TreeBasedFeatureSelector  -> nr features:  345
20201017-161436	Info: Start normalizer
20201017-161436	Info: 
--------------------------------------
20201017-161436	Info: Iteration 50
20201017-161436	Info: imputer {'name': 'median'}
20201017-161436	Info: outlier {'fit_on': 'test', 'name': 'lof', 'strategy': 'iqr', 'threshold': 6.5}
20201017-161436	Info: feature_selector {'k': 100, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'True', 'use_select_best_k': 'False'}
20201017-161436	Info: normalizer {'fit_on': 'train', 'name': 'robustscaler'}
20201017-161436	Info: regression {'name': 'xgb'}
20201017-161436	Info: 
----------------------------------------
20201017-161436	Info: Start fit model
20201017-161436	Info: Stratified split
20201017-161436	Info: The number of samples for each 'age/class' are:
    67  69  75  73  72  68  70  74  66  71  78  65  76  77  79  63  81  64  82  60  62  80  83  61  55  58  59  84  56  87  86  85  57  52  49  53  54  48  50  51  88  89  95  92  46  45  42  90  47  91  94  43  97
y  55  54  51  51  50  49  47  47  44  42  38  36  35  35  34  33  30  25  24  23  22  21  20  19  19  17  16  15  15  14  14  14  12  11  10   8   8   8   8   7   6   5   3   3   3   2   2   2   1   1   1   1   1
20201017-161436	Info: 'Age' with only one sample: [47 91 94 43 97]
20201017-161436	Info: x_train_split: (1001, 345)
20201017-161436	Info: x_test_split: (111, 345)
20201017-161734	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=6,
             min_child_weight=2, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.8,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-161734	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}
20201017-161734	Info: Best training-score with mse loss: 0.5584668757213164
20201017-161734	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.558467        0.052064          0.991919         0.001033
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.557514        0.051184          0.948424         0.002573
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.557217        0.058154          0.992202         0.000701
6    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.556062        0.055965          0.798580         0.005315
0    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.555374        0.055103          0.799452         0.005269
33  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.554356        0.048465          0.766709         0.005839
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.554116        0.056972          0.948133         0.003307
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.552612        0.041107          0.961530         0.003715
30  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.552566        0.053315          0.768350         0.004896
27  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.551863        0.049197          0.769450         0.005515
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.550308        0.055890          0.946315         0.003508
5    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.550243        0.045524          0.793956         0.006381
21   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.548847        0.052915          0.996730         0.000421
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.548823        0.054730          0.948720         0.003587
3    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.548794        0.051842          0.799046         0.004995
34  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.548156        0.052627          0.767500         0.006416
2    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.548043        0.045408          0.793889         0.006594
28  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.547729        0.051432          0.768387         0.005377
7    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.547188        0.059267          0.797938         0.005183
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.547106        0.046054          0.944566         0.004598
4    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.547103        0.055078          0.797776         0.005786
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.546967        0.059133          0.949529         0.002763
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.546878        0.057435          0.949615         0.003735
11   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.546374        0.049399          0.964039         0.003270
8    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.546173        0.056294          0.793175         0.005670
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.545875        0.050745          0.993618         0.000817
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.545380        0.047163          0.944436         0.004008
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.545082        0.054776          0.992935         0.000861
29  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.545005        0.054918          0.764408         0.005600
31  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.544986        0.050587          0.768095         0.005427
20201017-161734	Info: R2 Score achieved on training set: 0.9894323024772702
20201017-161734	Info: R2 Score achieved on test set: 0.5091145472508396
20201017-161734	Info: Start normalizer
20201017-161734	Info: 
--------------------------------------
20201017-161734	Info: Iteration 51
20201017-161734	Info: imputer {'name': 'median'}
20201017-161734	Info: outlier {'fit_on': 'test', 'name': 'lof', 'strategy': 'iqr', 'threshold': 6.5}
20201017-161734	Info: feature_selector {'k': 100, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'True', 'use_select_best_k': 'False'}
20201017-161734	Info: normalizer {'fit_on': 'test', 'name': 'robustscaler'}
20201017-161734	Info: regression {'name': 'xgb'}
20201017-161734	Info: 
----------------------------------------
20201017-161734	Info: Start fit model
20201017-161734	Info: Stratified split
20201017-161734	Info: The number of samples for each 'age/class' are:
    67  69  75  73  72  68  70  74  66  71  78  65  76  77  79  63  81  64  82  60  62  80  83  61  55  58  59  84  56  87  86  85  57  52  49  53  54  48  50  51  88  89  95  92  46  45  42  90  47  91  94  43  97
y  55  54  51  51  50  49  47  47  44  42  38  36  35  35  34  33  30  25  24  23  22  21  20  19  19  17  16  15  15  14  14  14  12  11  10   8   8   8   8   7   6   5   3   3   3   2   2   2   1   1   1   1   1
20201017-161734	Info: 'Age' with only one sample: [47 91 94 43 97]
20201017-161734	Info: x_train_split: (1001, 345)
20201017-161734	Info: x_test_split: (111, 345)
20201017-162033	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=6,
             min_child_weight=2, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.8,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-162033	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}
20201017-162033	Info: Best training-score with mse loss: 0.5584668757213164
20201017-162033	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.558467        0.052064          0.991919         0.001033
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.557514        0.051184          0.948424         0.002573
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.557210        0.058152          0.992202         0.000701
6    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.556062        0.055965          0.798580         0.005315
0    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.555374        0.055103          0.799452         0.005269
33  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.554356        0.048465          0.766709         0.005839
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.554116        0.056972          0.948133         0.003307
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.552572        0.041177          0.961530         0.003715
30  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.552566        0.053315          0.768350         0.004896
27  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.551863        0.049197          0.769450         0.005515
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.550308        0.055890          0.946315         0.003508
5    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.550243        0.045524          0.793956         0.006381
21   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.548847        0.052915          0.996730         0.000421
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.548823        0.054730          0.948720         0.003587
3    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.548794        0.051842          0.799046         0.004995
34  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.548156        0.052627          0.767500         0.006416
2    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.548043        0.045408          0.793889         0.006594
28  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.547729        0.051432          0.768387         0.005377
7    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.547188        0.059267          0.797938         0.005183
4    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.547103        0.055078          0.797776         0.005786
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.547088        0.046084          0.944566         0.004598
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.546967        0.059133          0.949529         0.002763
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.546878        0.057435          0.949615         0.003735
11   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.546346        0.049446          0.964039         0.003270
8    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.546173        0.056294          0.793175         0.005670
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.545875        0.050745          0.993618         0.000817
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.545380        0.047163          0.944436         0.004008
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.545082        0.054776          0.992935         0.000861
29  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.545005        0.054918          0.764408         0.005600
31  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.544986        0.050587          0.768095         0.005427
20201017-162033	Info: R2 Score achieved on training set: 0.9894323024772702
20201017-162033	Info: R2 Score achieved on test set: 0.5091145472508396
20201017-162033	Info: Feature Selection
20201017-162033	Info: 
Remove constant features:
20201017-162033	Info: Following columns are constant: [193, 297, 339, 629]
20201017-162033	Info: Variance Threshold  0.0  -> nr of features:  828
20201017-162033	Info: Removed: 4 features
20201017-162033	Info: 
Remove constant features:
20201017-162033	Info: Following columns are constant: [1, 2, 6, 9, 16, 34, 50, 78, 82, 83, 145, 153, 166, 194, 205, 231, 255, 262, 265, 268, 315, 333, 360, 361, 371, 375, 376, 396, 419, 446, 451, 477, 478, 497, 502, 524, 583, 585, 606, 624, 635, 641, 660, 675, 680, 696, 715, 717, 725, 731, 743, 751, 758, 774, 807]
20201017-162033	Info: Variance Threshold  0.01  -> nr of features:  773
20201017-162033	Info: Removed: 55 features
20201017-162033	Info: 
Remove Correlated Features:
20201017-162039	Info: Following features are removed: {256, 130, 386, 643, 520, 137, 765, 268, 270, 271, 527, 407, 665, 156, 542, 671, 424, 682, 558, 305, 179, 691, 183, 567, 573, 318, 701, 449, 450, 67, 452, 705, 462, 208, 83, 467, 598, 217, 602, 347, 91, 734, 223, 354, 615, 745, 622, 369, 497, 498, 761, 764, 637, 254}
20201017-162039	Info: Nr. of features remvoed: 54
20201017-162039	Info: Correlation Threshold  0.8  -> nr of features:  719
20201017-162039	Info: 
Select Best k features:
20201017-162046	Info: SelectKBest k = 100  -> nr features:  100
20201017-162046	Info: Start normalizer
20201017-162046	Info: 
--------------------------------------
20201017-162046	Info: Iteration 52
20201017-162046	Info: imputer {'name': 'median'}
20201017-162046	Info: outlier {'fit_on': 'test', 'name': 'lof', 'strategy': 'iqr', 'threshold': 6.5}
20201017-162046	Info: feature_selector {'k': 100, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'False', 'use_select_best_k': 'True'}
20201017-162046	Info: normalizer {'fit_on': 'train', 'name': 'robustscaler'}
20201017-162046	Info: regression {'name': 'xgb'}
20201017-162046	Info: 
----------------------------------------
20201017-162046	Info: Start fit model
20201017-162046	Info: Stratified split
20201017-162046	Info: The number of samples for each 'age/class' are:
    67  69  75  73  72  68  70  74  66  71  78  65  76  77  79  63  81  64  82  60  62  80  83  61  55  58  59  84  56  87  86  85  57  52  49  53  54  48  50  51  88  89  95  92  46  45  42  90  47  91  94  43  97
y  55  54  51  51  50  49  47  47  44  42  38  36  35  35  34  33  30  25  24  23  22  21  20  19  19  17  16  15  15  14  14  14  12  11  10   8   8   8   8   7   6   5   3   3   3   2   2   2   1   1   1   1   1
20201017-162046	Info: 'Age' with only one sample: [47 91 94 43 97]
20201017-162046	Info: x_train_split: (1001, 100)
20201017-162046	Info: x_test_split: (111, 100)
20201017-162140	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=6,
             min_child_weight=3, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.8,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-162140	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}
20201017-162140	Info: Best training-score with mse loss: 0.596021643481888
20201017-162141	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.596022        0.039480          0.983240         0.001198
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.588085        0.048686          0.925590         0.002713
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.587562        0.043577          0.984453         0.001668
21   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.584856        0.054060          0.993280         0.000774
24   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.584071        0.045484          0.992728         0.000797
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.582753        0.051853          0.986665         0.001328
9    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.582663        0.047489          0.948719         0.002692
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.582558        0.051122          0.985520         0.001121
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.582359        0.043048          0.993970         0.000497
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.581466        0.047673          0.985628         0.001189
12   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.581364        0.051575          0.948758         0.002663
18   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.579993        0.037442          0.993535         0.000866
22   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.577692        0.036410          0.994489         0.000543
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.576955        0.037984          0.922149         0.003473
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.576422        0.044975          0.949918         0.002666
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.576090        0.038734          0.923493         0.002848
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.575051        0.043864          0.948272         0.002365
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.574772        0.047139          0.926680         0.003067
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.574735        0.048636          0.927504         0.002104
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.574028        0.035748          0.943049         0.002783
47  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.573622        0.037192          0.985909         0.001493
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.572733        0.044993          0.985880         0.001305
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.571700        0.042602          0.924820         0.003206
16   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.571485        0.036070          0.947692         0.002704
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.571427        0.048824          0.987174         0.001508
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.571227        0.044764          0.927251         0.002052
23   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.570925        0.046968          0.993347         0.001041
14   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.570172        0.038040          0.944880         0.003529
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.570017        0.031828          0.923928         0.003196
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.569939        0.047770          0.985539         0.001588
20201017-162141	Info: R2 Score achieved on training set: 0.9806132175983886
20201017-162141	Info: R2 Score achieved on test set: 0.5913208953114256
20201017-162141	Info: Start normalizer
20201017-162141	Info: 
--------------------------------------
20201017-162141	Info: Iteration 53
20201017-162141	Info: imputer {'name': 'median'}
20201017-162141	Info: outlier {'fit_on': 'test', 'name': 'lof', 'strategy': 'iqr', 'threshold': 6.5}
20201017-162141	Info: feature_selector {'k': 100, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'False', 'use_select_best_k': 'True'}
20201017-162141	Info: normalizer {'fit_on': 'test', 'name': 'robustscaler'}
20201017-162141	Info: regression {'name': 'xgb'}
20201017-162141	Info: 
----------------------------------------
20201017-162141	Info: Start fit model
20201017-162141	Info: Stratified split
20201017-162141	Info: The number of samples for each 'age/class' are:
    67  69  75  73  72  68  70  74  66  71  78  65  76  77  79  63  81  64  82  60  62  80  83  61  55  58  59  84  56  87  86  85  57  52  49  53  54  48  50  51  88  89  95  92  46  45  42  90  47  91  94  43  97
y  55  54  51  51  50  49  47  47  44  42  38  36  35  35  34  33  30  25  24  23  22  21  20  19  19  17  16  15  15  14  14  14  12  11  10   8   8   8   8   7   6   5   3   3   3   2   2   2   1   1   1   1   1
20201017-162141	Info: 'Age' with only one sample: [47 91 94 43 97]
20201017-162141	Info: x_train_split: (1001, 100)
20201017-162141	Info: x_test_split: (111, 100)
20201017-162235	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=6,
             min_child_weight=3, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.8,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-162235	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}
20201017-162235	Info: Best training-score with mse loss: 0.596021643481888
20201017-162235	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.596022        0.039480          0.983240         0.001198
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.588085        0.048686          0.925590         0.002713
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.587562        0.043577          0.984453         0.001668
21   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.584856        0.054060          0.993280         0.000774
24   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.584071        0.045484          0.992728         0.000797
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.582753        0.051853          0.986665         0.001328
9    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.582663        0.047489          0.948719         0.002692
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.582558        0.051122          0.985520         0.001121
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.582359        0.043048          0.993970         0.000497
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.581466        0.047673          0.985628         0.001189
12   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.581364        0.051575          0.948758         0.002663
18   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.579993        0.037442          0.993535         0.000866
22   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.577692        0.036410          0.994489         0.000543
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.576955        0.037984          0.922149         0.003473
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.576422        0.044975          0.949918         0.002666
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.576090        0.038734          0.923493         0.002848
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.575051        0.043864          0.948272         0.002365
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.574772        0.047139          0.926680         0.003067
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.574735        0.048636          0.927504         0.002104
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.574028        0.035748          0.943049         0.002783
47  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.573622        0.037192          0.985909         0.001493
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.572733        0.044993          0.985880         0.001305
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.571700        0.042602          0.924820         0.003206
16   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.571485        0.036070          0.947692         0.002704
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.571427        0.048824          0.987174         0.001508
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.571227        0.044764          0.927251         0.002052
23   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.570925        0.046968          0.993347         0.001041
14   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.570172        0.038040          0.944880         0.003529
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.570017        0.031828          0.923928         0.003196
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.569939        0.047770          0.985539         0.001588
20201017-162235	Info: R2 Score achieved on training set: 0.9806132175983886
20201017-162235	Info: R2 Score achieved on test set: 0.5913208953114256
20201017-162235	Info: Feature Selection
20201017-162235	Info: 
Remove constant features:
20201017-162235	Info: Following columns are constant: [193, 297, 339, 629]
20201017-162235	Info: Variance Threshold  0.0  -> nr of features:  828
20201017-162235	Info: Removed: 4 features
20201017-162235	Info: 
Remove constant features:
20201017-162235	Info: Following columns are constant: [1, 2, 6, 9, 16, 34, 50, 78, 82, 83, 145, 153, 166, 194, 205, 231, 255, 262, 265, 268, 315, 333, 360, 361, 371, 375, 376, 396, 419, 446, 451, 477, 478, 497, 502, 524, 583, 585, 606, 624, 635, 641, 660, 675, 680, 696, 715, 717, 725, 731, 743, 751, 758, 774, 807]
20201017-162235	Info: Variance Threshold  0.01  -> nr of features:  773
20201017-162235	Info: Removed: 55 features
20201017-162235	Info: 
Remove Correlated Features:
20201017-162241	Info: Following features are removed: {256, 130, 386, 643, 520, 137, 765, 268, 270, 271, 527, 407, 665, 156, 542, 671, 424, 682, 558, 305, 179, 691, 183, 567, 573, 318, 701, 449, 450, 67, 452, 705, 462, 208, 83, 467, 598, 217, 602, 347, 91, 734, 223, 354, 615, 745, 622, 369, 497, 498, 761, 764, 637, 254}
20201017-162241	Info: Nr. of features remvoed: 54
20201017-162241	Info: Correlation Threshold  0.8  -> nr of features:  719
20201017-162241	Info: Start normalizer
20201017-162241	Info: 
--------------------------------------
20201017-162241	Info: Iteration 54
20201017-162241	Info: imputer {'name': 'median'}
20201017-162241	Info: outlier {'fit_on': 'test', 'name': 'lof', 'strategy': 'iqr', 'threshold': 6.5}
20201017-162241	Info: feature_selector {'k': 100, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'False', 'use_select_best_k': 'False'}
20201017-162241	Info: normalizer {'fit_on': 'train', 'name': 'robustscaler'}
20201017-162241	Info: regression {'name': 'xgb'}
20201017-162241	Info: 
----------------------------------------
20201017-162241	Info: Start fit model
20201017-162241	Info: Stratified split
20201017-162241	Info: The number of samples for each 'age/class' are:
    67  69  75  73  72  68  70  74  66  71  78  65  76  77  79  63  81  64  82  60  62  80  83  61  55  58  59  84  56  87  86  85  57  52  49  53  54  48  50  51  88  89  95  92  46  45  42  90  47  91  94  43  97
y  55  54  51  51  50  49  47  47  44  42  38  36  35  35  34  33  30  25  24  23  22  21  20  19  19  17  16  15  15  14  14  14  12  11  10   8   8   8   8   7   6   5   3   3   3   2   2   2   1   1   1   1   1
20201017-162241	Info: 'Age' with only one sample: [47 91 94 43 97]
20201017-162241	Info: x_train_split: (1001, 719)
20201017-162241	Info: x_test_split: (111, 719)
20201017-162849	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=4,
             min_child_weight=3, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.8,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-162849	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}
20201017-162849	Info: Best training-score with mse loss: 0.5714017610891575
20201017-162849	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.571402        0.055545          0.960583         0.001725
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.571252        0.045320          0.961366         0.001876
9    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.561109        0.043345          0.977036         0.001538
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.560195        0.055955          0.964264         0.002036
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.559168        0.041926          0.976541         0.001590
6    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.558191        0.053176          0.817278         0.004285
30  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.557976        0.041979          0.786343         0.004514
4    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.557373        0.044295          0.816777         0.003687
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.556407        0.050655          0.963165         0.001531
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.554721        0.047456          0.994899         0.000575
7    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.554665        0.044913          0.816037         0.003982
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.554447        0.034211          0.961678         0.002362
1    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.554256        0.046374          0.816581         0.003387
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.553764        0.045251          0.961319         0.002202
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.553736        0.044759          0.994897         0.000555
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.553454        0.037785          0.961419         0.002204
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.552801        0.051681          0.996026         0.000445
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.552719        0.041525          0.996181         0.000456
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.552612        0.050625          0.963161         0.002222
27  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.552561        0.041000          0.786360         0.004280
3    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.552250        0.049270          0.817767         0.004373
0    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.551498        0.051776          0.818358         0.003674
21   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.550718        0.059638          0.998072         0.000253
12   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.550419        0.055075          0.976329         0.001673
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.550011        0.047436          0.961809         0.001768
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.549774        0.043840          0.996428         0.000548
10   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.549353        0.039503          0.978203         0.001549
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.549277        0.054963          0.996365         0.000367
5    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.549047        0.042305          0.812533         0.004719
33  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.548980        0.043818          0.786294         0.004382
20201017-162849	Info: R2 Score achieved on training set: 0.9573789529100666
20201017-162849	Info: R2 Score achieved on test set: 0.593056128617266
20201017-162849	Info: Start normalizer
20201017-162849	Info: 
--------------------------------------
20201017-162849	Info: Iteration 55
20201017-162849	Info: imputer {'name': 'median'}
20201017-162849	Info: outlier {'fit_on': 'test', 'name': 'lof', 'strategy': 'iqr', 'threshold': 6.5}
20201017-162849	Info: feature_selector {'k': 100, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'False', 'use_select_best_k': 'False'}
20201017-162849	Info: normalizer {'fit_on': 'test', 'name': 'robustscaler'}
20201017-162849	Info: regression {'name': 'xgb'}
20201017-162849	Info: 
----------------------------------------
20201017-162849	Info: Start fit model
20201017-162849	Info: Stratified split
20201017-162849	Info: The number of samples for each 'age/class' are:
    67  69  75  73  72  68  70  74  66  71  78  65  76  77  79  63  81  64  82  60  62  80  83  61  55  58  59  84  56  87  86  85  57  52  49  53  54  48  50  51  88  89  95  92  46  45  42  90  47  91  94  43  97
y  55  54  51  51  50  49  47  47  44  42  38  36  35  35  34  33  30  25  24  23  22  21  20  19  19  17  16  15  15  14  14  14  12  11  10   8   8   8   8   7   6   5   3   3   3   2   2   2   1   1   1   1   1
20201017-162849	Info: 'Age' with only one sample: [47 91 94 43 97]
20201017-162849	Info: x_train_split: (1001, 719)
20201017-162849	Info: x_test_split: (111, 719)
20201017-163457	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=4,
             min_child_weight=3, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.8,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-163457	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}
20201017-163457	Info: Best training-score with mse loss: 0.5714017610891575
20201017-163457	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.571402        0.055545          0.960583         0.001725
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.571252        0.045320          0.961366         0.001876
9    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.561109        0.043345          0.977036         0.001538
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.560195        0.055955          0.964264         0.002036
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.559168        0.041926          0.976541         0.001590
6    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.558191        0.053176          0.817278         0.004285
30  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.557976        0.041979          0.786343         0.004514
4    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.557373        0.044295          0.816777         0.003687
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.556407        0.050655          0.963165         0.001531
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.554721        0.047456          0.994899         0.000575
7    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.554665        0.044913          0.816037         0.003982
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.554429        0.034238          0.961678         0.002362
1    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.554256        0.046374          0.816581         0.003387
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.553764        0.045251          0.961319         0.002202
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.553736        0.044759          0.994897         0.000555
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.553454        0.037785          0.961419         0.002204
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.552801        0.051681          0.996026         0.000445
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.552719        0.041525          0.996181         0.000456
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.552612        0.050625          0.963161         0.002222
27  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.552561        0.041000          0.786360         0.004280
3    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.552250        0.049270          0.817767         0.004373
0    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.551498        0.051776          0.818358         0.003674
21   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.550718        0.059638          0.998072         0.000253
12   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.550419        0.055075          0.976329         0.001673
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.550011        0.047436          0.961809         0.001768
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.549772        0.043841          0.996428         0.000548
10   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.549353        0.039503          0.978203         0.001549
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.549277        0.054963          0.996365         0.000367
5    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.549047        0.042305          0.812533         0.004719
33  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.548980        0.043818          0.786294         0.004382
20201017-163457	Info: R2 Score achieved on training set: 0.9573789529100666
20201017-163457	Info: R2 Score achieved on test set: 0.593056128617266
20201017-163457	Info: Feature Selection
20201017-163457	Info: 
Remove constant features:
20201017-163457	Info: Following columns are constant: [193, 297, 339, 629]
20201017-163457	Info: Variance Threshold  0.0  -> nr of features:  828
20201017-163457	Info: Removed: 4 features
20201017-163457	Info: 
Remove constant features:
20201017-163457	Info: Following columns are constant: [1, 2, 6, 9, 16, 34, 50, 78, 82, 83, 145, 153, 166, 194, 205, 231, 255, 262, 265, 268, 315, 333, 360, 361, 371, 375, 376, 396, 419, 446, 451, 477, 478, 497, 502, 524, 583, 585, 606, 624, 635, 641, 660, 675, 680, 696, 715, 717, 725, 731, 743, 751, 758, 774, 807]
20201017-163457	Info: Variance Threshold  0.01  -> nr of features:  773
20201017-163457	Info: Removed: 55 features
20201017-163457	Info: 
Remove Correlated Features:
20201017-163504	Info: Following features are removed: {256, 130, 386, 643, 520, 137, 765, 268, 270, 271, 527, 407, 665, 156, 542, 671, 424, 682, 558, 305, 179, 691, 183, 567, 573, 318, 701, 449, 450, 67, 452, 705, 462, 208, 83, 467, 598, 217, 602, 347, 91, 734, 223, 354, 615, 745, 622, 369, 497, 498, 761, 764, 637, 254}
20201017-163504	Info: Nr. of features remvoed: 54
20201017-163504	Info: Correlation Threshold  0.8  -> nr of features:  719
20201017-163504	Info: 
Select Best k features:
20201017-163511	Info: SelectKBest k = 80  -> nr features:  80
20201017-163511	Info: 
Select Best Based on Impurity
20201017-163511	Info: TreeBasedFeatureSelector  -> nr features:  34
20201017-163511	Info: Start normalizer
20201017-163511	Info: 
--------------------------------------
20201017-163511	Info: Iteration 56
20201017-163511	Info: imputer {'name': 'median'}
20201017-163511	Info: outlier {'fit_on': 'test', 'name': 'lof', 'strategy': 'iqr', 'threshold': 6.5}
20201017-163511	Info: feature_selector {'k': 80, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'True', 'use_select_best_k': 'True'}
20201017-163511	Info: normalizer {'fit_on': 'train', 'name': 'robustscaler'}
20201017-163511	Info: regression {'name': 'xgb'}
20201017-163511	Info: 
----------------------------------------
20201017-163511	Info: Start fit model
20201017-163511	Info: Stratified split
20201017-163511	Info: The number of samples for each 'age/class' are:
    67  69  75  73  72  68  70  74  66  71  78  65  76  77  79  63  81  64  82  60  62  80  83  61  55  58  59  84  56  87  86  85  57  52  49  53  54  48  50  51  88  89  95  92  46  45  42  90  47  91  94  43  97
y  55  54  51  51  50  49  47  47  44  42  38  36  35  35  34  33  30  25  24  23  22  21  20  19  19  17  16  15  15  14  14  14  12  11  10   8   8   8   8   7   6   5   3   3   3   2   2   2   1   1   1   1   1
20201017-163511	Info: 'Age' with only one sample: [47 91 94 43 97]
20201017-163511	Info: x_train_split: (1001, 34)
20201017-163511	Info: x_test_split: (111, 34)
20201017-163531	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.1, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.100000001, max_delta_step=0, max_depth=6,
             min_child_weight=3, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.9,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-163531	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}
20201017-163531	Info: Best training-score with mse loss: 0.5586814590031637
20201017-163531	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.558681        0.045340          0.983853         0.001416
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.556411        0.061210          0.967457         0.001957
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.552622        0.053320          0.887156         0.002623
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.551169        0.045764          0.970903         0.002060
24   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.550876        0.051416          0.981465         0.001944
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.548180        0.060739          0.914666         0.003171
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.547691        0.054991          0.888643         0.003504
6    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.545879        0.052764          0.742041         0.006249
3    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.543896        0.051634          0.741620         0.006631
12   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.543874        0.069960          0.915177         0.004152
22   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.542868        0.053909          0.985329         0.001321
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.542775        0.045918          0.918615         0.003296
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.542723        0.048580          0.889724         0.005192
33  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.542719        0.050655          0.717187         0.006852
21   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.540306        0.066249          0.983396         0.001720
16   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.540037        0.057081          0.916252         0.002852
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.539862        0.049467          0.973146         0.001551
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.539791        0.051711          0.888025         0.004384
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.539640        0.055552          0.967919         0.004448
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.539120        0.060279          0.893131         0.003393
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.538836        0.053548          0.970577         0.002819
30  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.537598        0.050504          0.718893         0.005976
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.536913        0.052448          0.891546         0.002528
10   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.536661        0.044236          0.920818         0.003187
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.536077        0.056353          0.897293         0.003681
26   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.536006        0.056034          0.982037         0.002209
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.535247        0.043740          0.914826         0.004054
0    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.534801        0.050735          0.742974         0.005420
34  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.534523        0.049840          0.720254         0.004783
7    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.534125        0.053459          0.742728         0.004298
20201017-163531	Info: R2 Score achieved on training set: 0.9800431672486868
20201017-163531	Info: R2 Score achieved on test set: 0.5705661165022669
20201017-163531	Info: Start normalizer
20201017-163531	Info: 
--------------------------------------
20201017-163531	Info: Iteration 57
20201017-163531	Info: imputer {'name': 'median'}
20201017-163531	Info: outlier {'fit_on': 'test', 'name': 'lof', 'strategy': 'iqr', 'threshold': 6.5}
20201017-163531	Info: feature_selector {'k': 80, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'True', 'use_select_best_k': 'True'}
20201017-163531	Info: normalizer {'fit_on': 'test', 'name': 'robustscaler'}
20201017-163531	Info: regression {'name': 'xgb'}
20201017-163531	Info: 
----------------------------------------
20201017-163531	Info: Start fit model
20201017-163531	Info: Stratified split
20201017-163531	Info: The number of samples for each 'age/class' are:
    67  69  75  73  72  68  70  74  66  71  78  65  76  77  79  63  81  64  82  60  62  80  83  61  55  58  59  84  56  87  86  85  57  52  49  53  54  48  50  51  88  89  95  92  46  45  42  90  47  91  94  43  97
y  55  54  51  51  50  49  47  47  44  42  38  36  35  35  34  33  30  25  24  23  22  21  20  19  19  17  16  15  15  14  14  14  12  11  10   8   8   8   8   7   6   5   3   3   3   2   2   2   1   1   1   1   1
20201017-163531	Info: 'Age' with only one sample: [47 91 94 43 97]
20201017-163531	Info: x_train_split: (1001, 34)
20201017-163531	Info: x_test_split: (111, 34)
20201017-163551	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.1, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.100000001, max_delta_step=0, max_depth=6,
             min_child_weight=3, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.9,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-163551	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}
20201017-163551	Info: Best training-score with mse loss: 0.5586814590031637
20201017-163551	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.558681        0.045340          0.983853         0.001416
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.556411        0.061210          0.967457         0.001957
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.552622        0.053320          0.887156         0.002623
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.551169        0.045764          0.970903         0.002060
24   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.550876        0.051416          0.981465         0.001944
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.548180        0.060739          0.914666         0.003171
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.547691        0.054991          0.888643         0.003504
6    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.545879        0.052764          0.742041         0.006249
3    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.543896        0.051634          0.741620         0.006631
12   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.543874        0.069960          0.915177         0.004152
22   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.542868        0.053909          0.985329         0.001321
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.542775        0.045918          0.918615         0.003296
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.542723        0.048580          0.889724         0.005192
33  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.542719        0.050655          0.717187         0.006852
21   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.540306        0.066249          0.983396         0.001720
16   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.540037        0.057081          0.916252         0.002852
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.539862        0.049467          0.973146         0.001551
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.539791        0.051711          0.888025         0.004384
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.539640        0.055552          0.967919         0.004448
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.539120        0.060279          0.893131         0.003393
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.538836        0.053548          0.970577         0.002819
30  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.537598        0.050504          0.718893         0.005976
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.536913        0.052448          0.891546         0.002528
10   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.536661        0.044236          0.920818         0.003187
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.536077        0.056353          0.897293         0.003681
26   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.536006        0.056034          0.982037         0.002209
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.535247        0.043740          0.914826         0.004054
0    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.534801        0.050735          0.742974         0.005420
34  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.534523        0.049840          0.720254         0.004783
7    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.534125        0.053459          0.742728         0.004298
20201017-163551	Info: R2 Score achieved on training set: 0.9800431672486868
20201017-163551	Info: R2 Score achieved on test set: 0.5705661165022669
20201017-163551	Info: Feature Selection
20201017-163551	Info: 
Remove constant features:
20201017-163551	Info: Following columns are constant: [193, 297, 339, 629]
20201017-163551	Info: Variance Threshold  0.0  -> nr of features:  828
20201017-163551	Info: Removed: 4 features
20201017-163551	Info: 
Remove constant features:
20201017-163551	Info: Following columns are constant: [1, 2, 6, 9, 16, 34, 50, 78, 82, 83, 145, 153, 166, 194, 205, 231, 255, 262, 265, 268, 315, 333, 360, 361, 371, 375, 376, 396, 419, 446, 451, 477, 478, 497, 502, 524, 583, 585, 606, 624, 635, 641, 660, 675, 680, 696, 715, 717, 725, 731, 743, 751, 758, 774, 807]
20201017-163551	Info: Variance Threshold  0.01  -> nr of features:  773
20201017-163551	Info: Removed: 55 features
20201017-163551	Info: 
Remove Correlated Features:
20201017-163557	Info: Following features are removed: {256, 130, 386, 643, 520, 137, 765, 268, 270, 271, 527, 407, 665, 156, 542, 671, 424, 682, 558, 305, 179, 691, 183, 567, 573, 318, 701, 449, 450, 67, 452, 705, 462, 208, 83, 467, 598, 217, 602, 347, 91, 734, 223, 354, 615, 745, 622, 369, 497, 498, 761, 764, 637, 254}
20201017-163557	Info: Nr. of features remvoed: 54
20201017-163557	Info: Correlation Threshold  0.8  -> nr of features:  719
20201017-163557	Info: 
Select Best Based on Impurity
20201017-163558	Info: TreeBasedFeatureSelector  -> nr features:  345
20201017-163558	Info: Start normalizer
20201017-163558	Info: 
--------------------------------------
20201017-163558	Info: Iteration 58
20201017-163558	Info: imputer {'name': 'median'}
20201017-163558	Info: outlier {'fit_on': 'test', 'name': 'lof', 'strategy': 'iqr', 'threshold': 6.5}
20201017-163558	Info: feature_selector {'k': 80, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'True', 'use_select_best_k': 'False'}
20201017-163558	Info: normalizer {'fit_on': 'train', 'name': 'robustscaler'}
20201017-163558	Info: regression {'name': 'xgb'}
20201017-163558	Info: 
----------------------------------------
20201017-163558	Info: Start fit model
20201017-163558	Info: Stratified split
20201017-163558	Info: The number of samples for each 'age/class' are:
    67  69  75  73  72  68  70  74  66  71  78  65  76  77  79  63  81  64  82  60  62  80  83  61  55  58  59  84  56  87  86  85  57  52  49  53  54  48  50  51  88  89  95  92  46  45  42  90  47  91  94  43  97
y  55  54  51  51  50  49  47  47  44  42  38  36  35  35  34  33  30  25  24  23  22  21  20  19  19  17  16  15  15  14  14  14  12  11  10   8   8   8   8   7   6   5   3   3   3   2   2   2   1   1   1   1   1
20201017-163558	Info: 'Age' with only one sample: [47 91 94 43 97]
20201017-163558	Info: x_train_split: (1001, 345)
20201017-163558	Info: x_test_split: (111, 345)
20201017-163856	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=6,
             min_child_weight=2, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.8,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-163856	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}
20201017-163856	Info: Best training-score with mse loss: 0.5584668757213164
20201017-163856	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.558467        0.052064          0.991919         0.001033
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.557514        0.051184          0.948424         0.002573
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.557217        0.058154          0.992202         0.000701
6    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.556062        0.055965          0.798580         0.005315
0    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.555374        0.055103          0.799452         0.005269
33  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.554356        0.048465          0.766709         0.005839
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.554116        0.056972          0.948133         0.003307
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.552612        0.041107          0.961530         0.003715
30  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.552566        0.053315          0.768350         0.004896
27  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.551863        0.049197          0.769450         0.005515
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.550308        0.055890          0.946315         0.003508
5    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.550243        0.045524          0.793956         0.006381
21   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.548847        0.052915          0.996730         0.000421
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.548823        0.054730          0.948720         0.003587
3    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.548794        0.051842          0.799046         0.004995
34  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.548156        0.052627          0.767500         0.006416
2    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.548043        0.045408          0.793889         0.006594
28  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.547729        0.051432          0.768387         0.005377
7    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.547188        0.059267          0.797938         0.005183
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.547106        0.046054          0.944566         0.004598
4    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.547103        0.055078          0.797776         0.005786
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.546967        0.059133          0.949529         0.002763
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.546878        0.057435          0.949615         0.003735
11   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.546374        0.049399          0.964039         0.003270
8    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.546173        0.056294          0.793175         0.005670
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.545875        0.050745          0.993618         0.000817
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.545380        0.047163          0.944436         0.004008
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.545082        0.054776          0.992935         0.000861
29  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.545005        0.054918          0.764408         0.005600
31  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.544986        0.050587          0.768095         0.005427
20201017-163856	Info: R2 Score achieved on training set: 0.9894323024772702
20201017-163856	Info: R2 Score achieved on test set: 0.5091145472508396
20201017-163856	Info: Start normalizer
20201017-163857	Info: 
--------------------------------------
20201017-163857	Info: Iteration 59
20201017-163857	Info: imputer {'name': 'median'}
20201017-163857	Info: outlier {'fit_on': 'test', 'name': 'lof', 'strategy': 'iqr', 'threshold': 6.5}
20201017-163857	Info: feature_selector {'k': 80, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'True', 'use_select_best_k': 'False'}
20201017-163857	Info: normalizer {'fit_on': 'test', 'name': 'robustscaler'}
20201017-163857	Info: regression {'name': 'xgb'}
20201017-163857	Info: 
----------------------------------------
20201017-163857	Info: Start fit model
20201017-163857	Info: Stratified split
20201017-163857	Info: The number of samples for each 'age/class' are:
    67  69  75  73  72  68  70  74  66  71  78  65  76  77  79  63  81  64  82  60  62  80  83  61  55  58  59  84  56  87  86  85  57  52  49  53  54  48  50  51  88  89  95  92  46  45  42  90  47  91  94  43  97
y  55  54  51  51  50  49  47  47  44  42  38  36  35  35  34  33  30  25  24  23  22  21  20  19  19  17  16  15  15  14  14  14  12  11  10   8   8   8   8   7   6   5   3   3   3   2   2   2   1   1   1   1   1
20201017-163857	Info: 'Age' with only one sample: [47 91 94 43 97]
20201017-163857	Info: x_train_split: (1001, 345)
20201017-163857	Info: x_test_split: (111, 345)
20201017-164154	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=6,
             min_child_weight=2, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.8,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-164154	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}
20201017-164154	Info: Best training-score with mse loss: 0.5584668757213164
20201017-164154	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.558467        0.052064          0.991919         0.001033
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.557514        0.051184          0.948424         0.002573
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.557210        0.058152          0.992202         0.000701
6    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.556062        0.055965          0.798580         0.005315
0    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.555374        0.055103          0.799452         0.005269
33  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.554356        0.048465          0.766709         0.005839
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.554116        0.056972          0.948133         0.003307
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.552572        0.041177          0.961530         0.003715
30  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.552566        0.053315          0.768350         0.004896
27  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.551863        0.049197          0.769450         0.005515
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.550308        0.055890          0.946315         0.003508
5    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.550243        0.045524          0.793956         0.006381
21   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.548847        0.052915          0.996730         0.000421
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.548823        0.054730          0.948720         0.003587
3    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.548794        0.051842          0.799046         0.004995
34  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.548156        0.052627          0.767500         0.006416
2    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.548043        0.045408          0.793889         0.006594
28  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.547729        0.051432          0.768387         0.005377
7    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.547188        0.059267          0.797938         0.005183
4    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.547103        0.055078          0.797776         0.005786
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.547088        0.046084          0.944566         0.004598
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.546967        0.059133          0.949529         0.002763
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.546878        0.057435          0.949615         0.003735
11   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.546346        0.049446          0.964039         0.003270
8    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.546173        0.056294          0.793175         0.005670
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.545875        0.050745          0.993618         0.000817
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.545380        0.047163          0.944436         0.004008
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.545082        0.054776          0.992935         0.000861
29  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.545005        0.054918          0.764408         0.005600
31  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.544986        0.050587          0.768095         0.005427
20201017-164154	Info: R2 Score achieved on training set: 0.9894323024772702
20201017-164154	Info: R2 Score achieved on test set: 0.5091145472508396
20201017-164154	Info: Feature Selection
20201017-164154	Info: 
Remove constant features:
20201017-164154	Info: Following columns are constant: [193, 297, 339, 629]
20201017-164154	Info: Variance Threshold  0.0  -> nr of features:  828
20201017-164154	Info: Removed: 4 features
20201017-164154	Info: 
Remove constant features:
20201017-164154	Info: Following columns are constant: [1, 2, 6, 9, 16, 34, 50, 78, 82, 83, 145, 153, 166, 194, 205, 231, 255, 262, 265, 268, 315, 333, 360, 361, 371, 375, 376, 396, 419, 446, 451, 477, 478, 497, 502, 524, 583, 585, 606, 624, 635, 641, 660, 675, 680, 696, 715, 717, 725, 731, 743, 751, 758, 774, 807]
20201017-164154	Info: Variance Threshold  0.01  -> nr of features:  773
20201017-164154	Info: Removed: 55 features
20201017-164154	Info: 
Remove Correlated Features:
20201017-164200	Info: Following features are removed: {256, 130, 386, 643, 520, 137, 765, 268, 270, 271, 527, 407, 665, 156, 542, 671, 424, 682, 558, 305, 179, 691, 183, 567, 573, 318, 701, 449, 450, 67, 452, 705, 462, 208, 83, 467, 598, 217, 602, 347, 91, 734, 223, 354, 615, 745, 622, 369, 497, 498, 761, 764, 637, 254}
20201017-164200	Info: Nr. of features remvoed: 54
20201017-164200	Info: Correlation Threshold  0.8  -> nr of features:  719
20201017-164200	Info: 
Select Best k features:
20201017-164208	Info: SelectKBest k = 80  -> nr features:  80
20201017-164208	Info: Start normalizer
20201017-164208	Info: 
--------------------------------------
20201017-164208	Info: Iteration 60
20201017-164208	Info: imputer {'name': 'median'}
20201017-164208	Info: outlier {'fit_on': 'test', 'name': 'lof', 'strategy': 'iqr', 'threshold': 6.5}
20201017-164208	Info: feature_selector {'k': 80, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'False', 'use_select_best_k': 'True'}
20201017-164208	Info: normalizer {'fit_on': 'train', 'name': 'robustscaler'}
20201017-164208	Info: regression {'name': 'xgb'}
20201017-164208	Info: 
----------------------------------------
20201017-164208	Info: Start fit model
20201017-164208	Info: Stratified split
20201017-164208	Info: The number of samples for each 'age/class' are:
    67  69  75  73  72  68  70  74  66  71  78  65  76  77  79  63  81  64  82  60  62  80  83  61  55  58  59  84  56  87  86  85  57  52  49  53  54  48  50  51  88  89  95  92  46  45  42  90  47  91  94  43  97
y  55  54  51  51  50  49  47  47  44  42  38  36  35  35  34  33  30  25  24  23  22  21  20  19  19  17  16  15  15  14  14  14  12  11  10   8   8   8   8   7   6   5   3   3   3   2   2   2   1   1   1   1   1
20201017-164208	Info: 'Age' with only one sample: [47 91 94 43 97]
20201017-164208	Info: x_train_split: (1001, 80)
20201017-164208	Info: x_test_split: (111, 80)
20201017-164251	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=6,
             min_child_weight=3, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.8,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-164251	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}
20201017-164251	Info: Best training-score with mse loss: 0.6024704892518428
20201017-164251	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.602470        0.045038          0.983385         0.001300
24   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.596815        0.046498          0.992337         0.000933
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.595835        0.043854          0.986002         0.000675
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.592578        0.050861          0.985687         0.001567
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.591916        0.040204          0.922786         0.002824
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.591190        0.047829          0.986926         0.001048
16   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.591020        0.045591          0.946885         0.001978
21   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.590328        0.052321          0.993193         0.000873
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.590261        0.049848          0.945884         0.003138
26   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.590232        0.043222          0.992646         0.000713
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.590032        0.042185          0.924951         0.003103
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.589507        0.050885          0.984816         0.001492
12   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.589135        0.045882          0.948350         0.001845
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.589107        0.037903          0.948595         0.002538
9    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.587905        0.056929          0.947964         0.001635
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.587222        0.046574          0.985046         0.001587
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.587188        0.041949          0.924573         0.003477
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.586578        0.052411          0.983204         0.001738
23   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.586051        0.041982          0.992594         0.000833
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.585892        0.052204          0.985316         0.000866
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.585436        0.043806          0.943809         0.003163
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.584377        0.036629          0.922359         0.003425
22   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.583068        0.049413          0.994184         0.000827
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.582245        0.043529          0.925111         0.002837
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.580485        0.044725          0.928140         0.002279
18   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.580436        0.053004          0.993155         0.001089
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.579902        0.056214          0.993347         0.000440
20   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.579692        0.044681          0.993198         0.000818
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.579335        0.046097          0.926025         0.002959
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.578151        0.042564          0.922229         0.003166
20201017-164251	Info: R2 Score achieved on training set: 0.9782578085100129
20201017-164251	Info: R2 Score achieved on test set: 0.5581479271744652
20201017-164251	Info: Start normalizer
20201017-164251	Info: 
--------------------------------------
20201017-164251	Info: Iteration 61
20201017-164251	Info: imputer {'name': 'median'}
20201017-164251	Info: outlier {'fit_on': 'test', 'name': 'lof', 'strategy': 'iqr', 'threshold': 6.5}
20201017-164251	Info: feature_selector {'k': 80, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'False', 'use_select_best_k': 'True'}
20201017-164251	Info: normalizer {'fit_on': 'test', 'name': 'robustscaler'}
20201017-164251	Info: regression {'name': 'xgb'}
20201017-164251	Info: 
----------------------------------------
20201017-164251	Info: Start fit model
20201017-164251	Info: Stratified split
20201017-164251	Info: The number of samples for each 'age/class' are:
    67  69  75  73  72  68  70  74  66  71  78  65  76  77  79  63  81  64  82  60  62  80  83  61  55  58  59  84  56  87  86  85  57  52  49  53  54  48  50  51  88  89  95  92  46  45  42  90  47  91  94  43  97
y  55  54  51  51  50  49  47  47  44  42  38  36  35  35  34  33  30  25  24  23  22  21  20  19  19  17  16  15  15  14  14  14  12  11  10   8   8   8   8   7   6   5   3   3   3   2   2   2   1   1   1   1   1
20201017-164251	Info: 'Age' with only one sample: [47 91 94 43 97]
20201017-164251	Info: x_train_split: (1001, 80)
20201017-164251	Info: x_test_split: (111, 80)
20201017-164335	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=6,
             min_child_weight=3, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.8,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-164335	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}
20201017-164335	Info: Best training-score with mse loss: 0.6024704892518428
20201017-164335	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
51  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.602470        0.045038          0.983385         0.001300
24   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.596815        0.046498          0.992337         0.000933
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.595835        0.043854          0.986002         0.000675
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.592578        0.050861          0.985687         0.001567
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.591916        0.040204          0.922786         0.002824
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.591190        0.047829          0.986926         0.001048
16   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.591020        0.045591          0.946885         0.001978
21   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.590328        0.052321          0.993193         0.000873
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.590261        0.049848          0.945884         0.003138
26   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.590232        0.043222          0.992646         0.000713
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.590032        0.042185          0.924951         0.003103
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.589507        0.050885          0.984816         0.001492
12   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.589135        0.045882          0.948350         0.001845
13   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.589107        0.037903          0.948595         0.002538
9    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.587905        0.056929          0.947964         0.001635
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.587222        0.046574          0.985046         0.001587
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.587188        0.041949          0.924573         0.003477
53  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.586578        0.052411          0.983204         0.001738
23   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.586051        0.041982          0.992594         0.000833
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.585892        0.052204          0.985316         0.000866
17   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.585436        0.043806          0.943809         0.003163
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.584377        0.036629          0.922359         0.003425
22   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.583068        0.049413          0.994184         0.000827
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.582245        0.043529          0.925111         0.002837
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.580485        0.044725          0.928140         0.002279
18   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.580436        0.053004          0.993155         0.001089
25   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.579902        0.056214          0.993347         0.000440
20   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.579692        0.044681          0.993198         0.000818
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.579335        0.046097          0.926025         0.002959
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.578151        0.042564          0.922229         0.003166
20201017-164335	Info: R2 Score achieved on training set: 0.9782578085100129
20201017-164335	Info: R2 Score achieved on test set: 0.5581479271744652
20201017-164335	Info: Feature Selection
20201017-164335	Info: 
Remove constant features:
20201017-164335	Info: Following columns are constant: [193, 297, 339, 629]
20201017-164335	Info: Variance Threshold  0.0  -> nr of features:  828
20201017-164335	Info: Removed: 4 features
20201017-164335	Info: 
Remove constant features:
20201017-164335	Info: Following columns are constant: [1, 2, 6, 9, 16, 34, 50, 78, 82, 83, 145, 153, 166, 194, 205, 231, 255, 262, 265, 268, 315, 333, 360, 361, 371, 375, 376, 396, 419, 446, 451, 477, 478, 497, 502, 524, 583, 585, 606, 624, 635, 641, 660, 675, 680, 696, 715, 717, 725, 731, 743, 751, 758, 774, 807]
20201017-164335	Info: Variance Threshold  0.01  -> nr of features:  773
20201017-164335	Info: Removed: 55 features
20201017-164335	Info: 
Remove Correlated Features:
20201017-164341	Info: Following features are removed: {256, 130, 386, 643, 520, 137, 765, 268, 270, 271, 527, 407, 665, 156, 542, 671, 424, 682, 558, 305, 179, 691, 183, 567, 573, 318, 701, 449, 450, 67, 452, 705, 462, 208, 83, 467, 598, 217, 602, 347, 91, 734, 223, 354, 615, 745, 622, 369, 497, 498, 761, 764, 637, 254}
20201017-164341	Info: Nr. of features remvoed: 54
20201017-164341	Info: Correlation Threshold  0.8  -> nr of features:  719
20201017-164341	Info: Start normalizer
20201017-164341	Info: 
--------------------------------------
20201017-164341	Info: Iteration 62
20201017-164341	Info: imputer {'name': 'median'}
20201017-164341	Info: outlier {'fit_on': 'test', 'name': 'lof', 'strategy': 'iqr', 'threshold': 6.5}
20201017-164341	Info: feature_selector {'k': 80, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'False', 'use_select_best_k': 'False'}
20201017-164341	Info: normalizer {'fit_on': 'train', 'name': 'robustscaler'}
20201017-164341	Info: regression {'name': 'xgb'}
20201017-164341	Info: 
----------------------------------------
20201017-164341	Info: Start fit model
20201017-164341	Info: Stratified split
20201017-164341	Info: The number of samples for each 'age/class' are:
    67  69  75  73  72  68  70  74  66  71  78  65  76  77  79  63  81  64  82  60  62  80  83  61  55  58  59  84  56  87  86  85  57  52  49  53  54  48  50  51  88  89  95  92  46  45  42  90  47  91  94  43  97
y  55  54  51  51  50  49  47  47  44  42  38  36  35  35  34  33  30  25  24  23  22  21  20  19  19  17  16  15  15  14  14  14  12  11  10   8   8   8   8   7   6   5   3   3   3   2   2   2   1   1   1   1   1
20201017-164341	Info: 'Age' with only one sample: [47 91 94 43 97]
20201017-164341	Info: x_train_split: (1001, 719)
20201017-164341	Info: x_test_split: (111, 719)
20201017-164949	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=4,
             min_child_weight=3, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.8,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-164949	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}
20201017-164949	Info: Best training-score with mse loss: 0.5714017610891575
20201017-164949	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.571402        0.055545          0.960583         0.001725
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.571252        0.045320          0.961366         0.001876
9    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.561109        0.043345          0.977036         0.001538
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.560195        0.055955          0.964264         0.002036
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.559168        0.041926          0.976541         0.001590
6    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.558191        0.053176          0.817278         0.004285
30  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.557976        0.041979          0.786343         0.004514
4    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.557373        0.044295          0.816777         0.003687
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.556407        0.050655          0.963165         0.001531
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.554721        0.047456          0.994899         0.000575
7    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.554665        0.044913          0.816037         0.003982
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.554447        0.034211          0.961678         0.002362
1    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.554256        0.046374          0.816581         0.003387
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.553764        0.045251          0.961319         0.002202
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.553736        0.044759          0.994897         0.000555
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.553454        0.037785          0.961419         0.002204
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.552801        0.051681          0.996026         0.000445
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.552719        0.041525          0.996181         0.000456
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.552612        0.050625          0.963161         0.002222
27  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.552561        0.041000          0.786360         0.004280
3    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.552250        0.049270          0.817767         0.004373
0    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.551498        0.051776          0.818358         0.003674
21   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.550718        0.059638          0.998072         0.000253
12   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.550419        0.055075          0.976329         0.001673
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.550011        0.047436          0.961809         0.001768
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.549774        0.043840          0.996428         0.000548
10   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.549353        0.039503          0.978203         0.001549
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.549277        0.054963          0.996365         0.000367
5    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.549047        0.042305          0.812533         0.004719
33  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.548980        0.043818          0.786294         0.004382
20201017-164949	Info: R2 Score achieved on training set: 0.9573789529100666
20201017-164949	Info: R2 Score achieved on test set: 0.593056128617266
20201017-164949	Info: Start normalizer
20201017-164949	Info: 
--------------------------------------
20201017-164949	Info: Iteration 63
20201017-164949	Info: imputer {'name': 'median'}
20201017-164949	Info: outlier {'fit_on': 'test', 'name': 'lof', 'strategy': 'iqr', 'threshold': 6.5}
20201017-164949	Info: feature_selector {'k': 80, 'remove_constant': 'True', 'remove_constant_threshold': 0.01, 'remove_correlated': 'True', 'remove_correlated_threshold': 0.8, 'use_select_best_based_on_impurity': 'False', 'use_select_best_k': 'False'}
20201017-164949	Info: normalizer {'fit_on': 'test', 'name': 'robustscaler'}
20201017-164949	Info: regression {'name': 'xgb'}
20201017-164949	Info: 
----------------------------------------
20201017-164949	Info: Start fit model
20201017-164949	Info: Stratified split
20201017-164949	Info: The number of samples for each 'age/class' are:
    67  69  75  73  72  68  70  74  66  71  78  65  76  77  79  63  81  64  82  60  62  80  83  61  55  58  59  84  56  87  86  85  57  52  49  53  54  48  50  51  88  89  95  92  46  45  42  90  47  91  94  43  97
y  55  54  51  51  50  49  47  47  44  42  38  36  35  35  34  33  30  25  24  23  22  21  20  19  19  17  16  15  15  14  14  14  12  11  10   8   8   8   8   7   6   5   3   3   3   2   2   2   1   1   1   1   1
20201017-164949	Info: 'Age' with only one sample: [47 91 94 43 97]
20201017-164949	Info: x_train_split: (1001, 719)
20201017-164949	Info: x_test_split: (111, 719)
20201017-165557	Info: Best estimator from GridSearch: XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, eta=0.08, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.0799999982, max_delta_step=0, max_depth=4,
             min_child_weight=3, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1, random_state=41,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.8,
             tree_method='exact', validate_parameters=1, verbosity=None)
20201017-165557	Info: Best alpha found: {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}
20201017-165557	Info: Best training-score with mse loss: 0.5714017610891575
20201017-165557	Info:                                                                                                                           params  mean_test_score  std_test_score  mean_train_score  std_train_score
42  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.571402        0.055545          0.960583         0.001725
39  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.571252        0.045320          0.961366         0.001876
9    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.561109        0.043345          0.977036         0.001538
37  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.560195        0.055955          0.964264         0.002036
15   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.559168        0.041926          0.976541         0.001590
6    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.558191        0.053176          0.817278         0.004285
30  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.557976        0.041979          0.786343         0.004514
4    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.557373        0.044295          0.816777         0.003687
43  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.556407        0.050655          0.963165         0.001531
45  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.554721        0.047456          0.994899         0.000575
7    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.554665        0.044913          0.816037         0.003982
38  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.554429        0.034238          0.961678         0.002362
1    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.554256        0.046374          0.816581         0.003387
44  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.553764        0.045251          0.961319         0.002202
48  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.553736        0.044759          0.994897         0.000555
36  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.553454        0.037785          0.961419         0.002204
52  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.552801        0.051681          0.996026         0.000445
46  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.552719        0.041525          0.996181         0.000456
40  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.552612        0.050625          0.963161         0.002222
27  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.552561        0.041000          0.786360         0.004280
3    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.552250        0.049270          0.817767         0.004373
0    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.551498        0.051776          0.818358         0.003674
21   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.550718        0.059638          0.998072         0.000253
12   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.550419        0.055075          0.976329         0.001673
41  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 4, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.550011        0.047436          0.961809         0.001768
50  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.549772        0.043841          0.996428         0.000548
10   {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 4, 'min_child_weight': 1, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.549353        0.039503          0.978203         0.001549
49  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 6, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 0.9}         0.549277        0.054963          0.996365         0.000367
5    {'booster': 'gbtree', 'eta': 0.1, 'max_depth': 2, 'min_child_weight': 2, 'objective': 'reg:squarederror', 'subsample': 1.0}         0.549047        0.042305          0.812533         0.004719
33  {'booster': 'gbtree', 'eta': 0.08, 'max_depth': 2, 'min_child_weight': 3, 'objective': 'reg:squarederror', 'subsample': 0.8}         0.548980        0.043818          0.786294         0.004382
20201017-165557	Info: R2 Score achieved on training set: 0.9573789529100666
20201017-165557	Info: R2 Score achieved on test set: 0.593056128617266
20201017-165557	Info: Finished processing in 9985 [s].
